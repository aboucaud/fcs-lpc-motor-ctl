package main

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _bower_json = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x5f\x6f\xd3\x30\x10\x7f\xef\xa7\xa8\xba\xb7\x8a\x24\xed\x56\x40\x4c\x08\xa1\x09\xde\x91\xc6\xdb\xc4\x26\xc7\xb9\x26\x46\x8e\xcf\x9c\x2f\xda\xaa\x69\xdf\x1d\x3b\x6e\xda\xa4\x24\x2d\x4f\x6d\xee\xf7\xc7\xbf\x3b\xff\x79\x9d\xcd\xe7\x0b\x23\x6a\x58\xdc\xce\x17\x5b\xe9\x12\x6d\x65\x52\x23\x23\x2d\xde\x05\xa8\xc2\x1a\xac\x28\x5b\xb8\x62\xb6\xee\x36\xcb\x4a\xc5\x55\x93\xa7\x12\xeb\xac\xc4\x44\x3b\xc7\xd9\x88\x52\x34\x5c\x21\x39\x2f\x7c\xf0\x9f\xbe\x70\x0f\xb9\x70\xac\xc0\xcc\xef\x94\x01\x9e\x7f\xce\xc3\xcf\x57\x09\x64\x52\x59\x7d\x59\x78\xd6\xaf\x56\x59\x80\x93\xa4\x2c\x2b\x34\x61\xd9\x68\x57\x0b\xd5\xff\xc2\xa2\xd1\xf0\x73\x67\x43\xb0\x87\x28\xd3\x4a\x82\x71\x6d\xd2\xbb\xfb\x6f\x91\xa7\x4a\x83\x04\xc7\x0c\xcb\x65\x96\x2e\x5b\x28\xb4\x8d\x05\x3c\x45\x27\xd7\xd5\x72\x7c\x06\x7a\xf2\xad\x59\x34\x60\xf8\x50\x67\x70\xdc\xff\xef\xfa\x71\x2d\x98\x02\x8c\x54\x10\xba\x7d\x8d\x24\x2b\x2c\x50\x52\x83\x69\x42\xa0\x1f\xa8\x77\x35\xd0\x77\x0d\x75\x70\xcd\x8e\xe8\xd5\xe3\x3a\xbd\x4e\xaf\x3b\xef\x08\x14\x24\x7c\x8c\xc4\x0a\x03\x7a\x5a\xde\x67\x05\x9b\x55\xfa\x61\x68\x53\x81\x28\x2e\xdb\xf4\x59\xc1\x66\x9d\xde\x0c\x6d\x9c\x56\x9e\x30\x6d\x10\xf1\x98\xe0\xd3\x50\xca\x88\x3a\x17\x67\xb4\x7b\x42\x5c\x77\xd3\x89\x09\x73\x7f\x90\x92\x2d\x1a\xde\x0a\xd9\x6e\xe9\xe3\x2a\xdd\x9c\x06\xcb\x1b\xe6\x78\x46\xc6\xcd\x23\x1e\x83\xad\xd7\x43\xad\x62\xa8\xa7\x95\x01\x1d\x9f\x85\x24\xd4\xfa\x3f\x27\x3b\x42\xde\x87\x79\x7f\x12\x46\xa2\xb9\xd8\x4d\x8f\x34\xba\xdb\xb5\x60\x20\x25\xce\xe4\xe9\x18\xa3\x72\x29\xa8\x98\x96\x06\x34\x0e\x64\x7d\xba\xc3\x65\xa9\xe1\x62\xf8\x01\x6d\x3f\x84\xcd\x89\x93\xc8\xdd\x19\x03\x8f\x06\xdd\x4d\x7a\x98\x9d\x22\x3f\x90\xf0\x38\x8d\xca\x8e\x68\x5c\xee\xe3\x40\xb6\x45\x1a\xdd\xfe\x03\x78\x9a\xb1\x05\xfc\x9b\x86\x25\xe1\x73\xc2\xf0\xc2\x82\x40\x4c\x5a\xfc\xc3\xdc\xfb\xad\x3a\xbf\xdf\x7f\x1a\xa0\x5d\x7b\xb2\xfd\xf5\x4f\x0f\x75\x1b\xdd\x92\xad\x46\x0e\x28\xa9\x9d\x28\xb2\x41\x75\xd0\x87\x86\x97\x44\x8b\x1d\x36\x3c\xdd\xce\x91\x13\x5f\x9b\xc3\x99\xd6\x58\x2a\x3f\x24\x2f\xea\xe6\x51\x61\x43\x5a\x01\x71\x36\xc4\xae\xfc\xfd\xf3\x0d\x84\x57\xef\x6d\xf6\x36\xfb\x1b\x00\x00\xff\xff\x04\xf6\x38\x8f\x37\x06\x00\x00")

func bower_json_bytes() ([]byte, error) {
	return bindata_read(
		_bower_json,
		"bower.json",
	)
}

func bower_json() (*asset, error) {
	bytes, err := bower_json_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "bower.json", size: 1591, mode: os.FileMode(420), modTime: time.Unix(1455806980, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _favicon_ico = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x94\x7d\x4c\x55\x65\x1c\xc7\x9f\xab\xe6\xda\x5a\x41\xb9\xb5\x85\x93\xdd\xd6\x8b\x28\xe5\xac\x10\x73\x72\x31\x5e\xe6\xc2\xd8\xa5\x49\x2f\xda\x35\xbb\xad\xc1\x6e\xbc\x94\xcb\x90\xba\x8b\x09\x82\x12\x6f\x37\x27\x83\x08\x0a\x48\x97\x97\x80\x41\xca\xa0\x04\xe2\xc2\x15\x24\x0b\x3d\xbc\x5c\xf4\xc2\xbd\x89\x88\xbc\xc4\x25\x2e\x01\x5a\x9b\x7f\x7c\x3a\xf7\xdc\x51\xba\x66\xbf\xb3\xef\xce\x73\x7e\xe7\xfb\x79\x9e\xf3\xfc\x9e\xe7\x39\x42\xa8\xe4\xcb\xd7\xd7\x73\x57\x0b\xc3\x0a\x21\x1e\x16\x42\x04\xc8\x92\x53\x72\xc6\x9b\x5f\x8a\x55\xf7\x79\x75\xb7\xe8\xf8\x32\x5e\xdf\x64\x8a\xb1\x34\x14\x44\xd2\x60\x7a\x81\xea\xc3\xc1\x14\x25\xf8\x91\x1e\x2b\x2c\x29\x31\x42\x7f\x37\x6e\xe4\xdc\x71\xf5\x40\x63\xae\x64\x6f\x2f\x67\x66\xb4\x97\xb9\xdf\x1c\xcc\x4e\xd8\x98\x19\xeb\x65\x7a\x54\xc2\x71\xa1\x91\xca\x2c\x2d\x89\x51\x42\xd2\x47\xdc\xf6\x41\x72\xcc\x8f\x9d\x57\xbb\xec\x2d\xee\xb9\x49\x27\x8b\xf3\x73\xcc\x4e\x5e\xc1\x3d\x7d\x8d\xe6\xd2\x5d\x54\x1d\x0c\x60\xe2\xca\x45\xfe\x98\x9d\xc6\xed\x9a\xa0\xa7\xa3\x8a\xf8\xe8\x07\xdc\xb1\x5b\xff\xed\xe3\xaf\x99\x41\xe9\xd6\x0d\x17\x37\x17\x17\xb0\xb7\x95\xd1\x59\x99\x44\x73\xf1\x1b\xb8\xc6\x87\x39\x9e\xea\x47\x4d\x76\x28\x8b\x0b\x0b\x98\x12\xd7\xe2\xb4\x59\xf9\xa9\xad\x0a\xed\x66\x21\x79\xd8\x89\xde\x7a\xfd\xfc\x78\x1f\xb7\xfe\x9c\x67\xdc\xd6\xc2\xe5\xb6\x52\x86\x3a\x4f\x32\xd4\x5d\xab\x30\xb5\x47\x82\xa9\xce\xd6\x28\xed\x8f\x5f\x16\x64\xc6\xad\x65\xa8\xdf\x4a\xe1\x11\x03\x21\xeb\x84\xde\xde\x5a\x68\xb9\x31\x3b\xc6\xef\x23\x3d\x4c\x0e\x9f\x57\x7c\x1e\xb9\xc6\x1d\xf4\xb6\x16\x52\x9a\x74\x2f\xdf\x1e\xf6\xf2\xa9\x31\x82\x84\x17\x05\x15\x26\x03\x03\x17\xad\x04\x3f\x2e\x2c\x7d\x8d\xf9\xdc\x9c\x9b\xc4\xf6\xc3\x51\xa6\xaf\xda\x18\xe9\x6d\xa6\xc9\xa4\xa5\x26\xe3\x59\x2e\x75\x7e\x4d\xd9\xbe\x55\x9c\x3c\xe4\xe5\x3f\xd4\x0a\xf2\xf7\x6b\x38\x51\x94\x82\xd3\x2e\xf1\x5a\x54\x10\x3f\xd7\xa4\xb1\x30\x73\x0d\x6b\x45\x22\xce\x5f\x4e\x33\x25\xf7\xd1\xdf\x5a\x42\xbf\xa5\x44\x61\x06\xbb\xcc\xf4\x9c\xf1\xb6\x4f\x57\x1a\x19\x1e\xe8\x22\x73\x7f\x34\x99\x07\x74\x04\x3d\x71\x3f\xed\xe5\x71\xf2\x5a\x39\x69\xfc\x4c\x4b\x5f\x4b\xb1\xe2\xb3\x9d\xfd\x8a\x73\xf5\x69\x58\xab\x8d\xca\xb3\xd4\x61\xa6\x28\x55\x43\xf9\xa7\x3a\xec\xfd\x5d\xbc\x1e\xee\xc3\xf3\x4f\x0a\xd6\xf9\xa9\x38\x95\xb7\x55\x5e\xe7\x41\xea\xb2\x37\xf1\x7d\x71\x8c\xe2\xaf\xcf\x0f\xe7\xd8\x3b\x2a\x72\x75\x02\x6b\x5d\x8e\x52\xb7\xf7\x5f\x12\x1c\xd0\xf9\x2b\xfc\x7b\x6f\x69\xd8\xb0\x46\xb0\xf1\xd1\x65\x7c\xfe\xee\x4a\xcb\x84\xe3\x2c\x56\x73\x12\x75\x79\x61\x0a\x6f\xce\xd2\x90\xb3\x5b\x70\xe8\x15\x41\x6e\x9c\x3f\x3d\xed\xe6\x7f\xea\xea\x51\xcc\x36\x7f\x02\x1e\x11\x6c\x59\xbf\xdc\x52\xf0\xa6\xd0\x37\x97\x1b\xb8\x3e\x64\xa5\x36\x77\x87\xf2\xbe\xf2\x13\x0d\x07\x77\x0a\x3e\x92\xc7\x6d\x90\xe7\xec\x9a\xba\x8e\xf9\x0b\x23\x19\x1f\x44\xf3\x6a\xa4\x3f\x81\xab\x05\xcf\x3c\xb6\x8c\xf0\xe7\xee\x51\xf6\x73\xce\x5e\x5f\xc9\xd6\x59\xc5\xb8\xf3\x82\xc2\x57\x64\x46\x2b\xb5\x4e\xde\x21\xf8\xe6\x58\x02\x9d\x2d\x66\x74\x91\x3e\x68\x43\x7c\xe8\x6a\x6f\xe2\xa9\x35\x2a\xb6\x6d\x5c\x21\x2d\xed\x3f\x79\x1c\x75\x41\xf2\x06\xf7\xaf\x97\xba\x99\x99\x1a\xc5\x39\xd8\x4d\x7a\x5c\x20\x6f\x47\x08\x76\x87\x0a\xf2\xd2\x74\x94\x98\x8c\x1c\xcd\x36\x92\x9a\xbc\x87\x90\xa7\x57\xb8\xb7\x6f\x5e\x79\xc7\x19\x48\x8a\x12\xea\x7d\x3b\x7d\xa5\x53\x27\x32\x18\x75\x4a\x5c\x75\x48\x74\xfd\x58\xc5\x99\xef\xca\x70\x5c\x96\x88\x08\xf2\x63\xfd\x6a\x95\x67\xce\x52\xe4\xa6\x3b\xd9\xdb\x63\x57\xa8\xd0\xef\xd9\xfe\xa0\x25\x25\x3e\x8c\xbc\x74\x03\x59\x46\x03\x7b\x63\xc3\xd8\x12\xf8\x90\x25\x78\xed\xf2\xff\x9c\xdf\x39\x1f\xb5\xba\x7d\xb9\x5a\x9d\xae\xf2\x4a\xfe\x63\xfc\xaf\x96\x7c\x1e\xc6\xc3\xfe\x1d\x00\x00\xff\xff\xb8\x6d\x5d\xdb\x7e\x04\x00\x00")

func favicon_ico_bytes() ([]byte, error) {
	return bindata_read(
		_favicon_ico,
		"favicon.ico",
	)
}

func favicon_ico() (*asset, error) {
	bytes, err := favicon_ico_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "favicon.ico", size: 1150, mode: os.FileMode(420), modTime: time.Unix(1455561960, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _fcs_lpc_motor_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x5a\x6d\x73\xdb\x36\xf2\x7f\x2d\x7d\x0a\x84\x9d\xff\x34\x69\x43\x4a\x56\xec\xff\x79\x54\x49\x73\xa9\x9b\xce\x75\xc6\x49\x33\x75\xee\x45\xa7\xd3\xc9\x40\x24\x24\x21\x06\x09\x96\x04\x2d\x2b\x1e\x7f\xf7\xdb\xc5\x03\x9f\x44\xc9\xb6\xec\x4b\x2f\x7e\x61\x81\xcb\xc5\x62\xb1\xbb\xd8\xfd\x01\xe0\xe4\xd9\x4f\xbf\x9e\x7d\xf8\xfd\xfd\x1b\xb2\x52\xb1\x98\xf5\x27\xcf\x7c\x9f\x9c\xc9\x74\x93\xf1\xe5\x4a\x91\xd1\xf0\xe8\xff\xc9\x87\x15\x23\x4b\xe9\x8b\x3c\x57\xe4\x75\xa1\x56\x32\xcb\x03\xf2\x5a\x08\xa2\x79\x72\x92\xb1\x9c\x65\x57\x2c\x0a\xfa\x84\x40\xef\x7f\xe7\x8c\xc8\x05\x51\x2b\x9e\x93\x5c\x16\x59\xc8\x48\x28\x23\x46\xe0\x71\x29\xaf\x58\x96\xb0\x88\xcc\x37\x84\x92\x1f\x2f\x7e\xf2\x73\xb5\x11\xcc\xf4\x13\x3c\x64\x09\xf4\x55\x2b\xaa\x48\x48\x13\x32\x67\x64\x21\x8b\x24\x22\x3c\x01\x22\x23\xe7\xbf\x9c\xbd\x79\x77\xf1\x86\x2c\xb8\x60\x66\xac\x59\xbf\x3f\x11\x3c\xb9\x04\x15\xc4\xd4\xe3\x71\x2a\x33\xe5\x91\x55\xc6\x16\x53\x6f\x2e\xd7\x2c\xfb\x18\x4a\x20\x26\x2c\x51\xf9\x20\x95\x62\x13\xb3\xcc\xfd\x06\x38\x61\x0f\x25\xe4\x61\xc6\x53\x45\xf2\x2c\xec\xe8\xf5\xe9\xaf\x82\x65\x9b\x41\xc4\x73\x65\xdb\xc1\xa7\xdc\x9b\x4d\x06\xa6\xd7\x83\x34\xe0\x99\x4c\xfc\x85\x60\xd7\xbe\xa0\x1b\x59\xa8\x2d\x42\xa5\xd3\xc3\x64\xd2\x42\xc9\x65\x26\xd7\xbe\x62\xd7\x8a\x66\x8c\xee\x20\x3b\xf9\x0f\x55\x59\x66\x71\xd5\x3a\x50\x08\x0f\x65\x52\x6f\x1e\x28\x26\xa5\x4b\x56\x6f\x1e\x60\xb2\x94\xa6\x2c\xf3\xe7\x85\x52\x32\x69\x3c\x3c\x5c\x25\xd3\x3b\xa4\x59\x54\x6b\x1e\x2a\x26\xca\x28\xd0\x61\x5a\x09\x13\x1d\xa4\x43\xc5\xa2\xb5\x9b\xb3\xad\x51\x0e\x16\x9a\xa4\x10\xbf\xb5\xf6\x53\x08\x3a\x3c\x4c\xad\x2c\xc5\xe2\x5a\xf3\x50\x31\x31\x55\x2c\xe3\x54\xb4\x1e\x0f\x15\x07\x89\x42\x0a\xe1\xaf\x18\x8d\x5a\xde\xed\x78\x73\xf0\x20\x82\x47\x98\xdb\x6a\x0f\x87\x8a\x52\x74\x5e\x6f\x1e\x2c\x46\x2e\x97\x82\x35\x03\xaf\x41\x3b\x5c\xb0\x14\x73\x9a\x35\x9f\x0e\x49\x03\xa6\x0e\x40\xfe\x95\x6a\x80\xff\xfc\x70\x45\xb3\x43\x02\x79\x4b\x90\xe2\x31\xf3\x53\x51\x2c\x79\x72\x80\x62\x42\x42\x3f\x1f\xa5\xea\xc4\xdb\x7c\xac\xe4\x45\x32\xf6\x63\x19\x15\x02\x4a\x6b\x34\xf5\x16\x61\xee\x8b\x34\x04\x92\x92\x99\xaf\x3b\x01\x5b\x6f\x02\x0b\x21\x15\x10\xc2\xd0\xee\x4d\x74\xb9\x9d\x41\xed\x24\x64\xbc\x92\x50\xcf\x6f\x74\x9b\x10\xa8\x6f\xc0\xb5\x19\x93\xb9\x90\xe1\xe5\x0f\x96\x3a\x97\xd7\x7e\xce\x3f\xf3\x64\x09\x2f\x64\x86\x51\x0a\x24\xf7\x16\x97\xab\x4f\x05\x5f\x26\x63\x02\xa5\x1b\x56\x89\x7b\x13\xd3\x0c\x86\x1f\x93\x93\xf4\xba\x22\x5d\xfb\x6b\x1e\xa9\xd5\x98\x8c\x4e\x86\x35\x3a\xcc\xcd\xd1\x87\x25\xfd\x16\x95\x1d\x58\x6d\xb1\xdd\x34\x02\x81\xfc\xa5\x29\x7a\xda\x1f\x57\x34\x89\x04\xfb\x68\xe6\x4c\x0a\x40\x23\x09\x8d\xd9\xd4\xbb\xe2\x39\x07\x63\xa0\x19\x40\x04\x8f\x97\x84\x5e\x51\xc8\x30\xa6\xd4\xaf\x94\x4a\xc7\x83\xc1\x7a\xbd\x0e\x10\xda\x04\x32\x5b\x0e\x80\x1f\xaa\x4b\xc4\x16\xb4\x10\xe0\x4b\x00\x1a\xda\x1d\xf2\xe3\x51\x90\x26\x4b\x8f\x50\xa1\xa6\x9e\x11\xe2\x0d\xb4\x45\x5b\xee\x41\x8b\x0f\x2a\x93\xc3\x93\xc3\x09\xbd\xf7\x26\x4c\x9e\xdf\x40\x37\x9e\x8f\x3b\x1d\xf6\x12\xde\xb5\x67\x34\x26\x8b\x22\x09\x15\x97\xc9\x73\x76\x05\x66\x7e\x41\x50\x42\x2f\x63\xaa\xc8\x12\x02\xdc\x81\xe1\x3e\x47\x66\xcb\xf2\x03\x70\xdc\x82\xb0\x5b\x6c\x55\x58\x65\x32\xa8\x82\x06\x94\xbb\x23\x86\x68\x9a\xea\x08\xd2\x6e\x00\xf8\x36\xf5\xc2\x22\x57\xd0\x43\x13\xb4\x55\x5d\x10\x81\x3e\xd6\x89\x47\xc3\xe1\xff\xe1\xe8\xbd\x15\x43\x74\x58\x23\xb8\xa0\x18\x12\xc4\x25\x9a\xb4\x2b\xbe\xe0\xd5\x3f\x61\x74\xb1\x79\xee\x5b\x64\xe4\x03\xea\xe4\x9f\x65\xa2\xa8\x30\x93\xc3\xa8\x98\xcb\x68\x63\x06\x4f\x69\x14\x69\x29\xc7\x3a\x84\xec\xfb\x9d\x59\xd6\x76\x92\xe0\x6e\x30\xeb\x18\xb2\x9c\x14\x85\x62\x7a\x60\x25\xd3\xf1\x50\xb7\x34\xbc\xb5\xed\xb9\x84\x94\x15\x83\xf2\xfa\x49\xb0\x85\x72\xed\x39\x0d\x2f\x01\x64\x01\x4e\xf5\x43\x29\x64\x36\x26\x57\x34\x03\xbd\xcd\xe0\xcb\x8c\x6d\x7c\x08\xec\x97\xe4\x1b\xc6\xd8\x8b\x7b\xa8\x16\x40\x71\x56\xe0\xc3\xd6\xc4\x4e\xb7\xe6\x85\xc9\xd9\x30\x6d\xab\x20\x50\xf5\x65\x46\x37\x5a\x45\xa7\x0c\xf6\xf0\x73\x26\x98\x8e\x26\x1f\xd2\xa6\xe3\xcf\x58\xd4\x96\x6e\xf2\xea\xae\x01\xe6\x82\x62\x9a\xe8\xec\x12\x28\xae\x20\x60\x6e\x9a\x4e\xaf\x4f\x20\xc8\x53\x1a\x32\x2b\xbc\xed\x69\xc4\xc3\x95\xa1\x02\x93\x59\x0c\x6b\x57\xc6\x71\x7c\x31\xc5\x65\x58\x79\x17\xb7\x1a\x90\x8c\xd7\x3e\x24\x35\x63\xe7\x92\x77\xf0\x1d\x76\x80\xf7\x8a\x87\x54\x80\x45\xb4\x3d\xda\x0a\x8f\x8e\xd3\xeb\xea\x5f\x35\x50\xbb\x9f\x8f\x0e\x83\xc1\x77\xcd\xc7\xf1\xbf\x68\xc6\xb5\xd1\xdf\xff\x04\x4b\x8a\x2f\x38\x8b\xec\x94\x7b\xbd\xef\x06\xfd\x7e\x3d\xf9\x4d\xea\xe9\xa4\x37\xd9\x1d\x39\x0b\x7e\x0d\x5b\xab\x50\xd0\x1c\x96\x2a\x5a\xd1\xd3\x3d\x5c\x17\xeb\x1e\x9d\x0c\x1d\xad\x86\x04\x09\xb6\xa7\x5e\xcc\x92\xc2\x23\x0d\xf4\x69\xaa\x36\x6c\x79\xb6\xfa\x58\x59\x11\xbf\x72\xc3\x5a\xc7\x9a\x08\x30\x53\xf4\x66\xe7\x17\x17\x1f\xc8\xcf\x67\x17\xe4\x2d\xe6\x95\x1c\xb2\x10\xbf\x32\x39\x79\xd0\x52\xad\xdf\x12\x67\xd7\x82\xd7\x50\xba\x0e\x8a\xcd\x0b\xd3\xc7\xd0\xcb\xae\x76\x70\xc3\xa0\x39\x66\xb0\x35\x85\xd8\x9d\x80\x92\x49\x99\xef\xb0\x5c\x78\x44\x87\xf5\xd4\x83\x75\xe0\xcd\xde\x0d\x5e\x83\xf9\x81\x67\x56\x69\x8a\x12\x56\x99\x6b\x9a\x79\x90\x8b\x22\x86\x70\xd9\xb8\xf7\xf3\xac\x83\xd5\xea\x8c\x66\x75\xa4\xd2\xf8\xe0\xd8\x99\x16\xe5\x0f\x21\x4f\xbe\x3a\x0e\x8e\x4e\x4e\x83\xa3\xd1\x49\x30\x1a\xbd\x1a\x9f\x0c\x47\x93\x1a\x98\xdd\xd3\xf9\xa8\xdd\xf9\x78\x57\x67\x47\x33\xda\x38\x22\x5a\x41\x67\x7c\x48\x0e\x8a\xaa\x22\x87\x79\x6f\xd3\xac\xa1\xb5\x45\x48\xcd\xea\xb8\xee\x9c\xcd\xab\x35\xe8\xb5\xe6\xaf\x93\x95\x49\x3d\x0c\x0c\x7f\x73\xe3\xda\xb7\xb7\x9e\x09\xdc\xf6\x04\xa1\xc7\xec\x4c\x82\x81\x93\x28\x9f\x54\x78\xb4\x8b\xed\xcd\x35\xb4\x54\x07\x53\x8d\x94\x57\xf3\xad\x36\x8f\xbb\x34\xaa\x06\xa9\xc5\xa2\x59\xce\xc4\x2d\x67\x1b\xdd\x7e\x2b\xce\x3a\xfb\x54\xc5\x6b\x67\xaf\x86\x1b\x42\x25\x9a\x3e\x40\x42\x37\xab\x29\xed\x50\x22\x5a\x4e\x2b\xc9\x95\x5e\xf5\x60\x6e\x84\x6b\x53\x62\x2c\x13\x44\x4d\x4d\x79\x8e\xd8\xef\x14\xa6\x17\x97\xf1\x42\x4e\x7e\x7d\x77\xfe\x7b\x73\xe1\xd4\xb6\xeb\x8d\x30\xea\xd7\x7d\xb4\xb5\xaa\x2d\x4f\xbf\x62\xe9\x48\x7a\x07\xe3\x2d\x04\x37\x88\xb6\xd2\x4c\xa2\xda\x9c\xe5\x63\x93\xbe\x5d\x18\xc0\xa3\xda\xa4\x6c\x4c\xde\x15\xf1\x9c\x65\x2f\xa1\xac\x8b\x02\x1e\x87\x88\xab\x34\xb8\x02\x08\x46\xa3\xcd\x0e\x78\x06\x20\x40\x23\x51\x32\x25\x91\x0c\x0b\x58\x71\x2a\x58\x32\xf5\x46\x30\x6c\xfe\xb8\xf9\x25\x7a\x5e\xa5\x1f\x53\x1a\xb0\x19\xf0\x04\x0a\xc9\xbf\x3e\xbc\x3d\x87\x8e\x88\xed\x90\xb8\x03\xcd\xb5\xe1\x5c\x17\x9a\x6b\xac\x61\x73\xda\xb5\x0b\xcd\x35\x4e\x42\x00\xb7\x30\x5d\x11\xf7\xc3\x1b\xc8\x97\xfe\xc9\x70\x88\x7a\xd9\xb7\xeb\x15\x47\x20\x05\xa5\x72\x5b\xde\x1f\x14\xec\x74\xc5\xfe\xbc\x5b\xae\x66\xb7\x92\x4b\x51\x78\xb6\x82\x5d\x5b\x98\xc8\x54\x6c\xdf\x60\xb2\x06\xc9\x00\xb8\x26\x0d\xe1\x9d\xa1\x80\x5c\xb5\x42\x79\x0b\x58\x99\xfe\xda\xc2\xd5\x04\x40\x3c\x15\xf8\xb6\x2a\xc1\xf5\x3d\xd4\xa4\xa6\x0b\x06\x22\x28\x32\xf5\xaa\xda\x46\x2e\x8c\xa5\x09\x44\x11\x6c\x13\x38\x96\xd4\x91\x5e\xe6\x8d\xb2\x06\xbd\xfd\x46\x6d\x9b\x40\x8a\x12\xcc\xae\x08\x85\xc0\xd6\xad\x14\x05\x2b\x11\xf4\xd4\xba\x4c\xbd\x1a\x02\xc2\x09\x7b\x33\x57\x52\xd5\x0a\xd9\x66\x93\xba\xd5\xcb\x28\x30\xee\xf7\x75\xbc\x7a\xc4\xd4\xf3\x1c\xf7\x7c\x38\x68\x44\x32\xca\xf3\x1a\x72\xc0\x0e\x6b\xae\xc2\x15\xd1\x6e\xf0\x66\xbf\x61\xbf\x49\xe3\xa8\x6c\x66\x46\x1c\xa8\xec\x9e\x7a\xfe\x26\x95\x36\x07\xf9\x89\x67\x06\x37\xdd\x53\x67\xdb\xcf\x8f\x38\x94\x69\xab\x69\xa9\xb9\x4b\xb3\x30\x84\x19\xcd\x56\xef\xc7\xa9\xfa\xfe\xed\x7d\x0d\x9a\xc6\xf9\x17\x52\xea\x75\xb2\x2c\x04\xe4\x94\xf7\x76\xd3\x72\x3f\x05\x69\x02\x9e\xfe\x42\x1a\x7e\x80\x45\xc2\x32\x18\x36\x63\xf7\x53\x0e\x57\x95\x3f\xdc\xd6\x2e\x2f\x16\x80\x08\xa6\xde\x99\xf7\xbf\xa4\xe8\xd1\xd7\xa2\xe8\xe8\x6b\x51\xf4\xd5\x93\x2b\x0a\xad\x32\x75\x42\xbb\x4c\xa9\x0e\xeb\x9c\xd3\x5c\x11\xa3\x02\x29\xd2\x08\x32\xfa\xd8\xbe\x22\x84\xf4\x9a\xfb\x02\xab\xa9\x61\x33\x63\xeb\x3d\x41\xbf\x42\x2f\x93\xda\xa1\x3f\x1e\xae\xd4\x70\x48\x09\x43\x6a\x28\xc4\x81\x90\x66\x4d\x7e\xd9\xc7\xb2\xbe\xa7\xaa\x3f\xf3\xfd\xef\x9f\xee\xaf\xdf\xc3\x62\x65\x54\x20\x58\x82\x00\x52\xe5\x7d\x73\x95\xb6\x1b\x3f\x00\xfe\xdc\x71\x98\xb8\x1b\x49\x98\x53\x68\x2c\xb0\xae\xaa\x1b\x8a\x39\xf2\x37\x68\xab\x3a\x34\xd2\x35\xfa\xf6\xbf\x5a\xed\x1b\x01\x09\x92\xdd\x09\xd5\xf1\x51\xf0\xea\x1f\x27\x1d\x4c\x7f\x98\xf0\xfc\x33\xd0\x08\x65\x51\x88\x6e\xe0\xf2\xcd\xf1\xe8\xf4\x64\x71\x5c\x61\xa0\x6f\x16\x8b\xc5\x0f\xf7\x90\x1f\xd4\x4a\x6d\xcd\x4c\xe6\x25\x98\xe9\xb2\x0b\x1a\xa5\x48\xa7\x23\x03\xba\x5a\x5d\x16\xe0\x1b\xff\x92\x6d\xe6\x12\x01\xc6\x02\x70\xa7\x45\xb5\xfb\xd1\x56\x43\x64\x03\xc8\x91\x67\xe6\xac\x9a\x26\xca\xb8\xa7\x3d\xa2\xb1\xd0\xa3\xc6\x6c\x8e\xb1\x7f\xf8\xd2\x80\xf5\x83\x8b\x9a\xe9\x6a\xe4\xba\xfd\x2a\x50\xda\x3a\x56\xbe\x03\xcc\x9d\xd9\xf5\xd1\x01\xe7\xee\xc0\x73\x66\x4b\x54\x6d\x93\x2d\x4e\x23\x99\x81\x52\xcd\x97\x3b\x77\x8b\xed\x5d\xb4\x5d\x52\x6e\x71\xc2\xaa\x34\x98\xce\xbe\xf0\x08\x58\xd5\xec\x53\xa6\x1e\x14\xd6\x18\x0f\xc8\xf1\x97\x42\x4a\xfd\x1e\x0a\x18\x8b\xb8\x49\x8a\x93\xc6\x4d\x51\x6b\x14\x6b\xd6\x26\x2a\x74\x4b\xc0\x23\x32\x09\x05\x0f\x2f\xb5\x0a\x41\xce\x92\xc8\xee\xd2\x9f\xdf\xe0\xa9\xfb\xf8\x5b\xad\xd1\xb7\xb7\x2f\xbc\x2e\x3d\x8b\x79\xcc\xc1\x44\x17\xfa\xb7\x95\xcc\x3b\xb6\x86\x55\xd3\xed\x56\xdb\x76\xed\xc2\x95\x4f\x68\xdd\x1a\xfa\xb4\xa7\x7d\x7b\x4c\x8d\x18\xa1\xb4\x75\x59\xd3\x1e\x64\xf4\x36\x44\x7b\x80\xd9\xb7\x54\xdd\xf6\x41\xc7\x6c\x0e\x71\x48\xb7\x23\x34\x6a\x7e\x42\xd3\xa7\xf1\x7d\xc2\xfa\xd5\x70\x38\xfc\x1b\x8c\x9d\xc6\xdb\xd6\x45\x85\x9f\xcc\x9c\xdb\x78\xff\xe9\x4c\xab\x77\x05\xbe\xbb\xfe\xd8\x1f\xd1\xa7\x55\xfe\x38\xfd\x1b\x0c\xdd\x54\x75\xcb\xe6\xed\x99\x1c\x98\x5e\xca\x56\x13\xd1\xed\x3a\x5a\x6a\x62\x3a\xd2\x06\x4a\x06\xd1\x1d\x78\x50\xe3\xce\xed\x76\xde\xdd\x96\x57\x6e\xbb\x2e\xcf\xbe\x10\x82\x7a\x1c\x38\x02\x61\x1a\x06\x96\x17\xd0\x8d\xeb\xc3\xfd\xb7\xcf\x15\x08\xb0\x12\x7a\xe5\xed\x35\x4f\x04\x4f\x98\x6f\x2f\xb1\xef\x36\x91\xfb\xe2\x64\x9f\x3d\x7b\xe6\x01\x74\x4b\xaf\x49\x2e\x21\xcc\xf5\x5d\x9e\x99\x43\xe7\x67\x56\x28\xad\x79\xa7\xbd\x4f\x93\xa6\x0e\x7a\xa8\x8e\x91\x1e\x06\x5c\x2e\xca\x30\x7a\x1c\x72\x59\x1d\xcf\x7e\xd1\x46\xfe\x99\x0b\xd8\xda\xc1\xa3\x7d\xa1\x6f\xe1\x11\xfa\x97\x9f\x85\x55\x0b\xb3\x48\x85\xa4\x91\x0d\x65\x1f\x2f\xd1\x2d\x43\xcc\xd4\x4a\x02\x13\xac\x57\xe5\x11\x1a\x1a\xad\x06\xdb\xfc\xa0\x75\x12\xe2\xe9\xeb\xd4\x8b\x0b\xa1\x78\x4a\x33\x35\x40\x19\x3e\x6c\xc6\x68\x3b\xc3\x99\x30\x30\xec\xa6\xb7\xb9\xfe\xb7\x72\x0d\x29\x63\x7f\x15\x50\xf5\x22\x92\xc8\x73\x3a\x67\xe2\x67\x78\x07\x7b\x41\xfe\x99\x4d\x47\xc3\xea\x6e\x0b\x45\xed\x11\xbf\xe2\x51\xc4\x12\x37\x80\x92\x97\xf8\x60\x73\xe6\xcd\x8d\x7e\xc6\x0b\x0d\x37\xd8\x5e\xb9\x0f\x81\x59\x66\x2a\xc6\xab\xe8\x0a\x7b\xd4\x7c\x47\xa6\xb3\x1f\x24\xdc\x03\x49\x81\x63\xab\xbb\x96\x07\x79\x39\xb4\xdd\x5a\x2e\x5e\xb2\x0e\x0f\x3b\xde\xad\xcb\x21\xb7\x02\x04\x7a\xc6\x66\x77\xc7\xab\xbf\x1c\x81\xd5\x95\x4f\x8f\x89\xfd\xa1\x62\x4d\x37\x39\x7e\x6f\x03\xdb\x1d\xdd\x87\xc0\xf2\x0f\xd9\x4a\x0a\x58\x3d\x7a\x70\x32\x0c\x4e\x83\xa3\x13\xaf\xf4\x80\x1b\xe3\xd1\x4e\x70\x76\xba\x8f\x0b\x0e\x19\x05\xbf\xa6\x55\x5b\x83\xfc\x86\xd4\x07\xb8\xf9\xe9\x2a\x5a\x55\x91\x5e\xf6\xb7\x6e\x4b\x74\xc4\x97\x37\x25\x17\x2a\x03\xbe\xf2\xa6\xc4\xf3\xf4\xa5\xc5\x56\x39\xfc\x82\x07\x1c\xf6\xda\xaa\xfb\x80\xa3\xf3\x7a\xab\xb3\xe6\x7e\x15\xf5\x34\xd0\x9f\xaf\xd5\x6a\xcf\xb1\xad\x3d\xee\x1c\xc2\xd6\x22\x60\xad\xbe\x76\x43\xf6\xda\x27\x58\xa7\xad\x2e\x4e\x44\xfb\xdb\x9d\xad\xef\xb3\xee\xa8\x47\x6f\x8d\x7d\x1f\x5f\x8d\x1a\x27\x8d\xb5\x44\x55\x4d\xa8\x02\x54\x89\x3e\x66\xb4\xdc\x98\x09\x2a\xae\xfd\xf8\x1b\xe4\x3a\xf8\x9d\x96\xf0\xfb\xce\xc1\x1c\xeb\x03\x47\x32\xfb\xa6\x3b\xa5\xeb\xab\x86\x3d\x92\x9f\x76\xd1\xdb\xf5\x60\xa1\x6c\x7f\xcd\x93\x48\xae\x03\x99\x60\x02\xc4\x8b\x49\x77\xe3\x89\x97\x9d\xb7\xfb\xbe\x30\xfb\x4f\x00\x00\x00\xff\xff\x56\x7e\xc8\x83\x60\x30\x00\x00")

func fcs_lpc_motor_html_bytes() ([]byte, error) {
	return bindata_read(
		_fcs_lpc_motor_html,
		"fcs-lpc-motor.html",
	)
}

func fcs_lpc_motor_html() (*asset, error) {
	bytes, err := fcs_lpc_motor_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "fcs-lpc-motor.html", size: 12384, mode: os.FileMode(420), modTime: time.Unix(1455817033, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _index_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x58\x7b\x6f\xdb\xba\x15\xff\xdb\xf9\x14\x2c\xb7\xa0\x0e\x6c\xc9\x69\x2f\x30\x0c\x7e\x64\xe8\x4d\x5b\xb4\x43\x5f\xb8\x49\x31\xdc\xa5\x41\x40\x8b\x94\xcd\x86\x12\x05\x92\xb2\xeb\x5b\xf8\x3b\xed\x33\xec\x93\xed\x1c\x52\x92\xe5\x47\x5d\x63\x1b\xd0\xd4\xd4\xe1\x79\xf1\x3c\x7e\x7c\x8c\x9f\xbc\xfc\x78\x7d\xfb\xfb\xa7\x57\x64\xee\x32\x75\x75\x36\x7e\x12\x45\xe4\x5a\x17\x2b\x23\x67\x73\x47\x9e\x5f\x3e\xfb\x0b\xb9\x9d\x0b\x32\xd3\x91\xb2\xd6\x91\x17\xa5\x9b\x6b\x63\x63\xf2\x42\x29\xe2\x79\x2c\x31\xc2\x0a\xb3\x10\x3c\x3e\x23\x04\xa4\x3f\x5b\x41\x74\x4a\xdc\x5c\x5a\x62\x75\x69\x12\x41\x12\xcd\x05\x81\xcf\x99\x5e\x08\x93\x0b\x4e\xa6\x2b\xc2\xc8\xaf\x37\x2f\x23\xeb\x56\x4a\x04\x39\x25\x13\x91\x83\xac\x9b\x33\x47\x12\x96\x93\xa9\x20\xa9\x2e\x73\x4e\x64\x0e\x44\x41\xde\xbd\xbd\x7e\xf5\xe1\xe6\x15\x49\xa5\x12\xc1\x16\xf8\x1b\xdc\x26\x64\x3c\x17\x8c\xe3\x00\x86\x99\x70\x8c\xe4\x2c\x13\x13\xba\x90\x62\x59\x68\xe3\x28\xf8\x90\x3b\x91\xbb\x09\x5d\x4a\xee\xe6\x13\x2e\x16\x60\x2f\xf2\x1f\x7d\x92\xc9\x5c\x66\x65\x16\xd9\x84\x29\x31\x79\x16\x5f\xf6\xc1\xa8\x74\x92\xa9\x36\xa9\x84\x75\xfa\x6f\x36\x05\xd2\x4a\x58\xda\x36\x98\xcc\x99\xb1\x02\x0c\x94\x2e\x8d\xfe\x5a\x4f\x39\xe9\x94\xb8\x7a\x7d\x7d\x43\xde\x7d\xba\x26\xb7\xc2\xba\xa9\xc8\x93\xf9\x78\x10\x26\x02\x93\x4d\x8c\x2c\x1c\xb1\x26\x99\xd0\xa9\x5e\x0a\xf3\x90\xe8\xac\xd0\x39\xf8\x6b\x07\x4b\x31\xdd\x7c\x7d\xdd\xf9\x8e\x94\x74\x22\x06\xf7\xe3\xaf\xe0\xcd\x78\x10\x34\x55\x6a\x95\xcc\x1f\x21\x3b\x6a\x42\x65\x16\x82\x30\x37\x22\x3d\x60\xa2\x60\x05\xae\x0c\x73\xb1\xfd\x11\x25\x8a\x59\x2b\x6c\x8c\x61\xa6\x3f\x51\x9b\x26\xe0\x4e\x91\x44\x99\x76\xda\x6c\x49\x78\x65\x61\x4c\x7c\xa1\x91\xef\xd5\x07\x21\x58\x12\xa9\xd2\xcb\x68\x35\x24\xac\x74\x7a\x54\xcd\xac\xab\xdf\xa9\xe6\xab\x16\x7b\x0a\x69\x8c\x52\x96\x49\x05\xfc\x4f\x7f\xd3\x53\x30\xf6\xb4\x4f\x9e\xbe\x11\x6a\x21\x9c\x4c\x18\xf9\x20\x4a\x01\x94\x86\xd0\x27\x2f\x0c\x24\xb2\x4f\x2c\xcb\x6d\x04\x29\x94\xe9\x68\x5b\xdd\x52\x60\x21\x0f\xc9\x2f\x97\x97\xdb\xd6\x21\x9e\xb5\xe7\xe3\x41\x5d\x60\xe3\x3a\xc6\x0b\x66\x08\xac\x99\x4c\xc0\xbd\x0e\xd6\xc6\x90\x40\xbd\x59\x09\xab\xa7\xfd\xb3\x0e\xe3\x1c\x29\xdf\xbf\xc7\x2f\x60\xb4\x5e\x23\x0d\xa2\xe9\x1e\xca\x82\x33\x27\x60\xea\xc3\xe0\x05\x12\x0d\x28\x86\xc5\xa4\x4c\x59\x01\x9f\x50\x47\xf9\x10\x55\x76\x92\x8c\xdb\x21\xc9\x4b\xa5\x80\xdc\x01\x21\xd6\x7c\xad\xe1\x2f\xd3\x15\x9f\x13\x59\x01\x8c\x77\x77\xf7\xfd\xfa\xdf\x3d\x4a\x14\x1a\x9c\x91\xc8\x75\xe7\xbf\x4d\x91\xd9\x6a\x8c\xf2\x85\xd2\xee\x41\x17\xc8\x61\x83\x22\x25\x66\x22\xe7\x61\xdc\x92\xa6\xf9\x12\xfd\xec\x74\x72\x7d\xad\x55\x99\x21\xfb\x73\x4f\x98\xb2\xe4\x71\x66\xb0\x49\x3f\x16\x2c\x91\x0e\x96\x71\x19\x3f\x87\x19\xd4\xdf\xf9\xc6\xbe\xc9\x4a\x33\x38\xcb\x71\xc9\x4e\x66\x22\xe8\xc2\xd1\x1f\x50\x7f\x40\x9c\x1a\xbd\x84\xf0\x6d\xe8\xa9\x36\x19\x83\x84\xd0\xf3\xdf\x07\xe7\xd9\xe0\x9c\x7f\xc9\xcf\xdf\x0c\xcf\xdf\x0f\xcf\x6f\x68\xad\x7c\xd5\x52\xde\x72\xd5\x63\x92\xd7\xe4\xb9\xac\x50\x22\x09\x53\x6d\x37\xbe\xd5\x6a\xe0\x6f\x3d\x3a\x3b\x83\x34\xc6\x10\x76\xae\xc4\x3b\x3d\x03\xb8\x99\x90\xb4\xcc\xbd\x5c\x57\x2c\xa0\x45\x2e\x50\x1a\x99\x30\xcd\x30\xeb\x89\x31\x87\xb6\x97\xca\xd3\x10\x6d\x46\x90\x3b\x08\xa5\x06\x74\x52\x7a\xd6\xa5\x4b\xa1\xa0\xc7\x04\xa1\xbd\x83\xec\x17\xbb\xfc\x9e\x0b\x9c\xeb\xfd\xfd\xe6\xe3\x87\xd8\x3a\x23\xf3\x99\x4c\x57\x95\x07\xc8\x8e\x15\xc7\xe5\x02\x1c\xe0\x3a\x29\x33\x54\x3a\x13\xee\x95\x12\x38\xfc\x75\xf5\x96\x77\x7d\x13\xb2\xa2\xa0\xc8\x0e\xac\xb1\xcc\x73\x61\xde\xdc\xbe\x7f\x07\x42\x74\xbc\xd5\xa2\xc8\x07\x90\xb1\x4f\xa3\xa3\xb3\x75\x88\x49\x09\x35\xc2\xf8\x8d\x2f\xf8\xd7\x00\xbb\x07\x03\xb3\xc5\x7b\xad\xb3\x0c\x02\x69\x8f\x71\xe2\x86\xe1\x8e\x32\x76\x3e\x69\xb5\xca\x84\x89\xb9\xce\x2a\x2a\xc4\x08\x90\xf7\x96\x19\x58\x71\x5c\x30\x03\xb4\x6a\xe1\x41\x5f\xf7\xa2\xf1\xda\x42\x11\x57\xea\x0f\x6b\xf7\x71\x84\x76\x0a\xad\xdb\x71\xab\x02\x8b\x22\x71\xca\x17\x0e\x26\x67\x58\xa5\x18\xc7\x58\x26\x18\x4d\x10\x88\x17\x4c\x95\x18\x85\x0f\x65\x36\x15\xa6\x7b\x34\x0d\xa0\x2f\xaa\x73\x8f\x7a\x7a\x34\xb2\x4a\x72\x28\xf4\x8b\xa0\x67\xaf\x02\xd0\x71\x48\x3a\xec\x55\xde\xf9\x03\xb5\x80\x4e\x60\x29\x84\x6a\x44\xa8\x88\x11\x25\xfc\x92\xbb\x3f\xe0\x6d\xa2\x9e\x42\xa0\xe6\xef\xf5\x56\x79\x7b\x26\x88\x02\x28\xd4\x86\x74\x31\x32\x12\xe6\x2f\x47\xf0\x33\xf6\x41\x8a\x3d\xbc\xc4\x4a\xe4\x33\x37\x07\x72\xaf\xe7\x63\xe8\x1d\x00\x08\x0a\xd3\x77\xf2\x3e\x2e\x4a\x3b\xef\xde\x21\xb9\x05\x73\x18\x99\x5b\x68\xe9\xee\x45\xbf\xa5\x0d\xd8\xef\x71\xf5\xeb\xb3\x46\x4d\xdd\xc3\x27\xaa\x61\xf9\x4c\x09\xaf\xa3\x56\x80\xe8\x76\xa2\x30\xb2\xde\xfb\x28\xfe\xb9\x4b\xff\x84\xb9\x02\x05\x11\x7a\x26\x0c\x73\xa5\x11\x90\xa1\xc2\xe8\xa2\x4b\x2b\x78\xa4\x7d\x44\xfa\xb8\x8d\x98\x68\xba\x2d\x5d\xfb\xff\x5f\x88\xa2\x3b\xa7\x89\xfd\xdc\x61\x5c\x1f\xc8\xde\x6d\x67\xe7\xf2\x3e\xa8\xdb\x50\x9e\xed\x51\x9e\xef\x51\x7e\x09\x49\x3a\xba\xca\x5d\x7b\x35\xc3\x9e\xe4\xd6\x22\x77\xa5\xea\x84\x40\xa9\x2e\x65\xce\xf5\x32\xd6\x39\xa2\x49\xbb\x52\x1b\x0c\xf6\x55\x5f\xb5\x6f\x2e\x96\xe4\x1f\x62\x7a\xa3\x93\x47\x80\x00\xba\xb4\xc3\xc1\x80\x92\x9e\x5f\x08\x6e\xc0\x30\xa4\x03\x6f\xad\x2e\x95\xa6\x67\x4e\x95\x46\x5e\xba\xdd\x72\xbe\x88\x74\xae\x0b\x91\xef\x78\xb8\xde\xe7\x4a\x94\xb6\x62\x8f\x6d\x9f\x2f\x13\xd6\xb2\xd9\x61\x88\x0d\xdd\xd6\x2a\xe9\xca\xf9\x97\x30\x44\xe0\xeb\x78\x48\x6b\xa6\x8e\xc2\x92\x75\x50\x31\x36\x0a\xcc\x3e\x2c\x1d\x99\x92\x6e\x2d\x3c\xf1\x47\x8c\x60\xb4\x33\x18\x90\x8c\xc1\x7e\x58\x80\x63\x7d\xc2\x52\x07\xbb\x5f\x62\x04\x07\x85\x70\xa4\xb2\x64\x81\xa7\x29\x38\x63\xa1\xb7\x7d\x92\x6b\x87\x07\x75\x23\xc8\x0a\x30\x3a\x8e\x51\x83\x11\x50\x9e\x39\x1a\x81\xd0\x74\xaa\x7e\x6c\x36\xa5\xc9\x6e\xa7\x3a\xfd\xf9\xf6\xfa\xc6\x43\xd8\x66\x5d\x55\xae\x3d\xbc\x15\x78\xc8\xee\x56\x1b\x2a\x62\xd7\xa8\x0a\xce\x06\xde\xba\x0d\x7d\x0b\x5c\xfd\xf9\xe9\x87\x80\xda\xe9\xe0\x11\xeb\x84\xb8\xf9\xd3\x1a\x14\x32\x83\x14\x2d\x7c\xb0\x3d\xa2\x20\x75\x74\xaa\x0a\xed\x7c\xc4\x22\x2e\x71\x2f\x68\x6f\xd1\x41\x59\x35\xff\x00\xf3\xe1\xf4\x72\xb2\xe6\xd0\x64\xfb\x1a\x81\x7e\xaa\x0e\x8f\xac\x87\x94\xf8\x09\x1f\xee\x66\xa7\x98\xe0\x3e\x31\xde\xdf\x25\x9a\x4d\xe2\x24\x8b\x28\x0a\x3b\xa5\x3c\x60\xb3\xde\x2d\x7a\x94\xfc\xfb\x5f\xd7\x34\xd4\x51\x55\xb1\x21\xeb\x10\x77\xf2\xa4\x9d\x85\xca\xf0\x66\x76\x37\x45\xc7\x7d\xc2\x5d\xdb\xb3\xee\x6c\xd6\xd8\x97\xb5\x4a\xaf\xc5\x07\xc0\xc3\xc8\x1d\x7e\x76\x36\xd2\xad\xf4\x86\xf4\x85\x93\x6d\x8b\xa3\xc8\x76\x49\x3e\xb8\x1b\x78\xf5\xb3\xf7\x8d\x1d\x2e\x2d\xde\x39\x11\x0f\x9f\xec\x7b\x61\x98\xb4\x7e\xae\x35\xe5\x43\x70\x60\x47\x07\x8f\xf7\xb7\xf2\x7a\x31\xc0\x06\xf3\x10\x6e\xaf\xfa\x87\x71\x92\xbc\x7d\x94\x69\xf9\x56\x0f\x4f\x11\x2f\xa7\x99\x74\xff\xbb\x78\xb3\xf6\x30\xf0\xa2\xeb\x80\x36\xeb\xbd\x53\xd2\x4f\x21\xbb\xe2\x3a\x0c\xd9\x7b\x6c\xc7\x11\x1b\x43\xaa\xa7\x5f\x8f\x02\x57\x13\x76\x60\x8c\x25\xdf\xc3\x2c\xa8\x1f\x01\x28\xc3\x09\x58\x3c\x70\x1a\x04\xa9\x80\x5d\x76\x29\x5d\x32\x27\x48\xb8\xa3\xd0\x55\x33\x41\xef\xab\xd4\x26\x0c\x96\x42\xe1\x5e\x17\x71\xb8\x6d\xd1\xe1\xd1\xd8\x52\x2b\xb3\xc8\x16\xbe\x0d\xdb\x18\xe7\xef\xa6\x21\x2d\xd8\x79\xde\x8c\x30\x86\xde\x63\xeb\xb5\xf6\x8b\x63\x9a\xf3\xb4\xb4\xd8\x15\xe8\x0a\xed\xd5\x9f\x0f\x92\x6f\xb7\xfd\xfe\x12\x2b\x53\x17\xc1\xfe\x7a\xdb\x8b\xcc\xce\x0e\x78\x81\x71\x75\xe2\x9b\xf3\x97\x9e\x02\x36\x24\x7f\x8f\x9f\x7c\xa1\x48\x8c\x98\x92\x33\xb8\x10\x2a\x91\xba\x2f\xf4\x8a\x8e\x36\x32\xa0\xad\x4a\x06\x8c\x62\x5b\x28\x09\xc7\x82\x2f\x39\xad\x6c\x87\x8e\x6a\x75\x13\x72\x6d\x77\x13\x09\x8c\x1d\x6f\xbd\x37\x41\x0e\xe8\x27\x3c\x48\x8c\xa7\xa6\xb1\x15\x16\xd1\x30\xd1\xf1\x00\x9c\xbc\xa2\xff\xa7\x10\xa2\xda\x76\xb0\xa6\x80\x09\x8f\xa3\x4d\x31\xe0\xa1\xf2\xb4\x6a\xa8\x0d\x7a\x89\x23\x16\x43\xdd\x2d\x20\x15\xa3\x83\x16\xff\x90\x45\xdb\xe0\x09\xf7\xd8\xc6\xb4\x11\xf8\xc6\xb4\x63\x7c\xb4\x51\xa3\xda\x5a\xe0\x6c\x02\xa7\x88\x4a\x11\xe0\xb9\x36\x59\x9d\x3b\xae\x62\xdf\x69\x1b\xcd\x01\x43\x22\x64\x8a\xf0\xd4\x27\x79\xc3\x99\x09\x37\xd7\x7c\x42\x01\x8f\x1d\x6d\xa8\xcc\xf7\xf8\x84\xce\x9d\x2b\xe0\xa4\xd8\xbc\xec\x0c\xe0\xc0\xea\x8f\xab\x7f\xc3\xa7\xc9\x09\xdc\xf9\x72\x7c\xf1\xfc\xfc\xdb\x5b\xac\xd1\x18\x5f\xc7\x5a\x4e\x6c\x5d\xc8\xc3\x63\xdb\xb4\x74\x0e\xae\x65\x15\x96\x21\xfe\xc8\xe4\x11\xaa\x35\x78\xf8\x1a\x1c\xec\xc2\xf6\x08\xb8\x77\xf1\x85\x12\xff\x24\x07\x93\x89\x56\xda\xa4\xa5\x02\x92\xe4\xc8\x5c\xaf\xab\xf6\x66\x3b\x66\x3d\x0a\xb5\xfe\xb2\x9a\x22\xff\x7c\xfb\x09\xeb\xb1\x7b\x23\xb3\x52\xf9\xdd\x8a\x44\xa4\xb2\x31\x1e\xb4\xbd\xaa\x6b\x16\x1f\x13\x58\x51\xe0\xd5\x7a\x2e\x15\xef\x72\x75\x31\x22\xdb\xc9\xf6\x98\x0b\xff\x6d\x9e\x21\xcf\x08\xb0\x8c\xfd\x13\x5e\x99\xc3\xf1\x4c\x2b\x0f\x66\x7e\x05\x54\xb1\x95\x2e\x1d\x9e\x21\xf1\x99\x4e\x91\x04\x72\x06\x66\xc3\x0f\xbd\xc2\x2d\x6c\x8c\x55\x02\xab\x6b\x9e\x35\xae\xd0\xe2\xce\x33\x86\xc2\x27\x9b\xbd\x87\x8c\x40\x45\x1d\x03\x50\x82\xda\xc6\x03\x74\xe4\xea\x6c\x3c\x08\x8f\xc6\xff\x09\x00\x00\xff\xff\x96\x33\x8a\xd7\xfc\x16\x00\x00")

func index_html_bytes() ([]byte, error) {
	return bindata_read(
		_index_html,
		"index.html",
	)
}

func index_html() (*asset, error) {
	bytes, err := index_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "index.html", size: 5884, mode: os.FileMode(420), modTime: time.Unix(1455817177, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"bower.json": bower_json,
	"favicon.ico": favicon_ico,
	"fcs-lpc-motor.html": fcs_lpc_motor_html,
	"index.html": index_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"bower.json": &_bintree_t{bower_json, map[string]*_bintree_t{
	}},
	"favicon.ico": &_bintree_t{favicon_ico, map[string]*_bintree_t{
	}},
	"fcs-lpc-motor.html": &_bintree_t{fcs_lpc_motor_html, map[string]*_bintree_t{
	}},
	"index.html": &_bintree_t{index_html, map[string]*_bintree_t{
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: AssetInfo, Prefix: k}
	}
	panic("unreachable")
}
