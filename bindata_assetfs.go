package main

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _bower_json = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\xcb\x6e\xdb\x3a\x10\xdd\xfb\x2b\x0c\xdf\x9d\x71\x45\xd9\xb1\xdb\xa2\x41\x51\x14\x41\xbb\x2f\x90\xee\x82\x26\xa0\xa8\xb1\xc4\x82\xe4\xb0\xe4\x08\x89\x11\xe4\xdf\x4b\x8a\x7e\x48\xaa\x64\x77\x65\x73\xce\x83\x67\x86\x14\x5f\x67\xf3\xf9\xc2\x70\x0d\x8b\xdb\xf9\x62\x27\x7c\xa6\xac\xc8\x34\x12\xba\xc5\xff\x11\xaa\x51\x83\xe5\x55\x0b\xd7\x44\xd6\xdf\xe6\x79\x25\xa9\x6e\x0a\x26\x50\xe7\x15\x66\xca\x7b\xca\x47\x94\xbc\xa1\x1a\x9d\x0f\xc2\x87\xb0\x0c\x85\x7b\x28\xb8\x27\x09\x66\x7e\x27\x0d\xd0\xfc\x53\x11\x7f\xbe\x08\x70\x86\x89\xfa\xf3\x22\xb0\x7e\xb6\xca\x12\xbc\x70\xd2\x92\x44\x13\xb7\x4d\x76\x9a\xcb\xee\x0a\xcb\x46\xc1\x8f\xbd\x8d\xc1\x1e\x92\x4c\x49\x01\xc6\xb7\x49\xef\xee\xbf\x26\x9e\xac\x0c\x3a\x38\x67\x58\x2e\x73\xb6\x6c\xa1\xd8\x36\x96\xf0\x94\x9c\xfc\xb1\x56\xe0\x33\xb8\xa7\xd0\x9a\x45\x03\x86\x4e\x75\x02\x4f\xdd\xff\xbe\x1b\xd7\x82\x29\xc1\x08\x09\xb1\xdb\xd7\x44\xb2\xdc\x82\xcb\x34\x98\x26\x06\xfa\x8e\x6a\xaf\xc1\x7d\x53\xa0\xa3\x6b\x7e\x46\xff\x7b\x5c\xb3\x1b\x76\x73\xf4\x4e\x40\xe9\x78\x88\x91\x59\x6e\x40\x4d\xcb\xbb\xac\x68\xb3\x62\xef\xfb\x36\x35\xf0\xf2\xba\x4d\x97\x15\x6d\xd6\x6c\xd3\xb7\xf1\x4a\x06\xc2\xb4\x41\xc2\x53\x82\x8f\x7d\x29\x21\xaa\x82\x5f\xd0\x1e\x08\x69\xdf\xed\x51\xec\xb0\x08\x17\x29\xdb\xa1\xa1\x1d\x17\xed\x91\x3e\xae\xd8\x76\x18\xac\x68\x88\xd2\x1d\x19\x37\x4f\x78\x0a\xb6\x5e\xf7\xb5\x92\x40\x4f\x2b\x23\x3a\x3e\x0b\xe1\x50\xa9\x7f\x9c\xec\x08\xf9\x10\xe6\xdd\x20\x8c\x40\x73\xb5\x9b\x0e\x69\xf4\xb4\x35\x27\x70\x92\x5f\xc8\x73\x64\x8c\xca\x05\x77\xe5\xb4\x34\xa2\x69\x20\xeb\xe1\x09\x57\x95\x82\xab\xe1\x7b\xb4\xc3\x10\xb6\x03\x27\x5e\xf8\x0b\x06\x01\x8d\xba\x0d\x3b\xcd\x4e\xba\x30\x90\xf8\x38\x8d\xca\xce\x68\xda\xee\x43\x4f\xb6\x43\x37\x7a\xfc\x27\x70\x98\xb1\x05\xc2\x9b\x86\x95\xc3\xe7\x8c\xe0\x85\xb8\x03\x3e\x69\xf1\x17\xf3\xe0\xb7\x3a\xfa\xfd\xfa\xdd\x80\xdb\xb7\x37\x3b\x7c\xfe\xec\x54\xb7\xc9\x2d\xdb\x29\xa4\x88\x3a\xb9\xe7\x65\xde\xab\xf6\xfa\x50\xf0\x92\x29\xbe\xc7\x86\xa6\xdb\x39\x73\xd2\x6b\xb3\x89\x8f\xd7\xdb\xec\x6d\xf6\x27\x00\x00\xff\xff\xb7\xfc\xfa\x4a\xfe\x05\x00\x00")

func bower_json_bytes() ([]byte, error) {
	return bindata_read(
		_bower_json,
		"bower.json",
	)
}

func bower_json() (*asset, error) {
	bytes, err := bower_json_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "bower.json", size: 1534, mode: os.FileMode(420), modTime: time.Unix(1455698209, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _favicon_ico = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x94\x7d\x4c\x55\x65\x1c\xc7\x9f\xab\xe6\xda\x5a\x41\xb9\xb5\x85\x93\xdd\xd6\x8b\x28\xe5\xac\x10\x73\x72\x31\x5e\xe6\xc2\xd8\xa5\x49\x2f\xda\x35\xbb\xad\xc1\x6e\xbc\x94\xcb\x90\xba\x8b\x09\x82\x12\x6f\x37\x27\x83\x08\x0a\x48\x97\x97\x80\x41\xca\xa0\x04\xe2\xc2\x15\x24\x0b\x3d\xbc\x5c\xf4\xc2\xbd\x89\x88\xbc\xc4\x25\x2e\x01\x5a\x9b\x7f\x7c\x3a\xf7\xdc\x51\xba\x66\xbf\xb3\xef\xce\x73\x7e\xe7\xfb\x79\x9e\xf3\xfc\x9e\xe7\x39\x42\xa8\xe4\xcb\xd7\xd7\x73\x57\x0b\xc3\x0a\x21\x1e\x16\x42\x04\xc8\x92\x53\x72\xc6\x9b\x5f\x8a\x55\xf7\x79\x75\xb7\xe8\xf8\x32\x5e\xdf\x64\x8a\xb1\x34\x14\x44\xd2\x60\x7a\x81\xea\xc3\xc1\x14\x25\xf8\x91\x1e\x2b\x2c\x29\x31\x42\x7f\x37\x6e\xe4\xdc\x71\xf5\x40\x63\xae\x64\x6f\x2f\x67\x66\xb4\x97\xb9\xdf\x1c\xcc\x4e\xd8\x98\x19\xeb\x65\x7a\x54\xc2\x71\xa1\x91\xca\x2c\x2d\x89\x51\x42\xd2\x47\xdc\xf6\x41\x72\xcc\x8f\x9d\x57\xbb\xec\x2d\xee\xb9\x49\x27\x8b\xf3\x73\xcc\x4e\x5e\xc1\x3d\x7d\x8d\xe6\xd2\x5d\x54\x1d\x0c\x60\xe2\xca\x45\xfe\x98\x9d\xc6\xed\x9a\xa0\xa7\xa3\x8a\xf8\xe8\x07\xdc\xb1\x5b\xff\xed\xe3\xaf\x99\x41\xe9\xd6\x0d\x17\x37\x17\x17\xb0\xb7\x95\xd1\x59\x99\x44\x73\xf1\x1b\xb8\xc6\x87\x39\x9e\xea\x47\x4d\x76\x28\x8b\x0b\x0b\x98\x12\xd7\xe2\xb4\x59\xf9\xa9\xad\x0a\xed\x66\x21\x79\xd8\x89\xde\x7a\xfd\xfc\x78\x1f\xb7\xfe\x9c\x67\xdc\xd6\xc2\xe5\xb6\x52\x86\x3a\x4f\x32\xd4\x5d\xab\x30\xb5\x47\x82\xa9\xce\xd6\x28\xed\x8f\x5f\x16\x64\xc6\xad\x65\xa8\xdf\x4a\xe1\x11\x03\x21\xeb\x84\xde\xde\x5a\x68\xb9\x31\x3b\xc6\xef\x23\x3d\x4c\x0e\x9f\x57\x7c\x1e\xb9\xc6\x1d\xf4\xb6\x16\x52\x9a\x74\x2f\xdf\x1e\xf6\xf2\xa9\x31\x82\x84\x17\x05\x15\x26\x03\x03\x17\xad\x04\x3f\x2e\x2c\x7d\x8d\xf9\xdc\x9c\x9b\xc4\xf6\xc3\x51\xa6\xaf\xda\x18\xe9\x6d\xa6\xc9\xa4\xa5\x26\xe3\x59\x2e\x75\x7e\x4d\xd9\xbe\x55\x9c\x3c\xe4\xe5\x3f\xd4\x0a\xf2\xf7\x6b\x38\x51\x94\x82\xd3\x2e\xf1\x5a\x54\x10\x3f\xd7\xa4\xb1\x30\x73\x0d\x6b\x45\x22\xce\x5f\x4e\x33\x25\xf7\xd1\xdf\x5a\x42\xbf\xa5\x44\x61\x06\xbb\xcc\xf4\x9c\xf1\xb6\x4f\x57\x1a\x19\x1e\xe8\x22\x73\x7f\x34\x99\x07\x74\x04\x3d\x71\x3f\xed\xe5\x71\xf2\x5a\x39\x69\xfc\x4c\x4b\x5f\x4b\xb1\xe2\xb3\x9d\xfd\x8a\x73\xf5\x69\x58\xab\x8d\xca\xb3\xd4\x61\xa6\x28\x55\x43\xf9\xa7\x3a\xec\xfd\x5d\xbc\x1e\xee\xc3\xf3\x4f\x0a\xd6\xf9\xa9\x38\x95\xb7\x55\x5e\xe7\x41\xea\xb2\x37\xf1\x7d\x71\x8c\xe2\xaf\xcf\x0f\xe7\xd8\x3b\x2a\x72\x75\x02\x6b\x5d\x8e\x52\xb7\xf7\x5f\x12\x1c\xd0\xf9\x2b\xfc\x7b\x6f\x69\xd8\xb0\x46\xb0\xf1\xd1\x65\x7c\xfe\xee\x4a\xcb\x84\xe3\x2c\x56\x73\x12\x75\x79\x61\x0a\x6f\xce\xd2\x90\xb3\x5b\x70\xe8\x15\x41\x6e\x9c\x3f\x3d\xed\xe6\x7f\xea\xea\x51\xcc\x36\x7f\x02\x1e\x11\x6c\x59\xbf\xdc\x52\xf0\xa6\xd0\x37\x97\x1b\xb8\x3e\x64\xa5\x36\x77\x87\xf2\xbe\xf2\x13\x0d\x07\x77\x0a\x3e\x92\xc7\x6d\x90\xe7\xec\x9a\xba\x8e\xf9\x0b\x23\x19\x1f\x44\xf3\x6a\xa4\x3f\x81\xab\x05\xcf\x3c\xb6\x8c\xf0\xe7\xee\x51\xf6\x73\xce\x5e\x5f\xc9\xd6\x59\xc5\xb8\xf3\x82\xc2\x57\x64\x46\x2b\xb5\x4e\xde\x21\xf8\xe6\x58\x02\x9d\x2d\x66\x74\x91\x3e\x68\x43\x7c\xe8\x6a\x6f\xe2\xa9\x35\x2a\xb6\x6d\x5c\x21\x2d\xed\x3f\x79\x1c\x75\x41\xf2\x06\xf7\xaf\x97\xba\x99\x99\x1a\xc5\x39\xd8\x4d\x7a\x5c\x20\x6f\x47\x08\x76\x87\x0a\xf2\xd2\x74\x94\x98\x8c\x1c\xcd\x36\x92\x9a\xbc\x87\x90\xa7\x57\xb8\xb7\x6f\x5e\x79\xc7\x19\x48\x8a\x12\xea\x7d\x3b\x7d\xa5\x53\x27\x32\x18\x75\x4a\x5c\x75\x48\x74\xfd\x58\xc5\x99\xef\xca\x70\x5c\x96\x88\x08\xf2\x63\xfd\x6a\x95\x67\xce\x52\xe4\xa6\x3b\xd9\xdb\x63\x57\xa8\xd0\xef\xd9\xfe\xa0\x25\x25\x3e\x8c\xbc\x74\x03\x59\x46\x03\x7b\x63\xc3\xd8\x12\xf8\x90\x25\x78\xed\xf2\xff\x9c\xdf\x39\x1f\xb5\xba\x7d\xb9\x5a\x9d\xae\xf2\x4a\xfe\x63\xfc\xaf\x96\x7c\x1e\xc6\xc3\xfe\x1d\x00\x00\xff\xff\xb8\x6d\x5d\xdb\x7e\x04\x00\x00")

func favicon_ico_bytes() ([]byte, error) {
	return bindata_read(
		_favicon_ico,
		"favicon.ico",
	)
}

func favicon_ico() (*asset, error) {
	bytes, err := favicon_ico_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "favicon.ico", size: 1150, mode: os.FileMode(420), modTime: time.Unix(1455561960, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _fcs_lpc_motor_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x5a\xdd\x6f\xdb\x38\x12\x7f\xb6\xff\x0a\x56\xc5\x61\x9b\xdd\xca\x76\xdc\xe4\x2e\xf0\xda\xc6\xf5\xd2\x16\x58\xa0\xed\x16\x4d\xef\x61\xb1\x58\x1c\x68\x89\xb6\xd8\x50\xa2\x56\xa2\xe2\xb8\x41\xfe\xf7\x9b\xe1\x87\xbe\x2c\x3b\x89\x9b\xeb\x5e\xfb\xd0\x50\x23\xce\x07\x67\x86\x33\x3f\x52\x9e\x3e\x79\xf5\xeb\xf9\xa7\xdf\x3e\xbc\x26\x91\x8a\xc5\xbc\x3f\x7d\xe2\xfb\xe4\x5c\xa6\x9b\x8c\xaf\x22\x45\xc6\xa3\xe3\xbf\x93\x4f\x11\x23\x2b\xe9\x8b\x3c\x57\xe4\x65\xa1\x22\x99\xe5\x03\xf2\x52\x08\xa2\xe7\xe4\x24\x63\x39\xcb\xae\x58\x38\xe8\x13\x02\xdc\xff\xce\x19\x91\x4b\xa2\x22\x9e\x93\x5c\x16\x59\xc0\x48\x20\x43\x46\xe0\x71\x25\xaf\x58\x96\xb0\x90\x2c\x36\x84\x92\x7f\x5d\xbc\xf2\x73\xb5\x11\xcc\xf0\x09\x1e\xb0\x04\x78\x55\x44\x15\x09\x68\x42\x16\x8c\x2c\x65\x91\x84\x84\x27\x40\x64\xe4\xed\x2f\xe7\xaf\xdf\x5f\xbc\x26\x4b\x2e\x98\xd1\x35\xef\xf7\xa7\x82\x27\x97\x60\x82\x98\x79\x3c\x4e\x65\xa6\x3c\x12\x65\x6c\x39\xf3\x16\x72\xcd\xb2\xff\x04\x12\x88\x09\x4b\x54\x3e\x4c\xa5\xd8\xc4\x2c\x73\x7f\x07\xb8\x60\x0f\x25\xe4\x41\xc6\x53\x45\xf2\x2c\xe8\xe0\xfa\xfc\x67\xc1\xb2\xcd\x30\xe4\xb9\xb2\xe3\xc1\xe7\xdc\x9b\x4f\x87\x86\xeb\x41\x16\xf0\x4c\x26\xfe\x52\xb0\x6b\x5f\xd0\x8d\x2c\xd4\x16\xa1\xb2\xe9\x61\x32\x69\xa1\xe4\x2a\x93\x6b\x5f\xb1\x6b\x45\x33\x46\x77\x90\x9d\xfc\x87\x9a\x2c\xb3\xb8\x1a\x1d\x28\x84\x07\x32\xa9\x0f\x0f\x14\x93\xd2\x15\xab\x0f\x0f\x70\x59\x4a\x53\x96\xf9\x8b\x42\x29\x99\x34\x1e\x1e\x6e\x92\xe1\x0e\x68\x16\xd6\x86\x87\x8a\x09\x33\x0a\x74\x58\x56\xc2\x44\x07\xe9\x50\xb1\xe8\xed\xe6\x6a\x6b\x94\x83\x85\x26\x29\xe4\x6f\x6d\xfc\x18\x82\x0e\x4f\x53\x2b\x4b\xb1\xb8\x36\x3c\x54\x4c\x4c\x15\xcb\x38\x15\xad\xc7\x43\xc5\x41\xa1\x90\x42\xf8\x11\xa3\x61\x2b\xba\x1d\x6f\x0e\x56\x22\x78\x88\xb5\xad\xf6\x70\xa8\x28\x45\x17\xf5\xe1\xc1\x62\xe4\x6a\x25\x58\x33\xf1\x1a\xb4\xc3\x05\x4b\xb1\xa0\x59\xf3\xe9\x90\x32\x60\xfa\x00\xd4\x5f\xa9\x86\xf8\x9f\x1f\x44\x34\x3b\x24\x91\xb7\x04\x29\x1e\x33\x3f\x15\xc5\x8a\x27\x95\x61\xa1\x8c\xfd\x58\x86\x85\x80\x56\x18\xce\xbc\x65\x90\xfb\x22\x0d\x80\xa4\x64\xe6\xd3\x34\x85\x49\xbd\xa9\xee\x87\xd0\x2a\x67\x5e\x50\xe4\x0a\x38\x34\x01\x5f\xf5\x26\x91\x84\x06\x7c\x03\xa3\xde\x9a\x87\x2a\x9a\x90\xe3\xd1\xe8\x6f\x3f\xe3\x73\xc4\xb0\x13\xd7\x08\x31\xcd\x40\xf7\x84\x8c\x08\xf6\x00\x4d\x5a\xc8\x6b\x3f\xe7\x5f\x78\xb2\x9a\x90\x85\xcc\x30\xe3\x80\xa4\x5f\xfd\x13\xb4\x8b\xcd\x33\xdf\x76\x21\x1f\x3a\x3c\xff\x22\x13\x45\xc5\x11\xbe\xbf\xed\xf7\x91\x3d\xdc\x18\xe5\x29\x0d\x43\x2d\xe5\x64\x94\x5e\x97\xef\x77\x66\xb4\x65\x92\x39\x57\x5c\x26\x13\xc8\x28\x29\x0a\xc5\xb4\x62\x25\xd3\xc9\x48\x8f\x34\x94\xb0\xe3\x85\x84\xf4\x88\xc1\x78\xfd\x24\xd8\x52\xb9\xf1\x82\x06\x97\xd0\xd0\x00\x13\xf8\x81\x14\x32\x9b\x90\x2b\x9a\x81\xdd\x46\xf9\x2a\x63\x1b\x7f\x3c\x1a\x3d\x27\x4f\x19\x63\x47\xf7\x30\x6d\x00\x85\x50\x41\x0c\x5b\x0b\x3b\xdb\x5a\x17\x6e\x04\x33\x69\xdb\x04\x81\xa6\xaf\x32\xba\xd1\x26\x3a\x63\x90\xc3\xcf\x99\x60\x01\x2e\xdb\x87\x14\x75\xf3\x33\x16\xb6\xa5\x9b\x1c\xde\xa5\x60\x21\x80\xb4\x83\x65\xa0\xb8\x82\x84\xb9\x69\x06\xbd\xbe\x80\x41\x9e\xd2\x80\x59\xe1\xed\x48\x23\xf6\xa8\x1c\x35\x00\x00\xa6\xdc\x54\x2c\xc6\x3e\x85\xc5\x81\x44\x43\xaf\xe6\xc5\x94\x27\xf5\xe8\x22\xac\x83\xc4\x5f\xfb\x9b\x09\x31\x7e\x2e\xe7\x0e\x7f\x44\x06\x78\xaf\x78\x40\x05\x78\x44\xfb\xa3\x6d\xf0\xf8\x24\xbd\xae\xfe\xab\x14\xb5\xf9\x7c\x0c\x18\x28\xdf\xb5\x1e\x37\xff\xa8\x99\xd7\xc6\x7e\xff\x33\x6c\x29\xbe\xe4\x2c\xb4\x4b\xee\xf5\x7e\x1c\x82\x1a\xc0\x72\xb8\xc9\xe6\x38\x84\xb6\x91\x0a\x28\xf8\xf8\xd0\x9b\xee\xce\x9c\x25\xbf\x06\x18\x1b\x08\x9a\xc3\x56\x45\x2f\x7a\x9a\xc3\xb1\xd8\xf0\xe0\xb6\x2d\x69\xb5\xae\x4b\x70\x3c\xf3\x62\x96\x14\x1e\x69\x74\x7a\x53\x21\x01\x5e\x6e\xf1\x58\x59\x21\xbf\x72\x6a\x6d\x60\x4d\x06\x98\x25\x7a\xf3\xb7\x17\x17\x9f\xc8\x9b\xf3\x0b\xf2\x0e\xeb\x4a\x3e\x05\xe4\x7a\xa5\x59\xa7\xc3\x96\x69\xfd\x96\x38\xbb\x17\xbc\x86\xd1\x75\x00\x62\x5e\x18\x1e\x43\x2f\x59\xad\x72\xa3\x93\x5c\x14\x31\x84\x76\x63\xa6\xf7\xa6\x0b\xeb\x07\x18\x46\xd5\xd0\x36\x57\x70\x81\x23\x95\x8e\x82\x20\x18\x51\xfe\x08\x6a\xda\x8b\x93\xc1\xf1\xe9\xd9\xe0\x78\x7c\x3a\x18\x8f\x5f\x4c\x4e\x47\xe3\x69\xad\xc9\xef\x61\x3e\x6e\x33\x9f\xec\x62\x76\x34\x63\x8d\x23\x62\x85\xd6\xd5\x19\x36\xb2\xa2\xaa\xc8\x21\x2c\xdb\x34\xeb\x14\xed\x67\x52\xf3\x10\xee\x11\xe7\x9f\x6a\xbf\x78\xad\xf5\xeb\xc2\x62\xca\x04\x83\xa6\x70\x73\xe3\xc6\xb7\xb7\x9e\x49\xb2\xf6\x02\x81\x63\x7e\x2e\xc1\xc1\x49\x98\x4f\xab\x3e\xdd\x35\xed\xf5\x35\x8c\x54\xc7\xa4\x1a\x29\xaf\xd6\x5b\x81\xea\x5d\x16\x55\x4a\x6a\x79\x63\xb6\x1e\x71\x5b\xcf\x66\xa2\xef\x72\xc2\xb1\x74\xf1\x54\x8d\x66\x27\x57\x23\x0c\x81\x12\xcd\x18\x20\xa1\x7b\xaa\x39\x9e\x41\x39\x6f\x05\xad\x24\x57\x76\x95\x5b\xa4\x9d\xae\x4d\x89\xb1\x4c\x38\x0c\x9a\xf2\x1c\xb1\xdf\x29\x0c\x97\x6c\xa3\x90\x93\x5f\xdf\xbf\xfd\xad\xf1\x7a\x5a\x3b\xc6\x34\xd2\xa8\x5f\x8f\xd1\xd6\x0e\xb4\x73\xfa\xd5\x94\x8e\x02\x85\x58\x62\x58\x2f\x66\x53\x77\x5e\xed\x7d\x30\x70\xe5\x19\x16\x50\x9e\x4f\x3a\x80\xc8\x73\x6c\x33\x99\x44\xb3\x39\xcb\x27\xa6\xd4\xba\x34\x80\x47\xb5\x49\xd9\x84\xbc\x2f\xe2\x05\xcb\x9e\x43\x0b\x16\x05\x3c\x8e\x6e\x91\x0d\xff\xbb\xc5\xf2\x5a\x3f\x20\x0f\x2b\xe8\xb3\x03\x08\x35\xb6\x94\x39\x94\xef\x02\x42\x8d\x03\x1b\xb4\x7c\xa6\x9b\xc9\x7e\x64\x00\x2d\xd7\x3f\x1d\x8d\xd0\x2e\xfb\x76\x1d\x71\xc4\x20\xd0\x65\xb6\xe5\xfd\x4e\xa1\xd7\x5c\xb1\x3f\xee\x96\xab\xa7\x5b\xc9\xa5\x28\x3c\x02\x22\x6b\x0b\x4e\x98\x66\xe7\x1b\x38\xd3\x20\x19\xec\xd3\xa4\x21\x32\x32\x14\x90\xab\x22\x94\xb7\x84\x8d\xe2\xaf\x2d\xd2\x4b\xe0\x20\x4e\x05\xbe\xad\xba\x57\xad\x79\xb9\x2a\xa0\x6d\xc1\xbc\x00\x43\x66\x5e\xd5\x16\xc8\x85\xf1\x34\x81\xa0\x5e\x51\xec\xac\x33\x6f\xac\x77\x5d\xa3\x23\x00\xb7\xdf\x68\x0b\x53\xa8\x18\xa8\x4b\x27\xa8\x42\x4c\xe8\x12\x57\xc1\xc6\x00\x3b\xb5\x2d\x33\xaf\x06\x1e\x70\xc1\xae\x33\x40\x4a\x46\x38\x6d\x3e\xad\x7b\xbd\xcc\x02\x13\x7e\x88\x16\x0d\x37\x1e\x31\xad\x30\x27\x21\xcf\x51\x69\x48\x32\xca\xf3\x5a\xd3\x45\x86\x35\x57\x41\x44\x74\x18\xbc\xf9\x47\xe4\x9b\x36\x4e\xf4\x73\xa3\x71\xa8\xb2\x7b\xda\xf9\x51\x2a\xed\x0e\xf2\x8a\x67\x06\x72\xdc\xd3\x66\xcb\xe7\x87\x3c\xf3\x9c\xa5\xa5\xe5\xae\xea\x81\x0a\xa3\xcd\x9b\xbf\x1f\xbe\xfc\x5a\x53\x3f\xbc\xbb\xaf\x43\xd3\x38\xff\x46\x46\xbd\x4c\x56\x85\x00\x5c\xfa\xc1\xe2\xfd\xfb\x19\x48\x13\x88\xf4\x37\xb2\xf0\x13\x6c\x12\x96\x81\xda\x8c\xdd\xcf\x38\xdc\x55\xfe\x68\xdb\xba\xbc\x58\x42\x83\x9e\x79\xe7\xde\xff\x93\xa1\xc7\xdf\x8b\xa1\xe3\xef\xc5\xd0\x17\x8f\x6e\x28\x8c\xca\xd2\x09\xe3\xb2\xa4\x3a\xe8\xf1\x96\xc2\x41\xdf\x98\x40\x8a\x34\x84\x8a\x3e\xb1\xaf\x08\x21\xd0\xc9\xa1\xc3\xb7\x2d\x35\xd3\x8c\x6e\x7c\xaf\x4b\xb9\x05\x13\xd3\xda\xdd\xe4\xbc\xdf\x80\x05\x25\x2a\xa8\x81\x02\x87\x09\x9a\x3d\xf9\x79\x1f\xdb\xfa\x9e\xae\xfe\xc4\xf7\x7f\x7a\xbc\x7f\xfd\x1e\x36\x2b\x63\x02\xc1\x16\x04\x08\x27\xef\x9b\x1b\xff\xdd\xf8\x01\xe0\xa0\xbe\x45\xa9\x35\xc2\x3d\x57\x2a\xf5\xcb\x32\x6c\xb0\xae\xab\x1b\x8a\xb9\x99\x34\xe0\xa7\xba\x6f\xd1\x3d\xfa\xf6\x7f\xda\xed\x1b\x09\x09\x92\xdd\xe5\xce\xc9\xf1\xe0\xc5\x3f\x4e\x3b\x26\xfd\x6e\xd2\xf3\x8f\x81\x46\x28\xcb\x42\x74\x03\x97\xa7\x27\xe3\xb3\xd3\xe5\x49\x85\x81\x9e\x2e\x97\xcb\x9f\xef\x21\x7f\x50\x6b\xb5\x35\x37\x99\x97\xe0\xa6\xcb\x2e\x68\x94\x22\x9d\x8e\x0d\xe8\x6a\xb1\x2c\x21\x36\xfe\x25\xdb\x2c\x24\x02\x8c\xa5\x84\xb8\x18\x3f\xef\x47\x5b\x0d\x91\x0d\x20\x47\x9e\x98\x2b\x3a\x9a\x28\x13\x9e\xb6\x46\xe3\xa1\xaf\xd2\xd9\xd4\xb1\x5f\x7d\xe9\xc0\xfa\x99\xbf\xe6\xba\x1a\xb9\xee\xbf\x0a\x94\xf6\xea\x97\x12\x77\x82\xb9\x73\xbb\x3f\x3a\xe0\xdc\x1d\x78\xce\x9c\x50\xa6\x1d\xb7\xb3\xe5\xd6\x82\x3d\xe5\x10\x99\x4c\x02\xc1\x83\x4b\x4d\x1f\xe4\x2c\x09\xed\x39\xf4\xd9\x4d\x42\x63\x36\xf9\x41\x4f\xfb\xe1\xf6\xc8\x23\x06\x41\xcf\x96\x54\xe4\xcc\xdd\x0a\x64\x75\x78\xd6\xd0\x35\xaf\x1f\x7b\xdc\xf1\x6b\x5a\x9d\x94\xf4\xb0\x0b\x99\x35\xa7\xec\x3c\x5c\xb6\x0f\xdd\x76\xcb\x37\x56\x58\xc3\x6f\xf6\xaa\xc9\xcc\xf2\x08\xa4\x80\x39\xe3\xcc\x3c\x40\x01\x31\x07\xdf\x62\x97\x8d\x29\x34\x80\x9f\x60\x50\x76\x05\x16\x72\x53\xcb\xa7\x8d\x7b\xf8\x96\x72\xeb\xde\x36\xc8\x71\x7b\xf7\x1e\x5e\xde\x32\x55\xbb\xfc\xae\xd5\x14\x8b\x98\x43\xd4\x2f\xf4\xdf\x56\x7f\xea\x38\x7c\xba\x33\x66\x47\x20\x34\xee\x7c\x44\xd7\xa7\xf1\x3e\x5f\x8f\xac\xab\x5f\x8c\x46\xa3\xbf\xc0\xd9\x69\xbc\xed\x5d\x34\xf8\xd1\xdc\xb9\x8d\x98\x1f\xcf\xb5\x1a\x57\xfb\xee\xee\x7d\x7f\x46\x9f\x8d\xca\x9c\x3e\xfb\x0b\x1c\xdd\x34\x75\xcb\xe7\xed\x95\x1c\xe2\xfe\xfa\xa8\x89\x89\x76\xdd\x95\x34\x51\x11\x69\x43\x0d\x83\x89\x0e\xbc\xea\x70\x17\x51\x3b\x00\xcb\xbc\x5f\x7e\xef\xd9\xf5\xe5\xe6\x1b\x61\x90\xaf\x83\x17\x20\x4c\x03\x29\x60\x22\xfa\x5f\xe3\xdb\x95\x21\xdd\xb9\x40\x27\xa1\x07\xf9\x05\x7e\xda\x4c\x08\x4f\x04\x4f\xa0\x7f\x08\xa9\x3f\x8d\xdc\x29\xc1\x7d\x5a\xde\xe7\xcf\x9e\x79\x00\xdb\xd2\x6b\x92\x4b\x48\x73\xfd\x21\xc9\xac\xa1\xf3\xf7\x14\x28\xcd\xae\x67\x6c\xb1\xe1\x1e\x4b\x9a\x36\x68\x55\x1d\x9a\x1e\xd6\xfa\x2f\xca\x34\x3a\xb0\xf7\xdb\xcd\x12\x9d\xcc\x7f\xd1\x4e\x7e\xc3\x05\x1c\x8e\xe0\xd1\xbe\xc0\x5f\x7c\x68\xf0\x5c\xfe\xfe\xa3\xda\x98\x45\x2a\x24\x0d\x6d\x2a\xfb\xf8\xb3\x1c\x3b\x21\x66\x2a\x92\x30\x09\xf6\xab\x32\x60\x00\xad\x1a\x6e\xcf\x07\xab\x93\x00\xaf\x13\x67\x5e\x5c\x08\xc5\x53\x9a\xa9\x21\xca\xf0\xe1\x38\x43\xdb\x15\xce\xa4\x81\x99\x6e\xb8\xb1\x76\xcc\x3c\x2b\xd7\x90\x32\xf6\x67\x01\x5d\x2f\x24\x89\x7c\x4b\x17\x4c\xbc\x81\x77\x70\x9a\xe2\x5f\xd8\x6c\x3c\xaa\x3e\xac\xa0\xa8\x3d\xe2\x23\x1e\x86\x2c\x71\x0a\x94\xbc\xc4\x07\x5b\x33\x6f\x6e\xf4\x33\xde\xd0\x3b\x65\x7b\xe5\xda\xda\xd8\xbc\xbe\xda\x51\x19\xcd\x52\x4c\x54\x31\x14\xcf\xd8\x15\x04\xec\xe8\x8e\x4a\x87\x1e\x6b\x97\xba\x6e\x24\x05\x81\xad\x3e\x1e\x3c\x28\xca\x81\x65\x6b\x85\x78\xc5\x3a\x22\xec\xe6\x6e\x7d\xed\x70\x3b\x40\x60\x64\x6c\x75\x77\x73\xb1\xfb\x00\x72\x59\xe7\xb3\x13\x62\xff\x50\xb1\xa6\x9b\x1c\x3f\xac\xc3\x81\x41\xf3\x10\xd8\xfe\x01\x8b\xa4\x80\xdd\xa3\x95\x93\xd1\xe0\x6c\x70\x7c\xea\x95\x11\x70\x3a\xbe\x3a\x08\xce\x4f\xf7\x09\xc1\x21\x5a\xf0\x67\x73\x6a\x4b\xc9\x47\xa4\x3e\x20\xcc\x8f\xd7\xd1\xaa\x8e\xf4\xbc\xbf\x75\xfd\xaf\x33\xbe\xbc\xfa\xbf\x50\x19\xcc\x2b\xaf\xfe\x3d\x4f\x5f\xfb\x6f\xb5\xc3\x6f\x78\x45\x60\xbf\xc3\x74\x5f\x11\x74\x7e\xaf\xe9\xec\xb9\xdf\x45\x3f\x1d\xe8\xdf\xa9\xd4\x7a\xcf\x89\xed\x3d\xee\x24\x6f\x7b\x11\x4c\xad\x7e\xd6\x82\xd3\x01\xe9\xf9\x96\xe5\xac\xc5\xe2\x44\xb4\x7f\x38\x72\xfb\xc0\x7e\xf4\xce\xf8\xf7\xeb\xbb\x51\xe3\xae\xae\x56\xa8\xaa\x05\x55\x80\x2a\xd1\x17\x75\x76\x36\x56\x82\x6a\xd6\x7e\xfc\x0d\x72\x1d\xfc\x4e\x4b\xf8\x7d\xa7\x32\x37\xf5\x81\x9a\xcc\xb9\xe9\x4e\xe9\xfa\xb2\x7e\x8f\xe4\xc7\xdd\xf4\x76\x3f\x58\x28\xdb\x5f\xf3\x24\x94\xeb\x81\x4c\xb0\x00\x92\x19\x59\x16\x89\x2e\xed\xcf\x8e\x20\x7f\x6e\xf7\xec\xed\xfe\x7f\x03\x00\x00\xff\xff\x12\x82\xe2\xa0\x49\x2c\x00\x00")

func fcs_lpc_motor_html_bytes() ([]byte, error) {
	return bindata_read(
		_fcs_lpc_motor_html,
		"fcs-lpc-motor.html",
	)
}

func fcs_lpc_motor_html() (*asset, error) {
	bytes, err := fcs_lpc_motor_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "fcs-lpc-motor.html", size: 11337, mode: os.FileMode(420), modTime: time.Unix(1455802861, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _index_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\xfd\x6e\xdb\xba\x15\xff\xdb\x7e\x0a\x96\x5b\x50\x07\x8e\xe4\xb4\x17\x18\x06\x7f\x64\x68\xd3\x16\xed\xd0\xa6\xc5\x4d\x8a\xe1\x2e\x09\x02\x5a\xa2\x2c\x36\x14\x29\x90\x94\x5d\xdf\xc2\xef\xb4\x67\xd8\x93\xed\x1c\x52\xb2\xe5\xd8\x4d\xdd\x6d\xc0\x05\x9a\x5a\x3a\x3c\xdf\x1f\x3f\x52\x1c\x3f\x79\xf5\xf1\xfc\xea\xb7\x4f\xaf\x49\xee\x0a\x79\xd6\x1d\x3f\x89\x22\x72\xae\xcb\xa5\x11\xb3\xdc\x91\xe7\xa7\xcf\xfe\x42\xae\x72\x4e\x66\x3a\x92\xd6\x3a\xf2\xa2\x72\xb9\x36\x36\x26\x2f\xa4\x24\x9e\xc7\x12\xc3\x2d\x37\x73\x9e\xc6\x5d\x42\x40\xfa\xb3\xe5\x44\x67\xc4\xe5\xc2\x12\xab\x2b\x93\x70\x92\xe8\x94\x13\x78\x9d\xe9\x39\x37\x8a\xa7\x64\xba\x24\x8c\xbc\xbc\x7c\x15\x59\xb7\x94\x3c\xc8\x49\x91\x70\x05\xb2\x2e\x67\x8e\x24\x4c\x91\x29\x27\x99\xae\x54\x4a\x84\x02\x22\x27\xef\xdf\x9d\xbf\xbe\xb8\x7c\x4d\x32\x21\x79\xb0\x05\xfe\x06\xb7\x09\x19\xe7\x9c\xa5\xf8\x00\x8f\x05\x77\x8c\x28\x56\xf0\x09\x9d\x0b\xbe\x28\xb5\x71\x14\x7c\x50\x8e\x2b\x37\xa1\x0b\x91\xba\x7c\x92\xf2\x39\xd8\x8b\xfc\xcb\x09\x29\x84\x12\x45\x55\x44\x36\x61\x92\x4f\x9e\xc5\xa7\x27\x60\x54\x38\xc1\x64\x9b\x54\x41\x9c\xfe\x9d\x4d\x81\xb4\xe4\x96\xb6\x0d\x26\x39\x33\x96\x83\x81\xca\x65\xd1\x5f\x9b\x25\x27\x9c\xe4\x67\x6f\xce\x2f\xc9\xfb\x4f\xe7\xe4\x8a\x5b\x37\xe5\x2a\xc9\xc7\x83\xb0\x10\x98\x6c\x62\x44\xe9\x88\x35\xc9\x84\x4e\xf5\x82\x9b\xbb\x44\x17\xa5\x56\xe0\xaf\x1d\x2c\xf8\x74\xf3\xf6\xe5\xc1\x7b\x24\x85\xe3\x31\xb8\x1f\x7f\x01\x6f\xc6\x83\xa0\xa9\x56\x2b\x85\xba\x87\xea\xc8\x09\x15\x45\x48\x42\x6e\x78\xb6\xc7\x44\xc9\x4a\x8c\x0c\x6b\xb1\xfd\x12\x25\x92\x59\xcb\x6d\x8c\x69\xa6\x3f\x50\x9b\x25\xe0\x4e\x99\x44\x85\x76\xda\x6c\x49\x78\x65\xe1\x99\xf8\x46\x23\xdf\xea\x17\x42\xb0\x25\x32\xa9\x17\xd1\x72\x48\x58\xe5\xf4\xa8\x5e\x59\xd5\xbf\x53\x9d\x2e\x5b\xec\x19\x94\x31\xca\x58\x21\x24\xf0\x3f\xfd\x55\x4f\xc1\xd8\xd3\x13\xf2\xf4\x2d\x97\x73\xee\x44\xc2\xc8\x05\xaf\x38\x50\xd6\x84\x13\xf2\xc2\x40\x21\x4f\x88\x65\xca\x46\x50\x42\x91\x8d\xb6\xd5\x2d\x38\x36\xf2\x90\xfc\x72\x7a\xba\x6d\x1d\xf2\xd9\x78\x3e\x1e\x34\x0d\x36\x6e\x72\x3c\x67\x86\x40\xcc\x64\x02\xee\x75\x58\x9a\x9a\x21\xa1\xdf\xbe\xc5\x2f\xe0\x69\xb5\xa2\x27\xdd\x0e\xe4\xce\xdd\x55\x65\xca\x1c\x87\xa5\x8b\xc1\x0b\x24\x1a\x50\x03\xae\x67\x4c\x5a\x0e\xaf\xd0\x35\x6a\x88\x0a\x3a\x49\x91\xda\x21\x51\x95\x94\x40\xee\x80\x10\x5b\xbf\xad\xe0\xaf\xd0\x35\x9f\xe3\x45\x09\x8c\xd7\xd7\xb7\x27\xcd\xbf\x5b\x94\x28\xb5\x85\x8e\x45\xae\x6b\xff\x6e\xca\xc2\xd6\xcf\x28\x5f\x4a\xed\xee\x74\x89\x1c\x36\x28\x92\x7c\xc6\x55\x1a\x9e\x5b\xd2\x54\x2d\xd0\xcf\x4e\x47\xe9\x73\x2d\xab\x02\xd9\x9f\x7b\xc2\x94\x25\xf7\x33\x83\x23\xf9\xb1\x64\x89\x70\x10\xc6\x69\xfc\x1c\x56\x50\x7f\xe7\x2b\xfb\x2a\x6a\xcd\xe0\x6c\x8a\x21\x3b\x51\xf0\xa0\x0b\x9f\x7e\x87\x6e\x03\xe2\xd4\xe8\x05\x54\x61\x43\xcf\xb4\x29\x18\xa4\x9f\x1e\xfd\x36\x38\x2a\x06\x47\xe9\x8d\x3a\x7a\x3b\x3c\xfa\x30\x3c\xba\xa4\x8d\xf2\x65\x4b\x79\xcb\x55\x8f\x40\x5e\x93\xe7\xb2\x5c\xf2\x24\x2c\xb5\xdd\xf8\xda\xa8\x81\xbf\xd5\xa8\xdb\x85\xa2\xc5\x15\xe4\x83\xa5\x97\xbe\x94\x6f\x00\x50\xa0\x8a\x59\xa5\xbc\x70\x8f\xcf\x61\x2a\x8e\x41\xc5\xaa\xcd\x7b\xae\x8b\x82\xa9\xd4\x3e\xc6\x89\x50\xe8\x1e\x65\xec\x7c\xd2\x72\x59\x70\x13\xa7\xba\xa8\xa9\xb1\xd4\x80\x29\x57\xcc\xcc\xb8\x8b\x4b\x66\x80\xf6\x5a\xf2\x02\x7e\x82\xbe\xde\xf1\xa8\xd1\x6f\xa1\x60\xb5\xfa\xfd\xda\xb1\x27\xb1\x75\x42\x53\x76\xdc\xb2\xc4\x04\x24\x4e\xfa\x24\x21\x26\x0e\x89\xe7\x8e\xf1\x19\x53\x32\xea\x76\x44\x46\x7a\x28\xe4\x69\x64\x32\x81\xbc\x62\x93\x52\xaf\xb1\x33\x18\x10\x80\xba\xd8\x43\xb0\xd4\x33\x91\x20\xba\x3f\x4d\x72\x9e\xdc\xf3\xf4\x29\xc2\xba\x50\x30\xc3\x16\x36\x00\x32\xad\x1c\xf9\x52\xc1\x3e\x91\x73\x03\x18\xdd\xf1\xfe\x78\x65\xe0\xd0\x93\x97\x5a\x4b\xce\x54\x2f\xd5\x49\xe5\xc3\x83\x80\xeb\x48\x5f\x2e\xdf\xa5\x3d\x8f\x20\xe0\x6b\x44\xfb\x1b\x1f\x8f\xe3\xda\x14\x64\x21\x8c\x45\x3c\x67\xb2\xc2\x82\x5d\x54\xc5\x94\x9b\x9e\xd7\x8f\xab\x2b\xc2\x61\xa8\xbc\xd3\xfb\xf8\x7e\xca\x6c\x9f\x46\x56\x8a\x14\xfa\xf4\x38\xe8\xf1\x06\x60\x5e\x61\x7c\x20\x0a\xa8\xd9\xac\x47\xb1\x1c\x42\xcd\x60\x6f\xf1\x25\x81\x4c\xf7\xff\x7e\xf9\xf1\x22\xb6\xce\x00\x59\x64\x4b\x9f\xd6\x63\x10\xed\x76\xb0\x7c\x38\xec\x31\xce\xb9\x2f\x64\xef\x3b\xbc\xeb\x5e\xca\xa0\xfc\xf9\x07\xad\xda\xa5\xf6\x4c\x10\x22\x28\xd4\x86\xf4\x30\xbf\x02\xd6\x4f\x47\xf0\x33\xf6\xa5\x8f\x3d\x40\xc4\x92\xab\x99\xcb\x81\xdc\xef\x87\x3a\xa2\x4e\x00\x91\xb0\x7c\x2d\x6e\xe3\xb2\xb2\x79\xef\x1a\xc9\x2d\xa0\xc2\xe4\x5c\xc1\x50\xf6\x8e\x4f\x5a\xda\x80\xfd\xb6\x4e\x40\xa3\xa6\x99\xc2\x03\xd5\x30\x35\x93\xdc\xeb\x68\x14\x20\x3e\x1d\x28\x8c\xac\xb7\x3e\x8b\x7f\xee\xd1\x3f\x61\xb9\x40\x41\x84\x9e\x71\xc3\x5c\x65\x38\x14\xa9\x34\xba\xec\xd1\x1a\xe0\xe8\x09\x22\x73\xdc\xc6\x3c\x34\xdd\x96\x6e\xfc\xff\x2f\x44\xd1\x9d\xc3\xc4\x7e\xec\x30\xc6\x07\xb2\xd7\xdb\xd5\x39\xbd\x0d\xea\x36\x94\x67\x3b\x94\xe7\x3b\x94\x5f\x42\x91\x1e\x8d\xf2\xa1\xbd\x86\x61\x47\x72\x2b\xc8\x87\x52\x4d\x41\xa0\x55\x17\x42\xa5\x7a\x11\x6b\x85\x18\xd9\xee\x54\xdf\x75\xeb\xae\xaf\x41\x49\xf1\x05\xf9\x07\x9f\x5e\x6a\x98\x68\xd7\xa3\x0b\x3b\x1c\x0c\x28\xe9\xfb\x40\x70\x0b\x85\x47\x3a\xf0\xd6\x9a\x56\x59\xcf\xcc\xa1\xd2\xc8\x4b\xb7\x47\xce\x37\x91\x56\xba\xe4\xea\x81\x87\xab\x5d\xae\x44\x6a\xcb\x77\xd8\x76\xf9\x0a\x6e\x2d\x9b\xed\xdf\x38\xc2\xb4\xb5\x5a\xba\x76\xfe\x15\x3c\xf6\x02\x90\x3d\x06\x46\xd6\x41\x93\xd8\x28\x88\x42\x11\x84\x52\xdc\xbc\xbd\xfa\xf0\x7e\xf2\x70\x52\x9c\xfe\x7c\x75\x7e\xe9\x21\x24\xe8\x6d\x6d\x00\x1e\x5e\x4a\x3c\x94\x06\xc7\xbc\xe3\x9e\x69\x1b\x5e\x7a\x6b\xfa\x16\xb8\xf9\x13\xc8\x77\x01\xad\xd3\x39\x30\x88\x7a\x2b\x89\x19\xa4\x68\x8e\x79\x08\x13\x8d\xd4\x43\xf3\x60\x34\xfc\x42\x7e\xa3\x54\x98\x76\x36\xd6\xca\xea\xf5\x3b\x58\x0f\xfb\xff\xc1\x9a\x43\x93\xef\x6a\x04\xfa\xa1\x3a\x3c\xb2\xed\x53\xe2\x17\x7c\xba\xd7\x48\x3d\x41\x9c\x1e\xef\xa2\xf4\x1a\xa4\x0f\xb2\x88\xa2\xb0\x59\x89\x3d\x36\x1b\xb4\xee\x53\xf2\xef\x7f\x9d\x53\xb4\x8e\xbd\xeb\xb7\xf8\x50\x75\xdc\x8b\x9f\xb4\xab\x50\x1b\xde\xac\x3e\x2c\xd1\xe3\x3e\xe1\xc6\xd9\xd4\xb8\xde\xa9\x71\x24\x1a\x6d\x5e\x81\x8f\xdd\x4f\xf0\x35\xbe\x76\x36\x82\xad\xca\x86\xca\x85\x63\x61\x8b\xa3\x2c\x1e\x92\x7c\x5e\x37\xc8\xe6\x57\x6f\xbd\x9d\xad\x28\xeb\xb8\xf6\xee\x93\xe0\xcc\xee\x06\xb9\x76\x14\xf8\x80\x01\xb2\x38\x0a\xd4\xef\xc5\x2f\xd2\xf6\x29\x21\x15\x16\xbf\x0b\x7d\xf4\x78\xb8\x3f\x48\xb8\x9a\x16\xc2\xfd\xaf\xc2\x86\x09\xeb\x45\x9d\xa9\x6a\xc9\x15\xfe\xdf\x3a\x0f\xfd\x21\x69\xd8\xb8\xf3\xf3\x59\xf8\x69\xd9\x75\x12\x5a\xf9\x0b\x59\xf0\x33\xd0\x59\xed\x9c\xc1\x7e\xb8\x21\xd4\x5c\xfb\x37\x84\x1d\xb6\xc7\xf7\x03\x4c\xa9\x9e\x7e\x79\x14\x96\xd7\x69\x07\xc6\x58\xa4\x3b\x88\x0c\x23\xc2\x01\x43\x53\x02\x16\xf7\x9c\x35\x41\x2a\x20\xb3\x5d\x08\x97\xe4\x04\x09\xd7\x14\x30\x63\xc6\xe9\x6d\x5d\xdb\x84\x41\x28\x14\xbe\xfb\xa2\x14\xbe\xc6\xe8\xb0\xfb\x58\x82\xa9\x15\x45\x64\x4b\x0f\x32\x6d\x04\x6f\x65\x18\x27\xce\x9b\xe1\xc6\xd0\x5b\x04\x16\xfc\x64\x5d\x37\xd2\xf7\x35\xab\xac\xb2\x38\xf8\xe8\x0a\xed\x37\xaf\x77\x22\xdd\x06\xb5\xdd\x10\x6b\x53\xc7\xad\x0a\x6f\xbc\x28\xec\x6c\x8f\x17\x98\x57\xc7\xbf\x3a\xd0\x47\xc7\xa5\xe1\xc4\x7f\xd5\x4f\x6e\x28\x12\x23\x26\xc5\x0c\x3e\x18\x25\xcf\xdc\x0d\x3d\xa3\xa3\x8d\x0c\x68\xab\x8b\x01\x4f\xb1\x2d\xa5\x80\x43\xc7\x8d\xa2\xb5\xed\x30\x52\xad\x71\x42\xae\xed\x71\x22\x81\xb1\xe3\xad\xf7\x27\xc8\x01\xf3\x84\xc7\x94\xf1\xd4\xac\x6d\x85\x20\xd6\x4c\x74\x3c\x00\x27\xcf\xe8\xff\x29\x85\xa8\xb6\x9d\xac\x29\xa0\xe3\xfd\x68\xd3\x0c\x78\x64\x3d\xac\x1b\x1a\x83\x5e\xe2\x11\x8b\xa1\xef\xe6\x50\x8a\xd1\x5e\x8b\xbf\x8b\xb2\x6d\xd0\x1f\x59\xc4\x1c\xf7\x9d\x1f\x9a\x36\x1c\x6f\x9c\x1e\x18\x1f\x6d\xd4\xc8\xb6\x96\x04\xec\x3a\x5e\x2b\x82\xdd\x4a\x9b\xa2\xa9\x5d\x2a\x63\x3f\x69\x1b\xcd\x01\x48\x22\x64\x8a\xf0\x4c\x19\xe6\xcf\x73\x16\xdc\xe5\x3a\x9d\x50\xd8\x72\x1c\x5d\x53\x99\x9f\xf1\x09\xcd\x9d\x2b\xe1\x1c\xba\xbe\xf9\x19\xc0\x71\xd8\x1f\x86\xff\x86\x17\x95\x13\xf8\xa8\x54\x78\xff\xf9\xf9\xd7\x77\xd8\xa3\x31\xde\x95\xb5\x9c\x68\xa5\x0d\x7a\xd3\x5f\xbd\xc1\x47\xb4\x83\x8f\xbe\x1a\xd0\x10\x7f\x44\x72\x0f\xdd\x1a\x3c\x7c\x03\x0e\xf6\x60\xf3\x07\xf0\x3b\xbe\xa1\xc4\x5f\xd0\xc1\x62\xa2\xa5\x36\x59\x25\x81\x24\x52\x64\x6e\xe2\x6a\xbc\xd9\xce\x59\x9f\x42\xaf\xbf\xaa\x97\xc8\x3f\xdf\x7d\xc2\x7e\xec\x5d\x8a\xa2\x92\x7e\x43\x26\x11\xa9\x6d\x8c\x07\x6d\xaf\x9a\x9e\x85\x7a\xc5\xac\x2c\xf1\x3a\x22\x17\x32\xed\xa5\xf2\x78\x44\xb6\x8b\xed\x31\xb7\xd3\x5d\xf9\xcb\xb3\xe6\xce\x0c\x5e\xf0\xdd\x5f\xea\x55\x0a\x0e\xa0\x5a\x7a\x40\xf3\x51\x50\xc9\x96\xba\x72\x64\xce\x0d\x5e\xdc\x49\x92\x40\xdd\xc0\x74\xf8\x69\x2e\x13\xb7\xae\x19\x23\x70\xe2\x6c\x3c\xd8\xa5\x79\xab\x68\xe6\xac\x3b\x1e\x84\x4b\xe2\xff\x04\x00\x00\xff\xff\xee\x90\xef\x87\xec\x16\x00\x00")

func index_html_bytes() ([]byte, error) {
	return bindata_read(
		_index_html,
		"index.html",
	)
}

func index_html() (*asset, error) {
	bytes, err := index_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "index.html", size: 5868, mode: os.FileMode(420), modTime: time.Unix(1455802948, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"bower.json": bower_json,
	"favicon.ico": favicon_ico,
	"fcs-lpc-motor.html": fcs_lpc_motor_html,
	"index.html": index_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"bower.json": &_bintree_t{bower_json, map[string]*_bintree_t{
	}},
	"favicon.ico": &_bintree_t{favicon_ico, map[string]*_bintree_t{
	}},
	"fcs-lpc-motor.html": &_bintree_t{fcs_lpc_motor_html, map[string]*_bintree_t{
	}},
	"index.html": &_bintree_t{index_html, map[string]*_bintree_t{
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: AssetInfo, Prefix: k}
	}
	panic("unreachable")
}
