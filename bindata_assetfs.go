package main

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _bower_json = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\xcb\x6e\xdb\x3a\x10\xdd\xfb\x2b\x0c\xdf\x9d\x71\x45\xd9\xb1\xdb\xa2\x41\x51\x14\x41\xbb\x2f\x90\xee\x82\x26\xa0\xa8\xb1\xc4\x82\xe4\xb0\xe4\x08\x89\x11\xe4\xdf\x4b\x8a\x7e\x48\xaa\x64\x77\x65\x73\xce\x83\x67\x86\x14\x5f\x67\xf3\xf9\xc2\x70\x0d\x8b\xdb\xf9\x62\x27\x7c\xa6\xac\xc8\x34\x12\xba\xc5\xff\x11\xaa\x51\x83\xe5\x55\x0b\xd7\x44\xd6\xdf\xe6\x79\x25\xa9\x6e\x0a\x26\x50\xe7\x15\x66\xca\x7b\xca\x47\x94\xbc\xa1\x1a\x9d\x0f\xc2\x87\xb0\x0c\x85\x7b\x28\xb8\x27\x09\x66\x7e\x27\x0d\xd0\xfc\x53\x11\x7f\xbe\x08\x70\x86\x89\xfa\xf3\x22\xb0\x7e\xb6\xca\x12\xbc\x70\xd2\x92\x44\x13\xb7\x4d\x76\x9a\xcb\xee\x0a\xcb\x46\xc1\x8f\xbd\x8d\xc1\x1e\x92\x4c\x49\x01\xc6\xb7\x49\xef\xee\xbf\x26\x9e\xac\x0c\x3a\x38\x67\x58\x2e\x73\xb6\x6c\xa1\xd8\x36\x96\xf0\x94\x9c\xfc\xb1\x56\xe0\x33\xb8\xa7\xd0\x9a\x45\x03\x86\x4e\x75\x02\x4f\xdd\xff\xbe\x1b\xd7\x82\x29\xc1\x08\x09\xb1\xdb\xd7\x44\xb2\xdc\x82\xcb\x34\x98\x26\x06\xfa\x8e\x6a\xaf\xc1\x7d\x53\xa0\xa3\x6b\x7e\x46\xff\x7b\x5c\xb3\x1b\x76\x73\xf4\x4e\x40\xe9\x78\x88\x91\x59\x6e\x40\x4d\xcb\xbb\xac\x68\xb3\x62\xef\xfb\x36\x35\xf0\xf2\xba\x4d\x97\x15\x6d\xd6\x6c\xd3\xb7\xf1\x4a\x06\xc2\xb4\x41\xc2\x53\x82\x8f\x7d\x29\x21\xaa\x82\x5f\xd0\x1e\x08\x69\xdf\xed\x51\xec\xb0\x08\x17\x29\xdb\xa1\xa1\x1d\x17\xed\x91\x3e\xae\xd8\x76\x18\xac\x68\x88\xd2\x1d\x19\x37\x4f\x78\x0a\xb6\x5e\xf7\xb5\x92\x40\x4f\x2b\x23\x3a\x3e\x0b\xe1\x50\xa9\x7f\x9c\xec\x08\xf9\x10\xe6\xdd\x20\x8c\x40\x73\xb5\x9b\x0e\x69\xf4\xb4\x35\x27\x70\x92\x5f\xc8\x73\x64\x8c\xca\x05\x77\xe5\xb4\x34\xa2\x69\x20\xeb\xe1\x09\x57\x95\x82\xab\xe1\x7b\xb4\xc3\x10\xb6\x03\x27\x5e\xf8\x0b\x06\x01\x8d\xba\x0d\x3b\xcd\x4e\xba\x30\x90\xf8\x38\x8d\xca\xce\x68\xda\xee\x43\x4f\xb6\x43\x37\x7a\xfc\x27\x70\x98\xb1\x05\xc2\x9b\x86\x95\xc3\xe7\x8c\xe0\x85\xb8\x03\x3e\x69\xf1\x17\xf3\xe0\xb7\x3a\xfa\xfd\xfa\xdd\x80\xdb\xb7\x37\x3b\x7c\xfe\xec\x54\xb7\xc9\x2d\xdb\x29\xa4\x88\x3a\xb9\xe7\x65\xde\xab\xf6\xfa\x50\xf0\x92\x29\xbe\xc7\x86\xa6\xdb\x39\x73\xd2\x6b\xb3\x89\x8f\xd7\xdb\xec\x6d\xf6\x27\x00\x00\xff\xff\xb7\xfc\xfa\x4a\xfe\x05\x00\x00")

func bower_json_bytes() ([]byte, error) {
	return bindata_read(
		_bower_json,
		"bower.json",
	)
}

func bower_json() (*asset, error) {
	bytes, err := bower_json_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "bower.json", size: 1534, mode: os.FileMode(420), modTime: time.Unix(1455698209, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _favicon_ico = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x94\x7d\x4c\x55\x65\x1c\xc7\x9f\xab\xe6\xda\x5a\x41\xb9\xb5\x85\x93\xdd\xd6\x8b\x28\xe5\xac\x10\x73\x72\x31\x5e\xe6\xc2\xd8\xa5\x49\x2f\xda\x35\xbb\xad\xc1\x6e\xbc\x94\xcb\x90\xba\x8b\x09\x82\x12\x6f\x37\x27\x83\x08\x0a\x48\x97\x97\x80\x41\xca\xa0\x04\xe2\xc2\x15\x24\x0b\x3d\xbc\x5c\xf4\xc2\xbd\x89\x88\xbc\xc4\x25\x2e\x01\x5a\x9b\x7f\x7c\x3a\xf7\xdc\x51\xba\x66\xbf\xb3\xef\xce\x73\x7e\xe7\xfb\x79\x9e\xf3\xfc\x9e\xe7\x39\x42\xa8\xe4\xcb\xd7\xd7\x73\x57\x0b\xc3\x0a\x21\x1e\x16\x42\x04\xc8\x92\x53\x72\xc6\x9b\x5f\x8a\x55\xf7\x79\x75\xb7\xe8\xf8\x32\x5e\xdf\x64\x8a\xb1\x34\x14\x44\xd2\x60\x7a\x81\xea\xc3\xc1\x14\x25\xf8\x91\x1e\x2b\x2c\x29\x31\x42\x7f\x37\x6e\xe4\xdc\x71\xf5\x40\x63\xae\x64\x6f\x2f\x67\x66\xb4\x97\xb9\xdf\x1c\xcc\x4e\xd8\x98\x19\xeb\x65\x7a\x54\xc2\x71\xa1\x91\xca\x2c\x2d\x89\x51\x42\xd2\x47\xdc\xf6\x41\x72\xcc\x8f\x9d\x57\xbb\xec\x2d\xee\xb9\x49\x27\x8b\xf3\x73\xcc\x4e\x5e\xc1\x3d\x7d\x8d\xe6\xd2\x5d\x54\x1d\x0c\x60\xe2\xca\x45\xfe\x98\x9d\xc6\xed\x9a\xa0\xa7\xa3\x8a\xf8\xe8\x07\xdc\xb1\x5b\xff\xed\xe3\xaf\x99\x41\xe9\xd6\x0d\x17\x37\x17\x17\xb0\xb7\x95\xd1\x59\x99\x44\x73\xf1\x1b\xb8\xc6\x87\x39\x9e\xea\x47\x4d\x76\x28\x8b\x0b\x0b\x98\x12\xd7\xe2\xb4\x59\xf9\xa9\xad\x0a\xed\x66\x21\x79\xd8\x89\xde\x7a\xfd\xfc\x78\x1f\xb7\xfe\x9c\x67\xdc\xd6\xc2\xe5\xb6\x52\x86\x3a\x4f\x32\xd4\x5d\xab\x30\xb5\x47\x82\xa9\xce\xd6\x28\xed\x8f\x5f\x16\x64\xc6\xad\x65\xa8\xdf\x4a\xe1\x11\x03\x21\xeb\x84\xde\xde\x5a\x68\xb9\x31\x3b\xc6\xef\x23\x3d\x4c\x0e\x9f\x57\x7c\x1e\xb9\xc6\x1d\xf4\xb6\x16\x52\x9a\x74\x2f\xdf\x1e\xf6\xf2\xa9\x31\x82\x84\x17\x05\x15\x26\x03\x03\x17\xad\x04\x3f\x2e\x2c\x7d\x8d\xf9\xdc\x9c\x9b\xc4\xf6\xc3\x51\xa6\xaf\xda\x18\xe9\x6d\xa6\xc9\xa4\xa5\x26\xe3\x59\x2e\x75\x7e\x4d\xd9\xbe\x55\x9c\x3c\xe4\xe5\x3f\xd4\x0a\xf2\xf7\x6b\x38\x51\x94\x82\xd3\x2e\xf1\x5a\x54\x10\x3f\xd7\xa4\xb1\x30\x73\x0d\x6b\x45\x22\xce\x5f\x4e\x33\x25\xf7\xd1\xdf\x5a\x42\xbf\xa5\x44\x61\x06\xbb\xcc\xf4\x9c\xf1\xb6\x4f\x57\x1a\x19\x1e\xe8\x22\x73\x7f\x34\x99\x07\x74\x04\x3d\x71\x3f\xed\xe5\x71\xf2\x5a\x39\x69\xfc\x4c\x4b\x5f\x4b\xb1\xe2\xb3\x9d\xfd\x8a\x73\xf5\x69\x58\xab\x8d\xca\xb3\xd4\x61\xa6\x28\x55\x43\xf9\xa7\x3a\xec\xfd\x5d\xbc\x1e\xee\xc3\xf3\x4f\x0a\xd6\xf9\xa9\x38\x95\xb7\x55\x5e\xe7\x41\xea\xb2\x37\xf1\x7d\x71\x8c\xe2\xaf\xcf\x0f\xe7\xd8\x3b\x2a\x72\x75\x02\x6b\x5d\x8e\x52\xb7\xf7\x5f\x12\x1c\xd0\xf9\x2b\xfc\x7b\x6f\x69\xd8\xb0\x46\xb0\xf1\xd1\x65\x7c\xfe\xee\x4a\xcb\x84\xe3\x2c\x56\x73\x12\x75\x79\x61\x0a\x6f\xce\xd2\x90\xb3\x5b\x70\xe8\x15\x41\x6e\x9c\x3f\x3d\xed\xe6\x7f\xea\xea\x51\xcc\x36\x7f\x02\x1e\x11\x6c\x59\xbf\xdc\x52\xf0\xa6\xd0\x37\x97\x1b\xb8\x3e\x64\xa5\x36\x77\x87\xf2\xbe\xf2\x13\x0d\x07\x77\x0a\x3e\x92\xc7\x6d\x90\xe7\xec\x9a\xba\x8e\xf9\x0b\x23\x19\x1f\x44\xf3\x6a\xa4\x3f\x81\xab\x05\xcf\x3c\xb6\x8c\xf0\xe7\xee\x51\xf6\x73\xce\x5e\x5f\xc9\xd6\x59\xc5\xb8\xf3\x82\xc2\x57\x64\x46\x2b\xb5\x4e\xde\x21\xf8\xe6\x58\x02\x9d\x2d\x66\x74\x91\x3e\x68\x43\x7c\xe8\x6a\x6f\xe2\xa9\x35\x2a\xb6\x6d\x5c\x21\x2d\xed\x3f\x79\x1c\x75\x41\xf2\x06\xf7\xaf\x97\xba\x99\x99\x1a\xc5\x39\xd8\x4d\x7a\x5c\x20\x6f\x47\x08\x76\x87\x0a\xf2\xd2\x74\x94\x98\x8c\x1c\xcd\x36\x92\x9a\xbc\x87\x90\xa7\x57\xb8\xb7\x6f\x5e\x79\xc7\x19\x48\x8a\x12\xea\x7d\x3b\x7d\xa5\x53\x27\x32\x18\x75\x4a\x5c\x75\x48\x74\xfd\x58\xc5\x99\xef\xca\x70\x5c\x96\x88\x08\xf2\x63\xfd\x6a\x95\x67\xce\x52\xe4\xa6\x3b\xd9\xdb\x63\x57\xa8\xd0\xef\xd9\xfe\xa0\x25\x25\x3e\x8c\xbc\x74\x03\x59\x46\x03\x7b\x63\xc3\xd8\x12\xf8\x90\x25\x78\xed\xf2\xff\x9c\xdf\x39\x1f\xb5\xba\x7d\xb9\x5a\x9d\xae\xf2\x4a\xfe\x63\xfc\xaf\x96\x7c\x1e\xc6\xc3\xfe\x1d\x00\x00\xff\xff\xb8\x6d\x5d\xdb\x7e\x04\x00\x00")

func favicon_ico_bytes() ([]byte, error) {
	return bindata_read(
		_favicon_ico,
		"favicon.ico",
	)
}

func favicon_ico() (*asset, error) {
	bytes, err := favicon_ico_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "favicon.ico", size: 1150, mode: os.FileMode(420), modTime: time.Unix(1455561960, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _fcs_lpc_motor_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x5a\xdd\x6f\xdb\x38\x12\x7f\xb6\xff\x0a\x56\xc5\x61\x9b\xdd\xca\x76\xdc\xe4\x2e\xf0\xda\xc6\xf5\xd2\x16\x58\x20\xed\x16\x4d\xef\x61\xb1\x58\x1c\x68\x89\xb6\xd9\x50\xa2\x56\xa2\xe2\xb8\x41\xfe\xf7\x9b\xe1\x87\xbe\x2c\x3b\xb1\x93\xeb\x5e\xf3\x10\x53\x14\xe7\x83\x33\xc3\x99\x1f\x49\x8d\x9f\xbd\xf9\xf5\xfc\xf3\x6f\x1f\xdf\x92\xa5\x8a\xc4\xb4\x3b\x7e\xe6\xfb\xe4\x5c\x26\xeb\x94\x2f\x96\x8a\x0c\x07\xc7\x7f\x27\x9f\x97\x8c\x2c\xa4\x2f\xb2\x4c\x91\xd7\xb9\x5a\xca\x34\xeb\x91\xd7\x42\x10\x3d\x26\x23\x29\xcb\x58\x7a\xcd\xc2\x5e\x97\x10\xa0\xfe\x77\xc6\x88\x9c\x13\xb5\xe4\x19\xc9\x64\x9e\x06\x8c\x04\x32\x64\x04\x1e\x17\xf2\x9a\xa5\x31\x0b\xc9\x6c\x4d\x28\xf9\xd7\xe5\x1b\x3f\x53\x6b\xc1\x0c\x9d\xe0\x01\x8b\x81\x56\x2d\xa9\x22\x01\x8d\xc9\x8c\x91\xb9\xcc\xe3\x90\xf0\x18\x3a\x19\xb9\xf8\xe5\xfc\xed\x87\xcb\xb7\x64\xce\x05\x33\xb2\xa6\xdd\xee\x58\xf0\xf8\x0a\x54\x10\x13\x8f\x47\x89\x4c\x95\x47\x96\x29\x9b\x4f\xbc\x99\x5c\xb1\xf4\x3f\x81\x84\xce\x98\xc5\x2a\xeb\x27\x52\xac\x23\x96\xba\xdf\x1e\x4e\xd8\x43\x0e\x59\x90\xf2\x44\x91\x2c\x0d\x5a\xa8\xbe\xfc\x99\xb3\x74\xdd\x0f\x79\xa6\x6c\xbb\xf7\x25\xf3\xa6\xe3\xbe\xa1\xda\x4b\x03\x9e\xca\xd8\x9f\x0b\x76\xe3\x0b\xba\x96\xb9\xda\xe8\x28\x75\xda\x8f\x27\xcd\x95\x5c\xa4\x72\xe5\x2b\x76\xa3\x68\xca\xe8\x96\x6e\xc7\x7f\x5f\x95\x65\x1a\x95\xad\x03\x99\xf0\x40\xc6\xd5\xe6\x81\x6c\x12\xba\x60\xd5\xe6\x01\x26\x4b\x68\xc2\x52\x7f\x96\x2b\x25\xe3\xda\xc3\xfe\x2a\x19\xea\x80\xa6\x61\xa5\x79\x28\x9b\x30\xa5\xd0\x0f\xd3\x8a\x99\x68\xe9\x3a\x94\x2d\x5a\xbb\x3e\xdb\x4a\xcf\xc1\x4c\xe3\x04\xe2\xb7\xd2\x7e\x0a\x46\x87\x87\xa9\xe5\xa5\x58\x54\x69\x1e\xca\x26\xa2\x8a\xa5\x9c\x8a\xc6\xe3\xa1\xec\x20\x51\x48\x21\xfc\x25\xa3\x61\xc3\xbb\x2d\x6f\x0e\x16\x22\x78\x88\xb9\xad\xf2\x70\x28\x2b\x45\x67\xd5\xe6\xc1\x6c\xe4\x62\x21\x58\x3d\xf0\x6a\x7d\x87\x33\x96\x62\x46\xd3\xfa\xd3\x21\x69\xc0\xd4\x01\xc8\xbf\x52\xf5\xf1\x9f\x1f\x2c\x69\x7a\x48\x20\x6f\x30\x52\x3c\x62\x7e\x22\xf2\x05\x8f\x4b\xc5\x42\x19\xf9\x91\x0c\x73\x01\xa5\x30\x9c\x78\xf3\x20\xf3\x45\x12\x40\x97\x92\xa9\x4f\x93\x04\x06\x75\xc6\xba\x1e\x42\xa9\x9c\x78\x41\x9e\x29\xa0\xd0\x1d\xf8\xaa\x33\x5a\x4a\x28\xc0\xb7\xd0\xea\xac\x78\xa8\x96\x23\x72\x3c\x18\xfc\xed\x67\x7c\x5e\x32\xac\xc4\x95\x8e\x88\xa6\x20\x7b\x44\x06\x04\x6b\x80\xee\x9a\xc9\x1b\x3f\xe3\x5f\x79\xbc\x18\x91\x99\x4c\x31\xe2\xa0\x4b\xbf\xfa\x27\x48\x17\xeb\x17\xbe\xad\x42\x3e\x54\x78\xfe\x55\xc6\x8a\x8a\x23\x7c\x7f\xd7\xed\x22\x79\xb8\x36\xc2\x13\x1a\x86\x9a\xcb\xc9\x20\xb9\x29\xde\x6f\x8d\x68\x4b\x24\x33\xae\xb8\x8c\x47\x10\x51\x52\xe4\x8a\x69\xc1\x4a\x26\xa3\x81\x6e\x69\x28\x61\xdb\x33\x09\xe1\x11\x81\xf2\xfa\x49\xb0\xb9\x72\xed\x19\x0d\xae\xa0\xa0\x01\x26\xf0\x03\x29\x64\x3a\x22\xd7\x34\x05\xbd\x8d\xf0\x45\xca\xd6\xfe\x70\x30\x78\x49\x9e\x33\xc6\x8e\x1e\xa0\x5a\x0f\x12\xa1\x02\x1f\x36\x26\x76\xb6\x31\x2f\x5c\x08\x66\xd0\xa6\x0a\x02\x55\x5f\xa4\x74\xad\x55\x74\xca\x20\x85\x9f\x31\xc1\x02\x9c\xb6\x0f\x21\xea\xc6\xa7\x2c\x6c\x72\x37\x31\xbc\x4d\xc0\x4c\x40\xd7\x16\x92\x9e\xe2\x0a\x02\xe6\xb6\xee\xf4\xea\x04\x7a\x59\x42\x03\x66\x99\x37\x3d\x8d\xd8\xa3\x34\x54\x0f\x00\x98\x72\x43\x31\x19\xfb\x14\x26\x07\x1c\x4d\x7f\x39\x2e\xa2\x3c\xae\x7a\x17\x61\x1d\x04\xfe\xca\x5f\x8f\x88\xb1\x73\x31\xb6\xff\x23\x12\xc0\x7b\xc5\x03\x2a\xc0\x22\xda\x1e\x4d\x85\x87\x27\xc9\x4d\xf9\xaf\x14\xd4\xa4\xf3\xd1\x61\x20\x7c\xdb\x7c\xdc\xf8\xa3\x7a\x5c\x1b\xfd\xfd\x2f\xb0\xa4\xf8\x9c\xb3\xd0\x4e\xb9\xd3\xf9\xb1\x0f\x62\x00\xcb\xe1\x22\x9b\x62\x13\xca\x46\x22\x20\xe1\xe3\x43\x67\xbc\x3d\x72\xe6\xfc\x06\x60\x6c\x20\x68\x06\x4b\x15\xad\xe8\x69\x0a\x47\x62\xdd\x83\xcb\xb6\xe8\xab\x54\x5d\x82\xed\x89\x17\xb1\x38\xf7\x48\xad\xd2\x9b\x0c\x09\xf0\x72\x83\xc6\xf2\x0a\xf9\xb5\x13\x6b\x1d\x6b\x22\xc0\x4c\xd1\x9b\x5e\x5c\x5e\x7e\x26\xef\xce\x2f\xc9\x7b\xcc\x2b\xd9\x18\x90\xeb\xb5\x26\x1d\xf7\x1b\xaa\x75\x1b\xec\xec\x5a\xf0\x6a\x4a\x57\x01\x88\x79\x61\x68\x4c\x7f\x41\x6a\x85\x1b\x99\xe4\x32\x8f\xc0\xb5\x6b\x33\xbc\x33\x9e\x59\x3b\x40\x73\x59\x36\x6d\x71\x05\x13\xb8\xae\xc2\x50\xe0\x04\xc3\xca\x1f\x40\x4e\x7b\x75\xd2\x3b\x3e\x3d\xeb\x1d\x0f\x4f\x7b\xc3\xe1\xab\xd1\xe9\x60\x38\xae\x14\xf9\x1d\xc4\xc7\x4d\xe2\x93\x6d\xc4\xae\xcf\x68\xe3\x3a\x31\x43\xeb\xec\x0c\x0b\x59\x51\x95\x67\xe0\x96\xcd\x3e\x6b\x14\x6d\x67\x52\xb1\x10\xae\x11\x67\x9f\x72\xbd\x78\x8d\xf9\xeb\xc4\x62\xd2\x04\x83\xa2\x70\x7b\xeb\xda\x77\x77\x9e\x09\xb2\xe6\x04\x81\x62\x7a\x2e\xc1\xc0\x71\x98\x8d\xcb\x3a\xdd\x36\xec\xed\x0d\xb4\x54\xcb\xa0\x4a\x57\x56\xce\xb7\x04\xd5\xdb\x34\x2a\x85\x54\xe2\xc6\x2c\x3d\xe2\x96\x9e\x8d\x44\xdf\xc5\x84\x23\x69\xa3\x29\x0b\xcd\x56\xaa\x9a\x1b\x02\x25\xea\x3e\xc0\x8e\xf6\xa1\x66\x7b\x06\xe9\xbc\xe1\xb4\xa2\xbb\xd4\xab\x58\x22\xcd\x70\xad\x73\x8c\x64\xcc\xa1\x51\xe7\xe7\x3a\xbb\xad\xcc\x70\xca\xd6\x0b\x19\xf9\xf5\xc3\xc5\x6f\xb5\xd7\xe3\xca\x36\xa6\x16\x46\xdd\xaa\x8f\x36\x56\xa0\x1d\xd3\x2d\x87\xb4\x24\x28\xc4\x12\xfd\x6a\x32\x1b\xbb\xfd\x6a\xe7\xa3\x81\x2b\x2f\x30\x81\xf2\x6c\xd4\x02\x44\x5e\x62\x99\x49\x25\xaa\xcd\x59\x36\x32\xa9\xd6\x85\x01\x3c\xaa\x75\xc2\x46\xe4\x43\x1e\xcd\x58\xfa\x12\x4a\xb0\xc8\xe1\x71\x70\x87\x64\xf8\xef\x0e\xd3\x6b\x75\x83\xdc\x2f\xa1\xcf\x16\x20\x54\x5b\x52\x66\x53\xbe\x0d\x08\xd5\x36\x6c\x50\xf2\x99\x2e\x26\xbb\x91\x01\x94\x5c\xff\x74\x30\x40\xbd\xec\xdb\xd5\x92\x23\x06\x81\x2a\xb3\xc9\xef\x77\x0a\xb5\xe6\x9a\xfd\x71\x3f\x5f\x3d\xdc\x72\x2e\x58\xe1\x16\x10\x49\x1b\x70\xc2\x14\x3b\xdf\xc0\x99\x5a\x97\xc1\x3e\xf5\x3e\x44\x46\xa6\x07\xf8\xaa\x25\xf2\x9b\xc3\x42\xf1\x57\x16\xe9\xc5\xb0\x11\xa7\x02\xdf\x96\xd5\xab\x52\xbc\x5c\x16\xd0\xba\x60\x5c\x80\x22\x13\xaf\x2c\x0b\xe4\xd2\x58\x9a\x80\x53\xaf\x29\x56\xd6\x89\x37\xd4\xab\xae\x56\x11\x80\xda\xaf\x95\x85\x31\x64\x0c\x94\xa5\x03\x54\x21\x26\x74\x81\xab\x60\x61\x80\x9e\x5a\x97\x89\x57\x01\x0f\x38\x61\x57\x19\x20\x24\x97\x38\x6c\x3a\xae\x5a\xbd\x88\x02\xe3\x7e\xf0\x16\x0d\xd7\x1e\x31\xa5\x30\x23\x21\xcf\x50\x68\x48\x52\xca\xb3\x4a\xd1\x45\x82\x15\x57\xc1\x92\x68\x37\x78\xd3\x4f\x48\x37\xae\xed\xe8\xa7\x46\x62\x5f\xa5\x0f\xd4\xf3\x93\x54\xda\x1c\xe4\x0d\x4f\x0d\xe4\x78\xa0\xce\x96\xce\x0f\x79\xea\x39\x4d\x0b\xcd\x5d\xd6\x03\x11\x46\x9a\x37\xfd\xd0\x7f\xfd\x58\x55\x3f\xbe\x7f\xa8\x41\x93\x28\xfb\x46\x4a\xbd\x8e\x17\xb9\x00\x5c\xfa\xd1\xe2\xfd\x87\x29\x48\x63\xf0\xf4\x37\xd2\xf0\x33\x2c\x12\x96\x82\xd8\x94\x3d\x4c\x39\x5c\x55\xfe\x60\x53\xbb\x2c\x9f\x43\x81\x9e\x78\xe7\xde\xff\x93\xa2\xc7\xdf\x8b\xa2\xc3\xef\x45\xd1\x57\x4f\xae\x28\xb4\x8a\xd4\x09\xed\x22\xa5\x3a\xe8\x71\x41\x61\xa3\x6f\x54\x20\x79\x12\x42\x46\x1f\xd9\x57\x84\x10\xa8\xe4\x50\xe1\x9b\x9a\x9a\x61\x46\x36\xbe\xd7\xa9\xdc\x82\x89\x71\xe5\x6c\x72\xda\xad\xc1\x82\x02\x15\x54\x40\x81\xc3\x04\xf5\x9a\xfc\xb2\x8b\x65\x7d\x47\x55\x7f\xe6\xfb\x3f\x3d\xdd\x5f\xb7\x83\xc5\xca\xa8\x40\xb0\x04\x01\xc2\xc9\xba\xe6\xc4\x7f\x3b\x7e\x00\x38\xa8\x4f\x51\x2a\x85\x70\xc7\x91\x4a\xf5\xb0\x0c\x0b\xac\xab\xea\xa6\xc7\x9c\x4c\x1a\xf0\x53\x9e\xb7\xe8\x1a\x7d\xf7\x3f\xad\xf6\xb5\x80\x04\xce\xee\x70\xe7\xe4\xb8\xf7\xea\x1f\xa7\x2d\x83\x7e\x37\xe1\xf9\x47\x4f\x23\x94\x79\x2e\xda\x81\xcb\xf3\x93\xe1\xd9\xe9\xfc\xa4\xc4\x40\xcf\xe7\xf3\xf9\xcf\x0f\xe0\xdf\xab\x94\xda\x8a\x99\xcc\x4b\x30\xd3\x55\x1b\x34\x4a\xb0\x9f\x0e\x0d\xe8\x6a\x90\xcc\xc1\x37\xfe\x15\x5b\xcf\x24\x02\x8c\xb9\x04\xbf\x18\x3b\xef\x46\x5b\x35\x96\x35\x20\x47\x9e\x99\x23\x3a\x1a\x2b\xe3\x9e\xa6\x44\x63\xa1\x47\xc9\xac\xcb\xd8\x2d\xbe\x30\x60\x75\xcf\x5f\x31\x5d\xa5\xbb\x6a\xbf\x12\x94\x76\xaa\x87\x12\xf7\x82\xb9\x73\xbb\x3e\x5a\xe0\xdc\x3d\x78\xce\xec\x50\xca\x5d\xab\xdb\xc1\xa7\x06\x4a\xd5\x5f\x6e\xdd\xbc\x35\x37\xb5\x76\x49\xb9\xc5\x09\xab\xd2\x60\x3a\xfb\xc2\x23\x60\x55\xb3\x6d\x98\x78\x50\x58\x23\x1e\x9b\x5f\x0a\x29\xf5\x27\x28\x60\x2c\xe4\x26\x29\x8e\x6b\x07\xda\x0d\x29\xd6\xac\x75\x54\xe8\x96\x80\x47\x64\x1c\x08\x1e\x5c\x69\x15\x7a\x19\x8b\x43\xbb\x69\x7e\x71\x1b\xd3\x88\x8d\x7e\xd0\x1a\xfd\x70\x77\xe4\xb5\xe9\x99\xcf\x22\x0e\x26\xba\xd4\xbf\x8d\x64\xde\xb2\x53\x2b\x9b\x6e\xf3\xd8\xb4\x6b\x1b\xae\x7c\x42\xeb\x56\xd0\xa7\x3d\x28\xdb\x61\x6a\xc4\x08\x85\xad\x8b\x9a\xb6\x97\xd1\x9b\x10\x6d\x0f\xb3\x6f\xa8\xba\xe9\x83\x96\xd9\x1c\xe2\x90\x76\x47\x68\xd4\xfc\x84\xa6\x4f\xa2\x87\x84\xf5\xab\xc1\x60\xf0\x17\x18\x3b\x89\x36\xad\x8b\x0a\x3f\x99\x39\x37\xf1\xfe\xd3\x99\x56\xef\x0a\x7c\x77\x73\xb0\x3b\xa2\xcf\xca\xfc\x71\xf6\x17\x18\xba\xae\xea\x86\xcd\x9b\x33\x39\x30\xbd\x14\xad\x3a\xa2\xdb\x76\xd2\x53\xc7\x74\xa4\x09\x94\x0c\xa2\x3b\xf0\xa0\xc6\x1d\xa3\x6d\x81\x5b\xd3\x6e\x71\x5b\xb5\xed\xde\xe9\x1b\x21\xa8\xc7\x81\x23\x60\xa6\x61\x20\x10\x11\xfd\x57\xbb\x79\x33\x5d\xf7\x4e\xd0\x71\xe8\x40\x7c\x81\x9d\xd6\x23\xc2\x63\xc1\x63\xe6\xcf\x84\xd4\x17\x3b\xf7\x72\x70\x17\xe3\xbb\xec\xd9\x31\x0f\xa0\x5b\x72\x43\x32\x09\x61\xae\xaf\xc1\xcc\x1c\x5a\xbf\x06\x41\x6e\x76\x3e\x43\x8b\x6c\x77\x68\x52\xd7\x41\x8b\x6a\x91\xb4\x1f\x70\xb9\x2c\xc2\xe8\x71\xc8\x65\x79\x32\xfd\x45\x1b\xf9\x1d\x17\xb0\xb5\x83\x47\xfb\x02\xbf\x57\xd1\xd0\xbf\xf8\x7a\xa5\x5c\x98\x79\x22\x24\x0d\x6d\x28\xfb\xf8\x51\x91\x1d\x10\x31\xb5\x94\x30\x08\xd6\xab\xf2\x08\x0d\x8c\x56\xfd\xcd\xf1\xa0\x75\x1c\xe0\x61\xe8\xc4\x8b\x72\xa1\x78\x42\x53\xd5\x47\x1e\x3e\x6c\xc6\x68\x33\xc3\x99\x30\x30\xc3\x0d\x35\xe6\x8e\x89\x67\xf9\x9a\xae\x94\xfd\x99\x43\xd5\x0b\x49\x2c\x2f\xe8\x8c\x89\x77\xf0\x0e\xf6\x82\xfc\x2b\x9b\x0c\x07\xe5\xb5\x10\xb2\xda\xc1\x7e\xc9\xc3\x90\xc5\x4e\x80\x92\x57\xf8\x60\x73\xe6\xed\xad\x7e\xc6\xfb\x05\x27\x6c\x27\xdf\x7d\x60\x96\x99\x8a\xf1\x2a\xba\xe2\x05\xbb\x06\x87\x1d\xdd\x93\xe9\xd0\x62\x0f\x43\x52\xe0\xd8\xf2\xea\x63\x2f\x2f\x07\x96\xac\xe1\xe2\x05\x6b\xf1\xb0\x1b\xbb\x71\x57\xe3\x56\x80\x40\xcf\xd8\xec\xee\xc6\x62\xf5\x01\xe4\xb2\xca\x26\x27\xc4\xfe\x50\xb1\xa2\xeb\x0c\x3f\x0b\x80\xed\x8e\xa6\x21\xb0\xfc\x03\xb6\x94\x02\x56\x8f\x16\x4e\x06\xbd\xb3\xde\xf1\xa9\x57\x78\xc0\xc9\x78\xb4\x13\x9c\x9d\x1e\xe2\x82\x43\xa4\xe0\x47\x7f\x6a\x43\xc8\x27\xec\xdd\xc3\xcd\x4f\x57\xd1\xca\x8a\xf4\xb2\xbb\x71\x79\xa1\x23\xbe\xb8\xb8\xb8\x54\x29\x8c\x2b\x2e\x2e\x3c\x4f\x5f\x5a\x6c\x94\xc3\x6f\x78\xc0\x61\x6f\x91\xda\x0f\x38\x5a\x6f\x9b\x5a\x6b\xee\x77\x51\x4f\x7b\xfa\x2b\x9b\x4a\xed\x39\xb1\xb5\xc7\x9d\x43\xd8\x5a\x04\x43\xcb\x8f\x72\x70\x38\x20\x3d\xdf\x92\x9c\x35\x48\x1c\x8b\xe6\x67\x2f\x77\x7b\xd6\xa3\xf7\xc6\xbe\x8f\xaf\x46\xb5\x93\xc6\x4a\xa2\x2a\x27\x54\x02\xaa\x58\x1f\x33\xda\xd1\x98\x09\xca\x51\xbb\xf1\x37\xf0\x75\xf0\x3b\x29\xe0\xf7\xbd\xc2\xdc\xd0\x3d\x25\x99\x7d\xd3\xbd\xdc\xf5\x55\xc3\x0e\xce\x4f\xbb\xe8\xed\x7a\xb0\x50\xb6\xbb\xe2\x71\x28\x57\x3d\x19\x63\x02\x24\x13\x32\xcf\x63\x9d\xda\x5f\x1c\x41\xfc\xdc\xed\x58\xdb\xdd\xff\x06\x00\x00\xff\xff\xdf\x10\x68\x34\x07\x2d\x00\x00")

func fcs_lpc_motor_html_bytes() ([]byte, error) {
	return bindata_read(
		_fcs_lpc_motor_html,
		"fcs-lpc-motor.html",
	)
}

func fcs_lpc_motor_html() (*asset, error) {
	bytes, err := fcs_lpc_motor_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "fcs-lpc-motor.html", size: 11527, mode: os.FileMode(420), modTime: time.Unix(1455805809, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _index_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\xfd\x6e\x1b\xb9\x11\xff\x5b\x7a\x0a\x86\xad\x11\x19\xf2\xae\x9c\x1c\x50\x14\xfa\x70\xe1\x73\x12\x24\x45\xe2\x04\x67\x07\xc5\xd5\x36\x0c\x6a\x97\x2b\x31\xe6\x92\x0b\x92\x2b\x45\x17\xe8\x9d\xfa\x0c\x7d\xb2\xce\x90\xbb\xab\x95\xa5\x38\xba\xb6\xc0\x01\x71\x44\x0e\x67\x7e\x33\x9c\x2f\x72\x39\x7e\xf6\xea\xe3\xc5\xf5\xaf\x9f\x5e\x93\xb9\xcb\xe5\x59\x77\xfc\x2c\x8a\xc8\x85\x2e\x56\x46\xcc\xe6\x8e\xbc\x3c\x7d\xf1\x17\x72\x3d\xe7\x64\xa6\x23\x69\xad\x23\xe7\xa5\x9b\x6b\x63\x63\x72\x2e\x25\xf1\x3c\x96\x18\x6e\xb9\x59\xf0\x34\xee\x12\x02\xd2\x9f\x2d\x27\x3a\x23\x6e\x2e\x2c\xb1\xba\x34\x09\x27\x89\x4e\x39\x81\xe9\x4c\x2f\xb8\x51\x3c\x25\xd3\x15\x61\xe4\xe7\xab\x57\x91\x75\x2b\xc9\x83\x9c\x14\x09\x57\x20\xeb\xe6\xcc\x91\x84\x29\x32\xe5\x24\xd3\xa5\x4a\x89\x50\x40\xe4\xe4\xfd\xbb\x8b\xd7\x97\x57\xaf\x49\x26\x24\x0f\xba\xc0\xde\x60\x36\x21\xe3\x39\x67\x29\x0e\x60\x98\x73\xc7\x88\x62\x39\x9f\xd0\x85\xe0\xcb\x42\x1b\x47\xc1\x06\xe5\xb8\x72\x13\xba\x14\xa9\x9b\x4f\x52\xbe\x00\x7d\x91\x9f\x9c\x90\x5c\x28\x91\x97\x79\x64\x13\x26\xf9\xe4\x45\x7c\x7a\x02\x4a\x85\x13\x4c\xb6\x49\x25\xec\xd3\xcf\xd9\x14\x48\x2b\x6e\x69\x5b\x61\x32\x67\xc6\x72\x50\x50\xba\x2c\xfa\x6b\xbd\xe4\x84\x93\xfc\xec\xcd\xc5\x15\x79\xff\xe9\x82\x5c\x73\xeb\xa6\x5c\x25\xf3\xf1\x20\x2c\x04\x26\x9b\x18\x51\x38\x62\x4d\x32\xa1\x53\xbd\xe4\xe6\x3e\xd1\x79\xa1\x15\xd8\x6b\x07\x4b\x3e\xdd\xcc\xbe\x3c\x9a\x47\x52\x38\x1e\x83\xf9\xf1\x17\xb0\x66\x3c\x08\x48\x15\xac\x14\xea\x01\xa2\x23\x27\x54\xe4\xc1\x09\x73\xc3\xb3\x3d\x2a\x0a\x56\xe0\xce\x30\x16\xdb\x93\x28\x91\xcc\x5a\x6e\x63\x74\x33\xfd\x01\x6c\x96\x80\x39\x45\x12\xe5\xda\x69\xb3\x25\xe1\xc1\xc2\x98\xf8\x44\x23\xdf\xaa\x09\x21\x98\x12\x99\xd4\xcb\x68\x35\x24\xac\x74\x7a\x54\xad\xac\xab\xdf\xa9\x4e\x57\x2d\xf6\x0c\xc2\x18\x65\x2c\x17\x12\xf8\x9f\xff\xa2\xa7\xa0\xec\xf9\x09\x79\xfe\x96\xcb\x05\x77\x22\x61\xe4\x92\x97\x1c\x28\x0d\xe1\x84\x9c\x1b\x08\xe4\x09\xb1\x4c\xd9\x08\x42\x28\xb2\xd1\x36\xdc\x92\x63\x22\x0f\xc9\x4f\xa7\xa7\xdb\xda\xc1\x9f\xb5\xe5\xe3\x41\x9d\x60\xe3\xda\xc7\x0b\x66\x08\xec\x99\x4c\xc0\xbc\x0e\x4b\x53\x33\x24\xf4\xdb\xb7\xf8\x1c\x46\xeb\x35\x3d\xe9\x76\xc0\x77\xee\xbe\x2c\x52\xe6\x38\x2c\x5d\x0e\xce\x91\x68\x00\x06\x4c\xcf\x98\xb4\x1c\xa6\x90\x35\x6a\x88\x00\x9d\x24\x4f\xed\x90\xa8\x52\x4a\x20\x77\x40\x88\x35\xb3\x35\xfc\xe5\xba\xe2\x73\x3c\x2f\x80\xf1\xe6\xe6\xee\xa4\xfe\x77\x87\x12\x85\xb6\x90\xb1\xc8\x75\xe3\xe7\xa6\xc8\x6d\x35\x46\xf9\x42\x6a\x77\xaf\x0b\xe4\xb0\x01\x48\xf2\x19\x57\x69\x18\xb7\xa4\xa9\x5a\xa2\x9d\x9d\x8e\xd2\x17\x5a\x96\x39\xb2\xbf\xf4\x84\x29\x4b\x1e\x66\x06\x4b\xf2\x63\xc1\x12\xe1\x60\x1b\xa7\xf1\x4b\x58\x41\xfc\xce\x57\xf6\x55\x54\xc8\x60\x6c\x8a\x5b\x76\x22\xe7\x01\x0b\x47\xbf\x41\xb6\x01\x71\x6a\xf4\x12\xa2\xb0\xa1\x67\xda\xe4\x0c\xdc\x4f\x8f\x7e\x1d\x1c\xe5\x83\xa3\xf4\x56\x1d\xbd\x1d\x1e\x7d\x18\x1e\x5d\xd1\x1a\x7c\xd5\x02\x6f\x99\xea\x3b\x90\x47\xf2\x5c\x96\x4b\x9e\x84\xa5\xb6\x19\x5f\x6b\x18\xf8\x5b\x8f\xba\x5d\x08\x5a\x5c\x82\x3f\x58\x7a\xe5\x43\xf9\x06\x1a\x0a\x44\x31\x2b\x95\x17\xee\xf1\x05\x54\xc5\x31\x40\xac\xdb\xbc\x17\x3a\xcf\x99\x4a\xed\x53\x9c\xd8\x0a\xdd\x93\x8c\x9d\x4f\x5a\xae\x72\x6e\xe2\x54\xe7\x15\x35\x96\x1a\x7a\xca\x35\x33\x33\xee\xe2\x82\x19\xa0\xbd\x96\x3c\x87\x9f\x80\xd7\x3b\x1e\xd5\xf8\x16\x02\x56\xc1\xef\x47\xc7\x9c\xc4\xd4\x09\x49\xd9\x71\xab\x02\x1d\x90\x38\xe9\x9d\x84\x3d\x71\x48\x3c\x77\x8c\x63\x74\xc9\xa8\xeb\x73\x2d\x5e\x30\x59\xa2\x17\x2e\xcb\x7c\xca\x4d\x2f\xd5\x49\xe9\x4d\x00\xa3\x2a\x6b\x7e\x5e\xbd\x4b\x7b\xbe\xca\x01\x2f\xa2\xfd\x0d\x4e\x9f\x46\x56\x8a\x14\x82\x7a\x1c\x70\xc0\xe2\x0e\x34\x5c\xab\xa1\x53\x4b\x3d\xeb\x51\x34\x5c\xa8\x19\x74\x61\x6f\x3c\xd8\xd4\xff\xfb\xd5\xc7\xcb\xd8\x3a\x03\x64\x91\xad\x7a\x68\xc4\x31\xc8\x75\x3b\xb8\x51\x2c\x8b\x18\x2b\xc2\x6f\xb9\xf7\x1d\xde\xc6\xeb\x19\x38\x6a\xfe\x41\xab\xb6\x53\x3c\x13\x78\x01\x00\xb5\x21\x3d\xf4\x8c\x80\xf5\xd3\x11\xfc\x8c\xbd\x93\x62\x5f\x4a\xb1\xe4\x6a\xe6\xe6\x40\xee\xf7\xbd\x0f\xbd\x01\x50\x6e\x61\xf9\x46\xdc\xc5\x45\x69\xe7\xbd\x1b\x24\xb7\x4a\x1a\x3d\x73\x0d\xe9\xdb\x3b\x3e\x69\xa1\x01\xfb\x1d\xee\x7e\xdd\x6d\x60\xea\x7c\x3d\x10\x86\xa9\x99\xe4\x1e\xa3\x06\xc0\x4a\x3e\x50\x18\x59\xef\xbc\x17\xff\xdc\xa3\x7f\xc2\x58\x01\x40\x84\x96\x71\xc3\x5c\x69\x38\x44\xa8\x30\xba\xe8\xd1\xaa\x15\xd0\x13\xec\x61\x71\xbb\x3b\xa0\xea\xb6\x74\x6d\xff\x7f\x21\x8a\xe6\x1c\x26\xf6\x63\x83\x71\x7f\x20\x7b\xb3\x1d\x9d\xd3\xbb\x00\xb7\xa1\xbc\xd8\xa1\xbc\xdc\xa1\xfc\x14\x82\xf4\xe4\x2e\x1f\xeb\xab\x19\x76\x24\xb7\x36\xf9\x58\xaa\x0e\x08\xa4\xea\x52\xa8\x54\x2f\x63\xad\xb0\x9b\xb4\x33\xd5\x67\x5d\x93\xf5\x55\xf9\x2a\xbe\x24\xff\xe0\xd3\x2b\x9d\x3c\x40\x0b\xa0\x4b\x3b\x1c\x0c\x28\xe9\xfb\x8d\xe0\x61\x03\x43\x3a\xf0\xda\xea\x54\x69\x6a\xe6\x50\x69\xe4\xa5\xdb\x25\xe7\x93\x48\x2b\x5d\x70\xf5\xc8\xc2\xf5\x2e\x57\x22\xb5\xe5\x3b\x6c\xbb\x7c\x39\xb7\x96\xcd\xf6\xb7\xd8\x50\x6d\xad\x94\xae\x8c\x7f\x05\x43\x6c\x7c\x70\x12\x3e\xd5\x89\xac\x83\x24\xb1\x51\x10\x85\x20\x08\xa5\xb8\x79\x7b\xfd\xe1\xfd\xe4\x71\xa5\x38\xfd\xf9\xfa\xe2\xca\xb7\x90\x80\xdb\x6a\x95\xbe\xbd\x14\x78\x7d\x0b\x86\x79\xc3\x3d\xd3\x76\x7b\xe9\x35\xf4\xad\xe6\xe6\xcf\xea\xef\x36\xb4\x4e\xe7\xc0\x4d\xf8\x9b\x01\xec\x81\x81\x8b\x16\xe8\x87\x50\xd1\x48\x3d\xd4\x0f\x46\xc3\x2f\xf8\x37\x4a\x85\x69\x7b\xa3\x01\xab\xd6\xef\x61\x3d\x9c\x94\x07\x23\x87\x24\xdf\x45\x04\xfa\xa1\x18\xbe\xb3\xed\x03\xf1\x0b\xde\xdd\x4d\xa7\x9e\x60\x9f\x1e\xef\x76\xe9\xa6\x49\x1f\xa4\x11\x45\xe1\xa4\x12\x7b\x74\xd6\xdd\xba\x4f\xc9\xbf\xff\x75\x41\x51\x3b\xe6\x6e\x47\x64\xa4\x17\xa2\x0e\x7e\x27\xcf\xda\x51\xa8\x14\x6f\x56\x1f\x87\xe8\x69\x9b\xf0\xd4\xf4\xac\x8f\x0e\x4b\xac\x8b\x1a\xd2\xa3\x78\x07\xf8\x32\xbe\xc1\x69\x67\x23\xdd\x0a\x6f\x08\x5f\xb8\x45\xb5\x38\x8a\xfc\x31\xc9\x3b\x77\xd3\xde\xfc\xea\x9d\xd7\xb3\xb5\xd5\x6a\x73\x7b\x0f\x4b\x30\x66\xf7\x94\x6c\x0c\x05\x3e\x60\x00\x57\x8e\x02\xf5\x7b\x4e\x10\x69\xfb\x9e\x90\x0a\x8b\x9f\x51\xbe\x11\xe2\x5d\xf8\x20\xe1\x72\x9a\x0b\xf7\xbf\x0a\x1b\x26\xac\x17\x75\xa6\xac\x24\xd7\xf8\xff\x9a\x70\x80\xfa\xe3\xdc\xb0\x31\xe7\xf7\x7b\xe1\x77\xcb\x36\x4e\x68\xf9\x2f\x78\xc1\x17\x42\x67\xbd\x73\x11\xfb\xe1\xa9\x50\x71\xed\x3f\x15\x76\xd8\x9e\x3e\x14\xd0\xa5\x7a\xfa\xe5\xc9\xde\xdc\xb8\x1d\x18\x63\x91\xee\xb4\x65\x28\x11\x0e\x8d\x34\x25\xa0\x71\xcf\x85\x13\xa4\x42\x7b\xb6\x4b\xe1\x92\x39\x41\xc2\x0d\x85\xc6\x31\xe3\xf4\xae\x8a\x6d\xc2\x60\x2b\x14\x3e\x93\xa2\x14\x3e\x5e\xe8\xb0\xfb\x94\x83\xa9\x15\x79\x64\x0b\xdf\x69\xda\x6d\xbc\xe5\x61\xac\x38\xaf\x86\x1b\x43\xef\xb0\xbb\xe0\x17\x5e\x93\x48\xdf\x47\x56\x59\x69\xb1\xf0\xd1\x14\xda\xaf\xa7\xf7\x22\xdd\xee\x6c\xbb\x5b\xac\x54\x1d\xb7\x22\xbc\xb1\x22\xb7\xb3\x3d\x56\xa0\x5f\x1d\xff\xea\x00\x8f\x8e\x0b\xc3\x89\xff\x08\x9e\xdc\x52\x24\x46\x4c\x8a\x19\x7c\x5f\x49\x9e\xb9\x5b\x7a\x46\x47\x1b\x19\x40\xab\x82\x01\xa3\xd8\x16\x52\xc0\xcd\xe3\x56\xd1\x4a\x77\x28\xa9\x56\x39\x21\xd7\x76\x39\x91\xc0\xd8\xf1\xda\xfb\x13\xe4\x80\x7a\xc2\xbb\xca\x78\x6a\x1a\x5d\x61\x13\x0d\x13\x1d\x0f\xc0\xc8\x33\xfa\x7f\x72\x21\xc2\xb6\x9d\x35\x85\xee\xf8\x30\xda\x24\x03\xde\x5b\x0f\xcb\x86\x5a\xa1\x97\x78\x42\x63\xc8\xbb\x05\x84\x62\xb4\x57\xe3\x6f\xa2\x68\x2b\xf4\xf7\x16\xb1\xc0\xc3\xe7\x87\xaa\x0d\xc7\x07\x9a\x47\xca\x47\x1b\x18\xd9\x46\x49\x40\xaf\xe3\x15\x10\x1c\x59\xf0\x59\x5e\xc7\x2e\x95\xb1\xaf\xb4\x0d\x72\x68\x24\x11\x32\x45\x78\xb1\x0c\xf5\xe7\x39\x73\xee\xe6\x3a\x9d\x50\x38\x72\x1c\x6d\xa8\xcc\xd7\xf8\x84\xce\x9d\x2b\xe0\x32\xda\x3c\x94\x0c\xe0\x4e\xec\x6f\xc4\x7f\xc3\x77\xbd\x09\x7c\x56\x2a\x7c\x2e\xfc\xfc\xcb\x3b\xcc\xd1\x18\x9f\x96\x5a\x46\xb4\xdc\x06\xb9\xe9\x5f\xaa\xa6\xa5\x73\xf0\xe5\x57\x35\x34\xec\x3f\x22\x79\x80\x6c\x0d\x16\xbe\x01\x03\x7b\x70\x03\x80\xe6\x77\x7c\x4b\x89\x7f\xcf\x82\xc5\x44\x4b\x6d\xb2\x52\x02\x49\xa4\xc8\x5c\xef\xab\xb6\x66\xdb\x67\x7d\x0a\xb9\xfe\xaa\x5a\x22\xff\x7c\xf7\x09\xf3\xb1\x77\x25\xf2\x52\xfa\x03\x99\x44\xa4\xd2\x31\x1e\xb4\xad\xaa\x73\x16\xe2\x15\xb3\xa2\xc0\xaf\xf7\xb9\x90\x69\x2f\x95\xc7\x23\xb2\x1d\x6c\xdf\x73\x3b\xdd\xb5\x7f\x6b\xaa\x9f\x98\x60\x82\x73\xff\x06\x56\x2a\xb8\x85\x6a\xe9\x1b\x9a\xdf\x05\x95\x6c\xa5\x4b\x47\x16\xdc\xe0\x3b\x97\x24\x09\xc4\x0d\x54\x87\x9f\xfa\xed\x6d\xeb\x55\x2e\x02\x23\xce\xc6\x83\x5d\x9a\xd7\x8a\x6a\xce\xba\xe3\x41\x78\x53\xfd\x4f\x00\x00\x00\xff\xff\x16\xf4\x13\x36\x1b\x16\x00\x00")

func index_html_bytes() ([]byte, error) {
	return bindata_read(
		_index_html,
		"index.html",
	)
}

func index_html() (*asset, error) {
	bytes, err := index_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "index.html", size: 5659, mode: os.FileMode(420), modTime: time.Unix(1455805708, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"bower.json": bower_json,
	"favicon.ico": favicon_ico,
	"fcs-lpc-motor.html": fcs_lpc_motor_html,
	"index.html": index_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"bower.json": &_bintree_t{bower_json, map[string]*_bintree_t{
	}},
	"favicon.ico": &_bintree_t{favicon_ico, map[string]*_bintree_t{
	}},
	"fcs-lpc-motor.html": &_bintree_t{fcs_lpc_motor_html, map[string]*_bintree_t{
	}},
	"index.html": &_bintree_t{index_html, map[string]*_bintree_t{
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: AssetInfo, Prefix: k}
	}
	panic("unreachable")
}
