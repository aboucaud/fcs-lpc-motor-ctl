package main

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _bower_json = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x5f\x6f\xd3\x30\x10\x7f\xef\xa7\xa8\xba\xb7\x8a\x24\xed\x56\x40\x4c\x08\xa1\x09\xde\x91\xc6\xdb\xc4\x26\xc7\xb9\x26\x46\x8e\xcf\x9c\x2f\xda\xaa\x69\xdf\x1d\x3b\x6e\xda\xa4\x24\x2d\x4f\x6d\xee\xf7\xc7\xbf\x3b\xff\x79\x9d\xcd\xe7\x0b\x23\x6a\x58\xdc\xce\x17\x5b\xe9\x12\x6d\x65\x52\x23\x23\x2d\xde\x05\xa8\xc2\x1a\xac\x28\x5b\xb8\x62\xb6\xee\x36\xcb\x4a\xc5\x55\x93\xa7\x12\xeb\xac\xc4\x44\x3b\xc7\xd9\x88\x52\x34\x5c\x21\x39\x2f\x7c\xf0\x9f\xbe\x70\x0f\xb9\x70\xac\xc0\xcc\xef\x94\x01\x9e\x7f\xce\xc3\xcf\x57\x09\x64\x52\x59\x7d\x59\x78\xd6\xaf\x56\x59\x80\x93\xa4\x2c\x2b\x34\x61\xd9\x68\x57\x0b\xd5\xff\xc2\xa2\xd1\xf0\x73\x67\x43\xb0\x87\x28\xd3\x4a\x82\x71\x6d\xd2\xbb\xfb\x6f\x91\xa7\x4a\x83\x04\xc7\x0c\xcb\x65\x96\x2e\x5b\x28\xb4\x8d\x05\x3c\x45\x27\xd7\xd5\x72\x7c\x06\x7a\xf2\xad\x59\x34\x60\xf8\x50\x67\x70\xdc\xff\xef\xfa\x71\x2d\x98\x02\x8c\x54\x10\xba\x7d\x8d\x24\x2b\x2c\x50\x52\x83\x69\x42\xa0\x1f\xa8\x77\x35\xd0\x77\x0d\x75\x70\xcd\x8e\xe8\xd5\xe3\x3a\xbd\x4e\xaf\x3b\xef\x08\x14\x24\x7c\x8c\xc4\x0a\x03\x7a\x5a\xde\x67\x05\x9b\x55\xfa\x61\x68\x53\x81\x28\x2e\xdb\xf4\x59\xc1\x66\x9d\xde\x0c\x6d\x9c\x56\x9e\x30\x6d\x10\xf1\x98\xe0\xd3\x50\xca\x88\x3a\x17\x67\xb4\x7b\x42\x5c\x77\xd3\x89\x09\x73\x7f\x90\x92\x2d\x1a\xde\x0a\xd9\x6e\xe9\xe3\x2a\xdd\x9c\x06\xcb\x1b\xe6\x78\x46\xc6\xcd\x23\x1e\x83\xad\xd7\x43\xad\x62\xa8\xa7\x95\x01\x1d\x9f\x85\x24\xd4\xfa\x3f\x27\x3b\x42\xde\x87\x79\x7f\x12\x46\xa2\xb9\xd8\x4d\x8f\x34\xba\xdb\xb5\x60\x20\x25\xce\xe4\xe9\x18\xa3\x72\x29\xa8\x98\x96\x06\x34\x0e\x64\x7d\xba\xc3\x65\xa9\xe1\x62\xf8\x01\x6d\x3f\x84\xcd\x89\x93\xc8\xdd\x19\x03\x8f\x06\xdd\x4d\x7a\x98\x9d\x22\x3f\x90\xf0\x38\x8d\xca\x8e\x68\x5c\xee\xe3\x40\xb6\x45\x1a\xdd\xfe\x03\x78\x9a\xb1\x05\xfc\x9b\x86\x25\xe1\x73\xc2\xf0\xc2\x82\x40\x4c\x5a\xfc\xc3\xdc\xfb\xad\x3a\xbf\xdf\x7f\x1a\xa0\x5d\x7b\xb2\xfd\xf5\x4f\x0f\x75\x1b\xdd\x92\xad\x46\x0e\x28\xa9\x9d\x28\xb2\x41\x75\xd0\x87\x86\x97\x44\x8b\x1d\x36\x3c\xdd\xce\x91\x13\x5f\x9b\xc3\x99\xd6\x58\x2a\x3f\x24\x2f\xea\xe6\x51\x61\x43\x5a\x01\x71\x36\xc4\xae\xfc\xfd\xf3\x0d\x84\x57\xef\x6d\xf6\x36\xfb\x1b\x00\x00\xff\xff\x04\xf6\x38\x8f\x37\x06\x00\x00")

func bower_json_bytes() ([]byte, error) {
	return bindata_read(
		_bower_json,
		"bower.json",
	)
}

func bower_json() (*asset, error) {
	bytes, err := bower_json_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "bower.json", size: 1591, mode: os.FileMode(420), modTime: time.Unix(1455806862, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _favicon_ico = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x94\x7d\x4c\x55\x65\x1c\xc7\x9f\xab\xe6\xda\x5a\x41\xb9\xb5\x85\x93\xdd\xd6\x8b\x28\xe5\xac\x10\x73\x72\x31\x5e\xe6\xc2\xd8\xa5\x49\x2f\xda\x35\xbb\xad\xc1\x6e\xbc\x94\xcb\x90\xba\x8b\x09\x82\x12\x6f\x37\x27\x83\x08\x0a\x48\x97\x97\x80\x41\xca\xa0\x04\xe2\xc2\x15\x24\x0b\x3d\xbc\x5c\xf4\xc2\xbd\x89\x88\xbc\xc4\x25\x2e\x01\x5a\x9b\x7f\x7c\x3a\xf7\xdc\x51\xba\x66\xbf\xb3\xef\xce\x73\x7e\xe7\xfb\x79\x9e\xf3\xfc\x9e\xe7\x39\x42\xa8\xe4\xcb\xd7\xd7\x73\x57\x0b\xc3\x0a\x21\x1e\x16\x42\x04\xc8\x92\x53\x72\xc6\x9b\x5f\x8a\x55\xf7\x79\x75\xb7\xe8\xf8\x32\x5e\xdf\x64\x8a\xb1\x34\x14\x44\xd2\x60\x7a\x81\xea\xc3\xc1\x14\x25\xf8\x91\x1e\x2b\x2c\x29\x31\x42\x7f\x37\x6e\xe4\xdc\x71\xf5\x40\x63\xae\x64\x6f\x2f\x67\x66\xb4\x97\xb9\xdf\x1c\xcc\x4e\xd8\x98\x19\xeb\x65\x7a\x54\xc2\x71\xa1\x91\xca\x2c\x2d\x89\x51\x42\xd2\x47\xdc\xf6\x41\x72\xcc\x8f\x9d\x57\xbb\xec\x2d\xee\xb9\x49\x27\x8b\xf3\x73\xcc\x4e\x5e\xc1\x3d\x7d\x8d\xe6\xd2\x5d\x54\x1d\x0c\x60\xe2\xca\x45\xfe\x98\x9d\xc6\xed\x9a\xa0\xa7\xa3\x8a\xf8\xe8\x07\xdc\xb1\x5b\xff\xed\xe3\xaf\x99\x41\xe9\xd6\x0d\x17\x37\x17\x17\xb0\xb7\x95\xd1\x59\x99\x44\x73\xf1\x1b\xb8\xc6\x87\x39\x9e\xea\x47\x4d\x76\x28\x8b\x0b\x0b\x98\x12\xd7\xe2\xb4\x59\xf9\xa9\xad\x0a\xed\x66\x21\x79\xd8\x89\xde\x7a\xfd\xfc\x78\x1f\xb7\xfe\x9c\x67\xdc\xd6\xc2\xe5\xb6\x52\x86\x3a\x4f\x32\xd4\x5d\xab\x30\xb5\x47\x82\xa9\xce\xd6\x28\xed\x8f\x5f\x16\x64\xc6\xad\x65\xa8\xdf\x4a\xe1\x11\x03\x21\xeb\x84\xde\xde\x5a\x68\xb9\x31\x3b\xc6\xef\x23\x3d\x4c\x0e\x9f\x57\x7c\x1e\xb9\xc6\x1d\xf4\xb6\x16\x52\x9a\x74\x2f\xdf\x1e\xf6\xf2\xa9\x31\x82\x84\x17\x05\x15\x26\x03\x03\x17\xad\x04\x3f\x2e\x2c\x7d\x8d\xf9\xdc\x9c\x9b\xc4\xf6\xc3\x51\xa6\xaf\xda\x18\xe9\x6d\xa6\xc9\xa4\xa5\x26\xe3\x59\x2e\x75\x7e\x4d\xd9\xbe\x55\x9c\x3c\xe4\xe5\x3f\xd4\x0a\xf2\xf7\x6b\x38\x51\x94\x82\xd3\x2e\xf1\x5a\x54\x10\x3f\xd7\xa4\xb1\x30\x73\x0d\x6b\x45\x22\xce\x5f\x4e\x33\x25\xf7\xd1\xdf\x5a\x42\xbf\xa5\x44\x61\x06\xbb\xcc\xf4\x9c\xf1\xb6\x4f\x57\x1a\x19\x1e\xe8\x22\x73\x7f\x34\x99\x07\x74\x04\x3d\x71\x3f\xed\xe5\x71\xf2\x5a\x39\x69\xfc\x4c\x4b\x5f\x4b\xb1\xe2\xb3\x9d\xfd\x8a\x73\xf5\x69\x58\xab\x8d\xca\xb3\xd4\x61\xa6\x28\x55\x43\xf9\xa7\x3a\xec\xfd\x5d\xbc\x1e\xee\xc3\xf3\x4f\x0a\xd6\xf9\xa9\x38\x95\xb7\x55\x5e\xe7\x41\xea\xb2\x37\xf1\x7d\x71\x8c\xe2\xaf\xcf\x0f\xe7\xd8\x3b\x2a\x72\x75\x02\x6b\x5d\x8e\x52\xb7\xf7\x5f\x12\x1c\xd0\xf9\x2b\xfc\x7b\x6f\x69\xd8\xb0\x46\xb0\xf1\xd1\x65\x7c\xfe\xee\x4a\xcb\x84\xe3\x2c\x56\x73\x12\x75\x79\x61\x0a\x6f\xce\xd2\x90\xb3\x5b\x70\xe8\x15\x41\x6e\x9c\x3f\x3d\xed\xe6\x7f\xea\xea\x51\xcc\x36\x7f\x02\x1e\x11\x6c\x59\xbf\xdc\x52\xf0\xa6\xd0\x37\x97\x1b\xb8\x3e\x64\xa5\x36\x77\x87\xf2\xbe\xf2\x13\x0d\x07\x77\x0a\x3e\x92\xc7\x6d\x90\xe7\xec\x9a\xba\x8e\xf9\x0b\x23\x19\x1f\x44\xf3\x6a\xa4\x3f\x81\xab\x05\xcf\x3c\xb6\x8c\xf0\xe7\xee\x51\xf6\x73\xce\x5e\x5f\xc9\xd6\x59\xc5\xb8\xf3\x82\xc2\x57\x64\x46\x2b\xb5\x4e\xde\x21\xf8\xe6\x58\x02\x9d\x2d\x66\x74\x91\x3e\x68\x43\x7c\xe8\x6a\x6f\xe2\xa9\x35\x2a\xb6\x6d\x5c\x21\x2d\xed\x3f\x79\x1c\x75\x41\xf2\x06\xf7\xaf\x97\xba\x99\x99\x1a\xc5\x39\xd8\x4d\x7a\x5c\x20\x6f\x47\x08\x76\x87\x0a\xf2\xd2\x74\x94\x98\x8c\x1c\xcd\x36\x92\x9a\xbc\x87\x90\xa7\x57\xb8\xb7\x6f\x5e\x79\xc7\x19\x48\x8a\x12\xea\x7d\x3b\x7d\xa5\x53\x27\x32\x18\x75\x4a\x5c\x75\x48\x74\xfd\x58\xc5\x99\xef\xca\x70\x5c\x96\x88\x08\xf2\x63\xfd\x6a\x95\x67\xce\x52\xe4\xa6\x3b\xd9\xdb\x63\x57\xa8\xd0\xef\xd9\xfe\xa0\x25\x25\x3e\x8c\xbc\x74\x03\x59\x46\x03\x7b\x63\xc3\xd8\x12\xf8\x90\x25\x78\xed\xf2\xff\x9c\xdf\x39\x1f\xb5\xba\x7d\xb9\x5a\x9d\xae\xf2\x4a\xfe\x63\xfc\xaf\x96\x7c\x1e\xc6\xc3\xfe\x1d\x00\x00\xff\xff\xb8\x6d\x5d\xdb\x7e\x04\x00\x00")

func favicon_ico_bytes() ([]byte, error) {
	return bindata_read(
		_favicon_ico,
		"favicon.ico",
	)
}

func favicon_ico() (*asset, error) {
	bytes, err := favicon_ico_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "favicon.ico", size: 1150, mode: os.FileMode(420), modTime: time.Unix(1455561960, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _fcs_lpc_motor_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x5a\xdd\x6f\xdb\x38\x12\x7f\xb6\xff\x0a\x56\xc5\x61\x9b\xdd\xca\x76\xdc\xe4\x2e\xf0\xda\xc6\xf5\xd2\x16\x58\x20\xed\x16\x4d\xef\x61\xb1\x58\x1c\x68\x89\xb6\xd9\x50\xa2\x56\xa2\xe2\xb8\x41\xfe\xf7\x9b\xe1\x87\xbe\x2c\x3b\xb1\x93\xeb\x5e\xf3\x10\x53\x14\xe7\x83\x33\xc3\x99\x1f\x49\x8d\x9f\xbd\xf9\xf5\xfc\xf3\x6f\x1f\xdf\x92\xa5\x8a\xc4\xb4\x3b\x7e\xe6\xfb\xe4\x5c\x26\xeb\x94\x2f\x96\x8a\x0c\x07\xc7\x7f\x27\x9f\x97\x8c\x2c\xa4\x2f\xb2\x4c\x91\xd7\xb9\x5a\xca\x34\xeb\x91\xd7\x42\x10\x3d\x26\x23\x29\xcb\x58\x7a\xcd\xc2\x5e\x97\x10\xa0\xfe\x77\xc6\x88\x9c\x13\xb5\xe4\x19\xc9\x64\x9e\x06\x8c\x04\x32\x64\x04\x1e\x17\xf2\x9a\xa5\x31\x0b\xc9\x6c\x4d\x28\xf9\xd7\xe5\x1b\x3f\x53\x6b\xc1\x0c\x9d\xe0\x01\x8b\x81\x56\x2d\xa9\x22\x01\x8d\xc9\x8c\x91\xb9\xcc\xe3\x90\xf0\x18\x3a\x19\xb9\xf8\xe5\xfc\xed\x87\xcb\xb7\x64\xce\x05\x33\xb2\xa6\xdd\xee\x58\xf0\xf8\x0a\x54\x10\x13\x8f\x47\x89\x4c\x95\x47\x96\x29\x9b\x4f\xbc\x99\x5c\xb1\xf4\x3f\x81\x84\xce\x98\xc5\x2a\xeb\x27\x52\xac\x23\x96\xba\xdf\x1e\x4e\xd8\x43\x0e\x59\x90\xf2\x44\x91\x2c\x0d\x5a\xa8\xbe\xfc\x99\xb3\x74\xdd\x0f\x79\xa6\x6c\xbb\xf7\x25\xf3\xa6\xe3\xbe\xa1\xda\x4b\x03\x9e\xca\xd8\x9f\x0b\x76\xe3\x0b\xba\x96\xb9\xda\xe8\x28\x75\xda\x8f\x27\xcd\x95\x5c\xa4\x72\xe5\x2b\x76\xa3\x68\xca\xe8\x96\x6e\xc7\x7f\x5f\x95\x65\x1a\x95\xad\x03\x99\xf0\x40\xc6\xd5\xe6\x81\x6c\x12\xba\x60\xd5\xe6\x01\x26\x4b\x68\xc2\x52\x7f\x96\x2b\x25\xe3\xda\xc3\xfe\x2a\x19\xea\x80\xa6\x61\xa5\x79\x28\x9b\x30\xa5\xd0\x0f\xd3\x8a\x99\x68\xe9\x3a\x94\x2d\x5a\xbb\x3e\xdb\x4a\xcf\xc1\x4c\xe3\x04\xe2\xb7\xd2\x7e\x0a\x46\x87\x87\xa9\xe5\xa5\x58\x54\x69\x1e\xca\x26\xa2\x8a\xa5\x9c\x8a\xc6\xe3\xa1\xec\x20\x51\x48\x21\xfc\x25\xa3\x61\xc3\xbb\x2d\x6f\x0e\x16\x22\x78\x88\xb9\xad\xf2\x70\x28\x2b\x45\x67\xd5\xe6\xc1\x6c\xe4\x62\x21\x58\x3d\xf0\x6a\x7d\x87\x33\x96\x62\x46\xd3\xfa\xd3\x21\x69\xc0\xd4\x01\xc8\xbf\x52\xf5\xf1\x9f\x1f\x2c\x69\x7a\x48\x20\x6f\x30\x52\x3c\x62\x7e\x22\xf2\x05\x8f\x4b\xc5\x42\x19\xf9\x91\x0c\x73\x01\xa5\x30\x9c\x78\xf3\x20\xf3\x45\x12\x40\x97\x92\xa9\x4f\x93\x04\x06\x75\xc6\xba\x1e\x42\xa9\x9c\x78\x41\x9e\x29\xa0\xd0\x1d\xf8\xaa\x33\x5a\x4a\x28\xc0\xb7\xd0\xea\xac\x78\xa8\x96\x23\x72\x3c\x18\xfc\xed\x67\x7c\x5e\x32\xac\xc4\x95\x8e\x88\xa6\x20\x7b\x44\x06\x04\x6b\x80\xee\x9a\xc9\x1b\x3f\xe3\x5f\x79\xbc\x18\x91\x99\x4c\x31\xe2\xa0\x4b\xbf\xfa\x27\x48\x17\xeb\x17\xbe\xad\x42\x3e\x54\x78\xfe\x55\xc6\x8a\x8a\x23\x7c\x7f\xd7\xed\x22\x79\xb8\x36\xc2\x13\x1a\x86\x9a\xcb\xc9\x20\xb9\x29\xde\x6f\x8d\x68\x4b\x24\x33\xae\xb8\x8c\x47\x10\x51\x52\xe4\x8a\x69\xc1\x4a\x26\xa3\x81\x6e\x69\x28\x61\xdb\x33\x09\xe1\x11\x81\xf2\xfa\x49\xb0\xb9\x72\xed\x19\x0d\xae\xa0\xa0\x01\x26\xf0\x03\x29\x64\x3a\x22\xd7\x34\x05\xbd\x8d\xf0\x45\xca\xd6\xfe\x70\x30\x78\x49\x9e\x33\xc6\x8e\x1e\xa0\x5a\x0f\x12\xa1\x02\x1f\x36\x26\x76\xb6\x31\x2f\x5c\x08\x66\xd0\xa6\x0a\x02\x55\x5f\xa4\x74\xad\x55\x74\xca\x20\x85\x9f\x31\xc1\x02\x9c\xb6\x0f\x21\xea\xc6\xa7\x2c\x6c\x72\x37\x31\xbc\x4d\xc0\x4c\x40\xd7\x16\x92\x9e\xe2\x0a\x02\xe6\xb6\xee\xf4\xea\x04\x7a\x59\x42\x03\x66\x99\x37\x3d\x8d\xd8\xa3\x34\x54\x0f\x00\x98\x72\x43\x31\x19\xfb\x14\x26\x07\x1c\x4d\x7f\x39\x2e\xa2\x3c\xae\x7a\x17\x61\x1d\x04\xfe\xca\x5f\x8f\x88\xb1\x73\x31\xb6\xff\x23\x12\xc0\x7b\xc5\x03\x2a\xc0\x22\xda\x1e\x4d\x85\x87\x27\xc9\x4d\xf9\xaf\x14\xd4\xa4\xf3\xd1\x61\x20\x7c\xdb\x7c\xdc\xf8\xa3\x7a\x5c\x1b\xfd\xfd\x2f\xb0\xa4\xf8\x9c\xb3\xd0\x4e\xb9\xd3\xf9\xb1\x0f\x62\x00\xcb\xe1\x22\x9b\x62\x13\xca\x46\x22\x20\xe1\xe3\x43\x67\xbc\x3d\x72\xe6\xfc\x06\x60\x6c\x20\x68\x06\x4b\x15\xad\xe8\x69\x0a\x47\x62\xdd\x83\xcb\xb6\xe8\xab\x54\x5d\x82\xed\x89\x17\xb1\x38\xf7\x48\xad\xd2\x9b\x0c\x09\xf0\x72\x83\xc6\xf2\x0a\xf9\xb5\x13\x6b\x1d\x6b\x22\xc0\x4c\xd1\x9b\x5e\x5c\x5e\x7e\x26\xef\xce\x2f\xc9\x7b\xcc\x2b\xd9\x18\x90\xeb\xb5\x26\x1d\xf7\x1b\xaa\x75\x1b\xec\xec\x5a\xf0\x6a\x4a\x57\x01\x88\x79\x61\x68\x4c\x7f\x41\x6a\x85\x1b\x99\xe4\x32\x8f\xc0\xb5\x6b\x33\xbc\x33\x9e\x59\x3b\x40\x73\x59\x36\x6d\x71\x05\x13\xb8\xae\xc2\x50\xe0\x04\xc3\xca\x1f\x40\x4e\x7b\x75\xd2\x3b\x3e\x3d\xeb\x1d\x0f\x4f\x7b\xc3\xe1\xab\xd1\xe9\x60\x38\xae\x14\xf9\x1d\xc4\xc7\x4d\xe2\x93\x6d\xc4\xae\xcf\x68\xe3\x3a\x31\x43\xeb\xec\x0c\x0b\x59\x51\x95\x67\xe0\x96\xcd\x3e\x6b\x14\x6d\x67\x52\xb1\x10\xae\x11\x67\x9f\x72\xbd\x78\x8d\xf9\xeb\xc4\x62\xd2\x04\x83\xa2\x70\x7b\xeb\xda\x77\x77\x9e\x09\xb2\xe6\x04\x81\x62\x7a\x2e\xc1\xc0\x71\x98\x8d\xcb\x3a\xdd\x36\xec\xed\x0d\xb4\x54\xcb\xa0\x4a\x57\x56\xce\xb7\x04\xd5\xdb\x34\x2a\x85\x54\xe2\xc6\x2c\x3d\xe2\x96\x9e\x8d\x44\xdf\xc5\x84\x23\x69\xa3\x29\x0b\xcd\x56\xaa\x9a\x1b\x02\x25\xea\x3e\xc0\x8e\xf6\xa1\x66\x7b\x06\xe9\xbc\xe1\xb4\xa2\xbb\xd4\xab\x58\x22\xcd\x70\xad\x73\x8c\x64\xcc\xa1\x51\xe7\xe7\x3a\xbb\xad\xcc\x70\xca\xd6\x0b\x19\xf9\xf5\xc3\xc5\x6f\xb5\xd7\xe3\xca\x36\xa6\x16\x46\xdd\xaa\x8f\x36\x56\xa0\x1d\xd3\x2d\x87\xb4\x24\x28\xc4\x12\xfd\x6a\x32\x1b\xbb\xfd\x6a\xe7\xa3\x81\x2b\x2f\x30\x81\xf2\x6c\xd4\x02\x44\x5e\x62\x99\x49\x25\xaa\xcd\x59\x36\x32\xa9\xd6\x85\x01\x3c\xaa\x75\xc2\x46\xe4\x43\x1e\xcd\x58\xfa\x12\x4a\xb0\xc8\xe1\x71\x70\x87\x64\xf8\xef\x0e\xd3\x6b\x75\x83\xdc\x2f\xa1\xcf\x16\x20\x54\x5b\x52\x66\x53\xbe\x0d\x08\xd5\x36\x6c\x50\xf2\x99\x2e\x26\xbb\x91\x01\x94\x5c\xff\x74\x30\x40\xbd\xec\xdb\xd5\x92\x23\x06\x81\x2a\xb3\xc9\xef\x77\x0a\xb5\xe6\x9a\xfd\x71\x3f\x5f\x3d\xdc\x72\x2e\x58\xe1\x16\x10\x49\x1b\x70\xc2\x14\x3b\xdf\xc0\x99\x5a\x97\xc1\x3e\xf5\x3e\x44\x46\xa6\x07\xf8\xaa\x25\xf2\x9b\xc3\x42\xf1\x57\x16\xe9\xc5\xb0\x11\xa7\x02\xdf\x96\xd5\xab\x52\xbc\x5c\x16\xd0\xba\x60\x5c\x80\x22\x13\xaf\x2c\x0b\xe4\xd2\x58\x9a\x80\x53\xaf\x29\x56\xd6\x89\x37\xd4\xab\xae\x56\x11\x80\xda\xaf\x95\x85\x31\x64\x0c\x94\xa5\x03\x54\x21\x26\x74\x81\xab\x60\x61\x80\x9e\x5a\x97\x89\x57\x01\x0f\x38\x61\x57\x19\x20\x24\x97\x38\x6c\x3a\xae\x5a\xbd\x88\x02\xe3\x7e\xf0\x16\x0d\xd7\x1e\x31\xa5\x30\x23\x21\xcf\x50\x68\x48\x52\xca\xb3\x4a\xd1\x45\x82\x15\x57\xc1\x92\x68\x37\x78\xd3\x4f\x48\x37\xae\xed\xe8\xa7\x46\x62\x5f\xa5\x0f\xd4\xf3\x93\x54\xda\x1c\xe4\x0d\x4f\x0d\xe4\x78\xa0\xce\x96\xce\x0f\x79\xea\x39\x4d\x0b\xcd\x5d\xd6\x03\x11\x46\x9a\x37\xfd\xd0\x7f\xfd\x58\x55\x3f\xbe\x7f\xa8\x41\x93\x28\xfb\x46\x4a\xbd\x8e\x17\xb9\x00\x5c\xfa\xd1\xe2\xfd\x87\x29\x48\x63\xf0\xf4\x37\xd2\xf0\x33\x2c\x12\x96\x82\xd8\x94\x3d\x4c\x39\x5c\x55\xfe\x60\x53\xbb\x2c\x9f\x43\x81\x9e\x78\xe7\xde\xff\x93\xa2\xc7\xdf\x8b\xa2\xc3\xef\x45\xd1\x57\x4f\xae\x28\xb4\x8a\xd4\x09\xed\x22\xa5\x3a\xe8\x71\x41\x61\xa3\x6f\x54\x20\x79\x12\x42\x46\x1f\xd9\x57\x84\x10\xa8\xe4\x50\xe1\x9b\x9a\x9a\x61\x46\x36\xbe\xd7\xa9\xdc\x82\x89\x71\xe5\x6c\x72\xda\xad\xc1\x82\x02\x15\x54\x40\x81\xc3\x04\xf5\x9a\xfc\xb2\x8b\x65\x7d\x47\x55\x7f\xe6\xfb\x3f\x3d\xdd\x5f\xb7\x83\xc5\xca\xa8\x40\xb0\x04\x01\xc2\xc9\xba\xe6\xc4\x7f\x3b\x7e\x00\x38\xa8\x4f\x51\x2a\x85\x70\xc7\x91\x4a\xf5\xb0\x0c\x0b\xac\xab\xea\xa6\xc7\x9c\x4c\x1a\xf0\x53\x9e\xb7\xe8\x1a\x7d\xf7\x3f\xad\xf6\xb5\x80\x04\xce\xee\x70\xe7\xe4\xb8\xf7\xea\x1f\xa7\x2d\x83\x7e\x37\xe1\xf9\x47\x4f\x23\x94\x79\x2e\xda\x81\xcb\xf3\x93\xe1\xd9\xe9\xfc\xa4\xc4\x40\xcf\xe7\xf3\xf9\xcf\x0f\xe0\xdf\xab\x94\xda\x8a\x99\xcc\x4b\x30\xd3\x55\x1b\x34\x4a\xb0\x9f\x0e\x0d\xe8\x6a\x90\xcc\xc1\x37\xfe\x15\x5b\xcf\x24\x02\x8c\xb9\x04\xbf\x18\x3b\xef\x46\x5b\x35\x96\x35\x20\x47\x9e\x99\x23\x3a\x1a\x2b\xe3\x9e\xa6\x44\x63\xa1\x47\xc9\xac\xcb\xd8\x2d\xbe\x30\x60\x75\xcf\x5f\x31\x5d\xa5\xbb\x6a\xbf\x12\x94\x76\xaa\x87\x12\xf7\x82\xb9\x73\xbb\x3e\x5a\xe0\xdc\x3d\x78\xce\xec\x50\xca\x5d\xab\xdb\xc1\xa7\x06\x4a\xd5\x5f\x6e\xdd\xbc\x35\x37\xb5\x76\x49\xb9\xc5\x09\xab\xd2\x60\x3a\xfb\xc2\x23\x60\x55\xb3\x6d\x98\x78\x50\x58\x23\x1e\x9b\x5f\x0a\x29\xf5\x27\x28\x60\x2c\xe4\x26\x29\x8e\x6b\x07\xda\x0d\x29\xd6\xac\x75\x54\xe8\x96\x80\x47\x64\x1c\x08\x1e\x5c\x69\x15\x7a\x19\x8b\x43\xbb\x69\x7e\x71\x1b\xd3\x88\x8d\x7e\xd0\x1a\xfd\x70\x77\xe4\xb5\xe9\x99\xcf\x22\x0e\x26\xba\xd4\xbf\x8d\x64\xde\xb2\x53\x2b\x9b\x6e\xf3\xd8\xb4\x6b\x1b\xae\x7c\x42\xeb\x56\xd0\xa7\x3d\x28\xdb\x61\x6a\xc4\x08\x85\xad\x8b\x9a\xb6\x97\xd1\x9b\x10\x6d\x0f\xb3\x6f\xa8\xba\xe9\x83\x96\xd9\x1c\xe2\x90\x76\x47\x68\xd4\xfc\x84\xa6\x4f\xa2\x87\x84\xf5\xab\xc1\x60\xf0\x17\x18\x3b\x89\x36\xad\x8b\x0a\x3f\x99\x39\x37\xf1\xfe\xd3\x99\x56\xef\x0a\x7c\x77\x73\xb0\x3b\xa2\xcf\xca\xfc\x71\xf6\x17\x18\xba\xae\xea\x86\xcd\x9b\x33\x39\x30\xbd\x14\xad\x3a\xa2\xdb\x76\xd2\x53\xc7\x74\xa4\x09\x94\x0c\xa2\x3b\xf0\xa0\xc6\x1d\xa3\x6d\x81\x5b\xd3\x6e\x71\x5b\xb5\xed\xde\xe9\x1b\x21\xa8\xc7\x81\x23\x60\xa6\x61\x20\x10\x11\xfd\x57\xbb\x79\x33\x5d\xf7\x4e\xd0\x71\xe8\x40\x7c\x81\x9d\xd6\x23\xc2\x63\xc1\x63\xe6\xcf\x84\xd4\x17\x3b\xf7\x72\x70\x17\xe3\xbb\xec\xd9\x31\x0f\xa0\x5b\x72\x43\x32\x09\x61\xae\xaf\xc1\xcc\x1c\x5a\xbf\x06\x41\x6e\x76\x3e\x43\x8b\x6c\x77\x68\x52\xd7\x41\x8b\x6a\x91\xb4\x1f\x70\xb9\x2c\xc2\xe8\x71\xc8\x65\x79\x32\xfd\x45\x1b\xf9\x1d\x17\xb0\xb5\x83\x47\xfb\x02\xbf\x57\xd1\xd0\xbf\xf8\x7a\xa5\x5c\x98\x79\x22\x24\x0d\x6d\x28\xfb\xf8\x51\x91\x1d\x10\x31\xb5\x94\x30\x08\xd6\xab\xf2\x08\x0d\x8c\x56\xfd\xcd\xf1\xa0\x75\x1c\xe0\x61\xe8\xc4\x8b\x72\xa1\x78\x42\x53\xd5\x47\x1e\x3e\x6c\xc6\x68\x33\xc3\x99\x30\x30\xc3\x0d\x35\xe6\x8e\x89\x67\xf9\x9a\xae\x94\xfd\x99\x43\xd5\x0b\x49\x2c\x2f\xe8\x8c\x89\x77\xf0\x0e\xf6\x82\xfc\x2b\x9b\x0c\x07\xe5\xb5\x10\xb2\xda\xc1\x7e\xc9\xc3\x90\xc5\x4e\x80\x92\x57\xf8\x60\x73\xe6\xed\xad\x7e\xc6\xfb\x05\x27\x6c\x27\xdf\x7d\x60\x96\x99\x8a\xf1\x2a\xba\xe2\x05\xbb\x06\x87\x1d\xdd\x93\xe9\xd0\x62\x0f\x43\x52\xe0\xd8\xf2\xea\x63\x2f\x2f\x07\x96\xac\xe1\xe2\x05\x6b\xf1\xb0\x1b\xbb\x71\x57\xe3\x56\x80\x40\xcf\xd8\xec\xee\xc6\x62\xf5\x01\xe4\xb2\xca\x26\x27\xc4\xfe\x50\xb1\xa2\xeb\x0c\x3f\x0b\x80\xed\x8e\xa6\x21\xb0\xfc\x03\xb6\x94\x02\x56\x8f\x16\x4e\x06\xbd\xb3\xde\xf1\xa9\x57\x78\xc0\xc9\x78\xb4\x13\x9c\x9d\x1e\xe2\x82\x43\xa4\xe0\x47\x7f\x6a\x43\xc8\x27\xec\xdd\xc3\xcd\x4f\x57\xd1\xca\x8a\xf4\xb2\xbb\x71\x79\xa1\x23\xbe\xb8\xb8\xb8\x54\x29\x8c\x2b\x2e\x2e\x3c\x4f\x5f\x5a\x6c\x94\xc3\x6f\x78\xc0\x61\x6f\x91\xda\x0f\x38\x5a\x6f\x9b\x5a\x6b\xee\x77\x51\x4f\x7b\xfa\x2b\x9b\x4a\xed\x39\xb1\xb5\xc7\x9d\x43\xd8\x5a\x04\x43\xcb\x8f\x72\x70\x38\x20\x3d\xdf\x92\x9c\x35\x48\x1c\x8b\xe6\x67\x2f\x77\x7b\xd6\xa3\xf7\xc6\xbe\x8f\xaf\x46\xb5\x93\xc6\x4a\xa2\x2a\x27\x54\x02\xaa\x58\x1f\x33\xda\xd1\x98\x09\xca\x51\xbb\xf1\x37\xf0\x75\xf0\x3b\x29\xe0\xf7\xbd\xc2\xdc\xd0\x3d\x25\x99\x7d\xd3\xbd\xdc\xf5\x55\xc3\x0e\xce\x4f\xbb\xe8\xed\x7a\xb0\x50\xb6\xbb\xe2\x71\x28\x57\x3d\x19\x63\x02\x24\x13\x32\xcf\x63\x9d\xda\x5f\x1c\x41\xfc\xdc\xed\x58\xdb\xdd\xff\x06\x00\x00\xff\xff\xdf\x10\x68\x34\x07\x2d\x00\x00")

func fcs_lpc_motor_html_bytes() ([]byte, error) {
	return bindata_read(
		_fcs_lpc_motor_html,
		"fcs-lpc-motor.html",
	)
}

func fcs_lpc_motor_html() (*asset, error) {
	bytes, err := fcs_lpc_motor_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "fcs-lpc-motor.html", size: 11527, mode: os.FileMode(420), modTime: time.Unix(1455805809, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _index_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x58\xfd\x6e\xdb\xba\x15\xff\xdb\x7e\x0a\x96\x5b\x50\x07\x8e\xe4\xb4\x17\x18\x06\x7f\x64\xe8\x4d\x5b\xb4\x43\x9b\x16\x37\x29\x86\xbb\x24\x08\x68\x89\xb2\xd9\x50\xa4\x40\x52\x76\x7d\x0b\xbf\xd3\x9e\x61\x4f\xb6\x73\x48\x49\x96\x63\xd7\x35\xb6\x01\x09\x4c\x1e\x9e\x2f\x9e\x8f\x9f\x48\x8e\x9f\xbd\xfe\x74\x79\xf3\xfb\xe7\x37\x64\xee\x72\x79\xd1\x1d\x3f\x8b\x22\x72\xa9\x8b\x95\x11\xb3\xb9\x23\x2f\xcf\x5f\xfc\x85\xdc\xcc\x39\x99\xe9\x48\x5a\xeb\xc8\xab\xd2\xcd\xb5\xb1\x31\x79\x25\x25\xf1\x3c\x96\x18\x6e\xb9\x59\xf0\x34\xee\x12\x02\xd2\x5f\x2c\x27\x3a\x23\x6e\x2e\x2c\xb1\xba\x34\x09\x27\x89\x4e\x39\x81\xe9\x4c\x2f\xb8\x51\x3c\x25\xd3\x15\x61\xe4\xd7\xeb\xd7\x91\x75\x2b\xc9\x83\x9c\x14\x09\x57\x20\xeb\xe6\xcc\x91\x84\x29\x32\xe5\x24\xd3\xa5\x4a\x89\x50\x40\xe4\xe4\xc3\xfb\xcb\x37\x57\xd7\x6f\x48\x26\x24\x0f\xb6\xc0\xdf\xe0\x36\x21\xe3\x39\x67\x29\x0e\x60\x98\x73\xc7\x88\x62\x39\x9f\xd0\x85\xe0\xcb\x42\x1b\x47\xc1\x07\xe5\xb8\x72\x13\xba\x14\xa9\x9b\x4f\x52\xbe\x00\x7b\x91\x9f\x9c\x91\x5c\x28\x91\x97\x79\x64\x13\x26\xf9\xe4\x45\x7c\x7e\x06\x46\x85\x13\x4c\xb6\x49\x25\xec\xd3\xcf\xd9\x14\x48\x2b\x6e\x69\xdb\x60\x32\x67\xc6\x72\x30\x50\xba\x2c\xfa\x6b\xbd\xe4\x84\x93\xfc\xe2\xed\xe5\x35\xf9\xf0\xf9\x92\xdc\x70\xeb\xa6\x5c\x25\xf3\xf1\x20\x2c\x04\x26\x9b\x18\x51\x38\x62\x4d\x32\xa1\x53\xbd\xe4\xe6\x21\xd1\x79\xa1\x15\xf8\x6b\x07\x4b\x3e\xdd\xcc\xbe\x3e\x99\x47\x52\x38\x1e\x83\xfb\xf1\x57\xf0\x66\x3c\x08\x9a\x2a\xb5\x52\xa8\x47\xc8\x8e\x9c\x50\x91\x87\x20\xcc\x0d\xcf\xf6\x98\x28\x58\x81\x3b\xc3\x5c\x6c\x4f\xa2\x44\x32\x6b\xb9\x8d\x31\xcc\xf4\x27\x6a\xb3\x04\xdc\x29\x92\x28\xd7\x4e\x9b\x2d\x09\xaf\x2c\x8c\x89\x2f\x34\xf2\xbd\x9a\x10\x82\x25\x91\x49\xbd\x8c\x56\x43\xc2\x4a\xa7\x47\xd5\xca\xba\xfa\x9d\xea\x74\xd5\x62\xcf\x20\x8d\x51\xc6\x72\x21\x81\xff\xf9\x6f\x7a\x0a\xc6\x9e\x9f\x91\xe7\xef\xb8\x5c\x70\x27\x12\x46\xae\x78\xc9\x81\xd2\x10\xce\xc8\x2b\x03\x89\x3c\x23\x96\x29\x1b\x41\x0a\x45\x36\xda\x56\xb7\xe4\x58\xc8\x43\xf2\xcb\xf9\xf9\xb6\x75\x88\x67\xed\xf9\x78\x50\x17\xd8\xb8\x8e\xf1\x82\x19\x02\x7b\x26\x13\x70\xaf\xc3\xd2\xd4\x0c\x09\xfd\xfe\x3d\x7e\x05\xa3\xf5\x9a\x9e\x75\x3b\x10\x3b\xf7\x50\x16\x29\x73\x1c\x96\xae\x06\xaf\x90\x68\x40\x0d\xb8\x9e\x31\x69\x39\x4c\xa1\x6a\xd4\x10\x15\x74\x92\x3c\xb5\x43\xa2\x4a\x29\x81\xdc\x01\x21\xd6\xcc\xd6\xf0\x9f\xeb\x8a\xcf\xf1\xbc\x00\xc6\xdb\xdb\xfb\xb3\xfa\xef\x1e\x25\x0a\x6d\xa1\x62\x91\xeb\xd6\xcf\x4d\x91\xdb\x6a\x8c\xf2\x85\xd4\xee\x41\x17\xc8\x61\x83\x22\xc9\x67\x5c\xa5\x61\xdc\x92\xa6\x6a\x89\x7e\x76\x3a\x4a\x5f\x6a\x59\xe6\xc8\xfe\xd2\x13\xa6\x2c\x79\x9c\x19\x6c\xc9\x4f\x05\x4b\x84\x83\x6d\x9c\xc7\x2f\x61\x05\xf5\x77\xbe\xb1\x6f\xa2\xd2\x0c\xce\xa6\xb8\x65\x27\x72\x1e\x74\xe1\xe8\x0f\xa8\x36\x20\x4e\x8d\x5e\x42\x16\x36\xf4\x4c\x9b\x9c\x41\xf8\xe9\xc9\xef\x83\x93\x7c\x70\x92\xde\xa9\x93\x77\xc3\x93\x8f\xc3\x93\x6b\x5a\x2b\x5f\xb5\x94\xb7\x5c\xf5\x08\xe4\x35\x79\x2e\xcb\x25\x4f\xc2\x52\xdb\x8d\x6f\xb5\x1a\xf8\x5f\x8f\xba\x5d\x48\x5a\x5c\x42\x3c\x58\x7a\xed\x53\xf9\x16\x00\x05\xb2\x98\x95\xca\x0b\xf7\xf8\x02\xba\xe2\x14\x54\xac\xdb\xbc\x97\x3a\xcf\x99\x4a\xed\x21\x4e\x84\x42\x77\x90\xb1\xf3\x59\xcb\x55\xce\x4d\x9c\xea\xbc\xa2\xc6\x52\x03\xa6\xdc\x30\x33\xe3\x2e\x2e\x98\x01\xda\x1b\xc9\x73\xf8\x09\xfa\x7a\xa7\xa3\x5a\xbf\x85\x84\x55\xea\xf7\x6b\xc7\x9a\xc4\xd2\x09\x45\xd9\x71\xab\x02\x03\x90\x38\xe9\x83\x84\x98\x38\x24\x9e\x3b\xc6\x31\x86\x64\xd4\xf5\xb5\x16\x2f\x98\x2c\x31\x0a\x57\x65\x3e\xe5\xa6\x97\xea\xa4\xf4\x2e\x80\x53\x95\x37\xbf\xae\xde\xa7\x3d\xdf\xe5\xa0\x2f\xa2\xfd\x8d\x9e\x3e\x8d\xac\x14\x29\x24\xf5\x34\xe8\x01\x8f\x3b\x00\xb8\x56\x03\x52\x4b\x3d\xeb\x51\x74\x5c\xa8\x19\xa0\xb0\x77\x1e\x7c\xea\xff\xfd\xfa\xd3\x55\x6c\x9d\x01\xb2\xc8\x56\x3d\x74\xe2\x14\xe4\xba\x1d\xdc\x28\xb6\x45\x8c\x1d\xe1\xb7\xdc\xfb\x01\x6f\x13\xf5\x0c\x02\x35\xff\xa8\x55\x3b\x28\x9e\x09\xa2\x00\x0a\xb5\x21\x3d\x8c\x8c\x80\xf5\xf3\x11\xfc\x8c\x7d\x90\x62\xdf\x4a\xb1\xe4\x6a\xe6\xe6\x40\xee\xf7\x7d\x0c\xbd\x03\xd0\x6e\x61\xf9\x56\xdc\xc7\x45\x69\xe7\xbd\x5b\x24\xb7\x5a\x1a\x23\x73\x03\xe5\xdb\x3b\x3d\x6b\x69\x03\xf6\x7b\xdc\xfd\xba\xdb\xa8\xa9\xeb\xf5\x48\x35\x4c\xcd\x24\xf7\x3a\x6a\x05\xd8\xc9\x47\x0a\x23\xeb\xbd\x8f\xe2\x9f\x7b\xf4\x4f\x98\x2b\x50\x10\xa1\x67\xdc\x30\x57\x1a\x0e\x19\x2a\x8c\x2e\x7a\xb4\x82\x02\x7a\x86\x18\x16\xb7\xd1\x01\x4d\xb7\xa5\x6b\xff\xff\x0b\x51\x74\xe7\x38\xb1\x9f\x3b\x8c\xfb\x03\xd9\xdb\xed\xec\x9c\xdf\x07\x75\x1b\xca\x8b\x1d\xca\xcb\x1d\xca\x2f\x21\x49\x07\x77\xf9\xd4\x5e\xcd\xb0\x23\xb9\xb5\xc9\xa7\x52\x75\x42\xa0\x54\x97\x42\xa5\x7a\x19\x6b\x85\x68\xd2\xae\x54\x5f\x75\x4d\xd5\x57\xed\xab\xf8\x92\xfc\x83\x4f\xaf\x75\xf2\x08\x10\x40\x97\x76\x38\x18\x50\xd2\xf7\x1b\xc1\x8f\x0d\x0c\xe9\xc0\x5b\xab\x4b\xa5\xe9\x99\x63\xa5\x91\x97\x6e\xb7\x9c\x2f\x22\xad\x74\xc1\xd5\x13\x0f\xd7\xbb\x5c\x89\xd4\x96\xef\xb0\xed\xf2\xe5\xdc\x5a\x36\xdb\x0f\xb1\xa1\xdb\x5a\x25\x5d\x39\xff\x1a\x86\x08\x7c\xf0\x25\x3c\x84\x44\xd6\x41\x91\xd8\x28\x88\x42\x12\x84\x52\xdc\xbc\xbb\xf9\xf8\x61\xf2\xb4\x53\x9c\xfe\x72\x73\x79\xed\x21\x24\xe8\x6d\x41\xa5\x87\x97\x02\x8f\x6f\xc1\x31\xef\xb8\x67\xda\x86\x97\x5e\x43\xdf\x02\x37\xff\xad\xfe\x21\xa0\x75\x3a\x47\x6e\xc2\x9f\x0c\x60\x0f\x0c\x42\xb4\xc0\x38\x84\x8e\x46\xea\xb1\x71\x30\x1a\x7e\x21\xbe\x51\x2a\x4c\x3b\x1a\x8d\xb2\x6a\xfd\x01\xd6\xc3\x97\xf2\x68\xcd\xa1\xc8\x77\x35\x02\xfd\x58\x1d\x1e\xd9\xf6\x29\xf1\x0b\x3e\xdc\x0d\x52\x4f\x10\xa7\xc7\xbb\x28\xdd\x80\xf4\x51\x16\x51\x14\xbe\x54\x62\x8f\xcd\x1a\xad\xfb\x94\xfc\xfb\x5f\x97\x14\xad\x63\xed\x76\x44\x46\x7a\x21\xeb\x10\x77\xf2\xac\x9d\x85\xca\xf0\x66\xf5\x69\x8a\x0e\xfb\x84\x5f\x4d\xcf\xfa\xe4\x63\x89\x7d\x51\xab\xf4\x5a\x7c\x00\x7c\x1b\xdf\xe2\xb4\xb3\x91\x6e\xa5\x37\xa4\x2f\x9c\xa2\x5a\x1c\x45\xfe\x94\xe4\x83\xbb\x81\x37\xbf\x7a\xdf\xd8\x49\x85\xc5\xdb\x0c\xe2\xd1\xb3\x5d\x2f\x0c\x13\xd6\xaf\xb5\x96\x7c\x08\xf6\x7c\x51\xc1\xe3\xdd\x4f\x69\xbd\x19\x60\x83\x75\x08\xb7\x57\xfd\xc3\x38\x89\xb4\x7d\x94\x68\xf9\x56\x0f\x8f\x11\x2f\xa7\xb9\x70\xff\xbb\x78\xb3\xf7\x30\xf0\xa2\x6b\x5f\x25\x9d\xf5\xce\x29\xe5\xa7\x90\x59\x71\xed\x87\xcc\x1d\xb6\xc3\x88\x89\x21\xd5\xd3\xaf\x07\x81\xab\x09\x3b\x30\xc6\x22\xdd\xc1\x2c\xa8\x1f\x0e\x28\x93\x12\xb0\xb8\xe7\x34\x06\x52\x01\xbb\xec\x52\xb8\x64\x4e\x90\x70\x4b\xa1\xab\x66\x9c\xde\x57\xa9\x4d\x18\x6c\x85\xc2\x1d\x22\x4a\xe1\x64\x4f\x87\x07\x63\x4b\xad\x80\xeb\x75\xe1\xdb\xb0\x8d\x71\xfe\x1e\x14\xd2\x82\x9d\xe7\xcd\x70\x63\xe8\x3d\xb6\x1e\x5e\x7f\xea\x3a\x3a\xa0\x59\x65\xa5\xc5\xae\x40\x57\x68\xbf\x9e\x3e\x88\x74\xbb\xed\x77\xb7\x58\x99\x3a\x0d\xf6\xd7\xdb\x5e\xe4\x76\xb6\xc7\x0b\x8c\xab\xe3\xdf\x1c\xe8\xa3\xe3\xc2\x70\xe2\x6f\x88\x93\x3b\x8a\xc4\x88\x49\x31\x83\xcb\x87\xe4\x99\xbb\xa3\x17\x74\xb4\x91\x01\x6d\x55\x32\x60\x14\xdb\x02\xee\xed\x3d\x7a\xa7\x68\x65\x3b\x74\x54\xab\x9b\x90\x6b\xbb\x9b\x48\x60\xec\x78\xeb\xfd\x09\x72\x40\x3f\xe1\x87\x7c\x3c\x35\x8d\xad\xb0\x89\x86\x89\x8e\x07\xe0\xe4\x05\xfd\x3f\x85\x10\xd5\xb6\x83\x35\x05\x4c\x78\x1c\x6d\x8a\x01\x0f\x75\xc7\x55\x43\x6d\xd0\x4b\x1c\xb0\x18\xea\x6e\x01\xa9\x18\xed\xb5\xf8\x87\x28\xda\x06\x03\xa4\x2d\xb0\xe5\x7f\x6a\xda\x70\x7c\xbd\x78\x62\x7c\xb4\x51\x23\xdb\x5a\x12\xb0\xeb\x78\xa5\x08\xf0\x1c\xee\xac\x75\xee\x52\x19\xfb\x4e\xdb\x68\x0e\x18\x12\x21\x53\x84\xa7\x2e\x91\x36\x9c\x39\x77\x73\x9d\x4e\x28\xe0\xb1\xa3\x0d\x95\xf9\x1e\x9f\xd0\xb9\x73\x05\x9c\xd4\x9a\x57\x84\x01\x1c\x18\xfd\x71\xf1\x6f\xf8\xe8\x35\x81\x3b\x97\xc2\xb7\xb4\x2f\xbf\xbd\xc7\x1a\x8d\xf1\xdd\xa5\xe5\x44\x2b\x6c\x50\x9b\xfe\x19\x67\x5a\x3a\x07\xd7\xa2\x0a\xcb\x10\x7f\x44\xf2\x08\xd5\x1a\x3c\x7c\x0b\x0e\xf6\xe0\xf3\x08\xb8\x77\x7a\x47\x89\x7f\xec\x81\xc5\x44\x4b\x6d\xb2\x52\x02\x49\xa4\xc8\x5c\xef\xab\xf6\x66\x3b\x66\x7d\x0a\xb5\xfe\xba\x5a\x22\xff\x7c\xff\x19\xeb\xb1\x77\x2d\xf2\x52\xfa\xaf\x15\x89\x48\x65\x63\x3c\x68\x7b\x55\xd7\x2c\xe4\x2b\x66\x45\x81\x57\xdb\xb9\x90\x69\x2f\x95\xa7\x23\xb2\x9d\x6c\x8f\xb9\x9d\xee\xda\x3f\xc4\xd4\xef\x2f\x30\xc1\xb9\x7f\x20\x2a\x15\x1c\xd1\xb4\xf4\x80\xe6\x77\x41\x25\x5b\xe9\xd2\x91\x05\x37\xf8\x08\x24\x49\x02\x79\x03\xd3\xe1\xa7\x7e\x98\xda\x7a\xb2\x8a\xc0\x89\x8b\xf1\x60\x97\xe6\xad\xa2\x99\x8b\xee\x78\x10\x1e\x1c\xff\x13\x00\x00\xff\xff\xb1\x47\x0a\x45\x38\x15\x00\x00")

func index_html_bytes() ([]byte, error) {
	return bindata_read(
		_index_html,
		"index.html",
	)
}

func index_html() (*asset, error) {
	bytes, err := index_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "index.html", size: 5432, mode: os.FileMode(420), modTime: time.Unix(1455806174, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"bower.json": bower_json,
	"favicon.ico": favicon_ico,
	"fcs-lpc-motor.html": fcs_lpc_motor_html,
	"index.html": index_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"bower.json": &_bintree_t{bower_json, map[string]*_bintree_t{
	}},
	"favicon.ico": &_bintree_t{favicon_ico, map[string]*_bintree_t{
	}},
	"fcs-lpc-motor.html": &_bintree_t{fcs_lpc_motor_html, map[string]*_bintree_t{
	}},
	"index.html": &_bintree_t{index_html, map[string]*_bintree_t{
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: AssetInfo, Prefix: k}
	}
	panic("unreachable")
}
